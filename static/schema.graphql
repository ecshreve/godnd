type AbilityScore {
  _id: ObjectId
  desc: [String]
  full_name: String
  index: String
  name: String
  skills: [AbilityScoreSkill]
  url: String
}

input AbilityScoreInsertInput {
  url: String
  _id: ObjectId
  desc: [String]
  full_name: String
  index: String
  name: String
  skills: [AbilityScoreSkillInsertInput]
}

input AbilityScoreQueryInput {
  skills: [AbilityScoreSkillQueryInput]
  url: String
  skills_nin: [AbilityScoreSkillQueryInput]
  full_name_nin: [String]
  _id_ne: ObjectId
  index: String
  name_lte: String
  full_name_in: [String]
  index_exists: Boolean
  url_nin: [String]
  full_name_gt: String
  OR: [AbilityScoreQueryInput!]
  _id_nin: [ObjectId]
  full_name: String
  _id: ObjectId
  _id_in: [ObjectId]
  name_ne: String
  full_name_lte: String
  desc_in: [String]
  name_in: [String]
  index_ne: String
  index_gt: String
  url_lte: String
  url_exists: Boolean
  skills_in: [AbilityScoreSkillQueryInput]
  desc_nin: [String]
  full_name_exists: Boolean
  _id_exists: Boolean
  index_lte: String
  url_lt: String
  name_nin: [String]
  _id_gt: ObjectId
  full_name_ne: String
  url_in: [String]
  name_gt: String
  name_gte: String
  url_gte: String
  index_nin: [String]
  full_name_lt: String
  url_ne: String
  full_name_gte: String
  url_gt: String
  _id_lte: ObjectId
  AND: [AbilityScoreQueryInput!]
  _id_gte: ObjectId
  index_gte: String
  _id_lt: ObjectId
  name: String
  desc_exists: Boolean
  desc: [String]
  name_exists: Boolean
  index_lt: String
  name_lt: String
  skills_exists: Boolean
  index_in: [String]
}

type AbilityScoreSkill {
  index: String
  name: String
  url: String
}

input AbilityScoreSkillInsertInput {
  url: String
  index: String
  name: String
}

input AbilityScoreSkillQueryInput {
  name_exists: Boolean
  url_nin: [String]
  index_nin: [String]
  name_nin: [String]
  index_in: [String]
  name: String
  AND: [AbilityScoreSkillQueryInput!]
  index_gte: String
  index_exists: Boolean
  index_gt: String
  index_lt: String
  name_lt: String
  index_ne: String
  index: String
  url_ne: String
  OR: [AbilityScoreSkillQueryInput!]
  url_gt: String
  url_lt: String
  index_lte: String
  name_lte: String
  name_gt: String
  url_in: [String]
  url_lte: String
  name_ne: String
  name_in: [String]
  name_gte: String
  url_exists: Boolean
  url: String
  url_gte: String
}

input AbilityScoreSkillUpdateInput {
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
}

enum AbilityScoreSortByInput {
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  URL_DESC
  URL_ASC
  _ID_ASC
  FULL_NAME_ASC
  FULL_NAME_DESC
  NAME_ASC
  NAME_DESC
}

input AbilityScoreUpdateInput {
  skills: [AbilityScoreSkillUpdateInput]
  full_name: String
  desc_unset: Boolean
  _id: ObjectId
  skills_unset: Boolean
  name_unset: Boolean
  index_unset: Boolean
  index: String
  full_name_unset: Boolean
  _id_unset: Boolean
  url_unset: Boolean
  name: String
  url: String
  desc: [String]
}

type Class {
  _id: ObjectId
  class_levels: String
  hit_die: Int
  index: String
  name: String
  proficiencies: [ClassProficiency]
  proficiency_choices: [ClassProficiency_choice]
  saving_throws: [ClassSaving_throw]
  spellcasting: String
  spells: String
  starting_equipment: String
  subclasses: [ClassSubclass]
  url: String
}

input ClassInsertInput {
  class_levels: String
  index: String
  starting_equipment: String
  name: String
  saving_throws: [ClassSaving_throwInsertInput]
  proficiency_choices: [ClassProficiency_choiceInsertInput]
  _id: ObjectId
  proficiencies: [ClassProficiencyInsertInput]
  subclasses: [ClassSubclassInsertInput]
  hit_die: Int
  spellcasting: String
  spells: String
  url: String
}

type ClassProficiency {
  index: String
  name: String
  url: String
}

type ClassProficiency_choice {
  choose: Int
  from: [ClassProficiency_choiceFrom]
  type: String
}

type ClassProficiency_choiceFrom {
  index: String
  name: String
  url: String
}

input ClassProficiency_choiceFromInsertInput {
  index: String
  name: String
  url: String
}

input ClassProficiency_choiceFromQueryInput {
  index: String
  name_gte: String
  url_lt: String
  url_in: [String]
  url_ne: String
  index_lte: String
  url_exists: Boolean
  url_gte: String
  url: String
  name_lte: String
  index_exists: Boolean
  name_nin: [String]
  name_exists: Boolean
  AND: [ClassProficiency_choiceFromQueryInput!]
  index_lt: String
  name: String
  name_ne: String
  url_gt: String
  index_nin: [String]
  name_lt: String
  url_nin: [String]
  OR: [ClassProficiency_choiceFromQueryInput!]
  index_in: [String]
  name_in: [String]
  index_gt: String
  index_gte: String
  name_gt: String
  url_lte: String
  index_ne: String
}

input ClassProficiency_choiceFromUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input ClassProficiency_choiceInsertInput {
  choose: Int
  from: [ClassProficiency_choiceFromInsertInput]
  type: String
}

input ClassProficiency_choiceQueryInput {
  from: [ClassProficiency_choiceFromQueryInput]
  choose: Int
  choose_gt: Int
  type_lte: String
  choose_lt: Int
  choose_lte: Int
  from_exists: Boolean
  choose_ne: Int
  type_gte: String
  type_lt: String
  AND: [ClassProficiency_choiceQueryInput!]
  from_in: [ClassProficiency_choiceFromQueryInput]
  choose_in: [Int]
  choose_nin: [Int]
  type_gt: String
  type_nin: [String]
  type_in: [String]
  type_exists: Boolean
  from_nin: [ClassProficiency_choiceFromQueryInput]
  type_ne: String
  type: String
  choose_gte: Int
  OR: [ClassProficiency_choiceQueryInput!]
  choose_exists: Boolean
}

input ClassProficiency_choiceUpdateInput {
  type: String
  type_unset: Boolean
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
  from: [ClassProficiency_choiceFromUpdateInput]
  from_unset: Boolean
}

input ClassProficiencyInsertInput {
  index: String
  name: String
  url: String
}

input ClassProficiencyQueryInput {
  index_lte: String
  url_exists: Boolean
  name_ne: String
  url_ne: String
  index_in: [String]
  AND: [ClassProficiencyQueryInput!]
  name_in: [String]
  url_gt: String
  name_nin: [String]
  url: String
  index_ne: String
  name_lt: String
  url_lt: String
  index_exists: Boolean
  url_in: [String]
  name_gt: String
  name_exists: Boolean
  index_gt: String
  index_nin: [String]
  url_nin: [String]
  url_gte: String
  name_lte: String
  name: String
  name_gte: String
  index_gte: String
  index_lt: String
  OR: [ClassProficiencyQueryInput!]
  url_lte: String
  index: String
}

input ClassProficiencyUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input ClassQueryInput {
  spells: String
  _id_nin: [ObjectId]
  starting_equipment_lte: String
  index: String
  proficiency_choices: [ClassProficiency_choiceQueryInput]
  class_levels_gt: String
  hit_die_gt: Int
  hit_die_in: [Int]
  proficiencies_exists: Boolean
  url_exists: Boolean
  index_gte: String
  _id_in: [ObjectId]
  starting_equipment_nin: [String]
  index_nin: [String]
  saving_throws_nin: [ClassSaving_throwQueryInput]
  saving_throws: [ClassSaving_throwQueryInput]
  spells_nin: [String]
  class_levels: String
  subclasses_nin: [ClassSubclassQueryInput]
  spells_lte: String
  spellcasting_gte: String
  class_levels_ne: String
  proficiencies: [ClassProficiencyQueryInput]
  proficiencies_in: [ClassProficiencyQueryInput]
  name_lte: String
  AND: [ClassQueryInput!]
  subclasses_in: [ClassSubclassQueryInput]
  name_nin: [String]
  url_lt: String
  class_levels_nin: [String]
  name_gte: String
  name: String
  saving_throws_exists: Boolean
  hit_die: Int
  hit_die_exists: Boolean
  url_nin: [String]
  _id_lt: ObjectId
  starting_equipment_gt: String
  starting_equipment_lt: String
  _id_gte: ObjectId
  hit_die_gte: Int
  index_in: [String]
  name_gt: String
  name_in: [String]
  index_lt: String
  url_lte: String
  url_gt: String
  _id_exists: Boolean
  saving_throws_in: [ClassSaving_throwQueryInput]
  spellcasting_ne: String
  hit_die_lt: Int
  class_levels_lte: String
  hit_die_lte: Int
  index_lte: String
  starting_equipment: String
  spells_exists: Boolean
  class_levels_in: [String]
  subclasses: [ClassSubclassQueryInput]
  name_exists: Boolean
  url_gte: String
  _id_gt: ObjectId
  index_gt: String
  spellcasting_in: [String]
  _id_ne: ObjectId
  spells_in: [String]
  class_levels_exists: Boolean
  spellcasting_gt: String
  starting_equipment_exists: Boolean
  OR: [ClassQueryInput!]
  proficiency_choices_nin: [ClassProficiency_choiceQueryInput]
  spells_ne: String
  hit_die_nin: [Int]
  proficiency_choices_exists: Boolean
  spellcasting_nin: [String]
  spells_gt: String
  spells_lt: String
  url_in: [String]
  starting_equipment_gte: String
  url_ne: String
  _id_lte: ObjectId
  spellcasting: String
  hit_die_ne: Int
  class_levels_gte: String
  _id: ObjectId
  name_ne: String
  spells_gte: String
  spellcasting_lt: String
  spellcasting_exists: Boolean
  starting_equipment_in: [String]
  index_ne: String
  index_exists: Boolean
  name_lt: String
  subclasses_exists: Boolean
  starting_equipment_ne: String
  spellcasting_lte: String
  proficiency_choices_in: [ClassProficiency_choiceQueryInput]
  proficiencies_nin: [ClassProficiencyQueryInput]
  class_levels_lt: String
  url: String
}

type ClassSaving_throw {
  index: String
  name: String
  url: String
}

input ClassSaving_throwInsertInput {
  url: String
  index: String
  name: String
}

input ClassSaving_throwQueryInput {
  name_lt: String
  name_nin: [String]
  url_exists: Boolean
  name_gt: String
  index_lte: String
  url_gte: String
  name: String
  index: String
  AND: [ClassSaving_throwQueryInput!]
  url: String
  name_lte: String
  OR: [ClassSaving_throwQueryInput!]
  name_in: [String]
  url_ne: String
  url_in: [String]
  url_gt: String
  index_ne: String
  name_ne: String
  index_nin: [String]
  name_gte: String
  index_in: [String]
  index_exists: Boolean
  index_gte: String
  name_exists: Boolean
  url_lte: String
  index_lt: String
  url_nin: [String]
  index_gt: String
  url_lt: String
}

input ClassSaving_throwUpdateInput {
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
}

enum ClassSortByInput {
  HIT_DIE_ASC
  SPELLS_DESC
  STARTING_EQUIPMENT_DESC
  SPELLCASTING_ASC
  SPELLCASTING_DESC
  CLASS_LEVELS_ASC
  CLASS_LEVELS_DESC
  HIT_DIE_DESC
  URL_DESC
  _ID_DESC
  URL_ASC
  NAME_ASC
  NAME_DESC
  INDEX_DESC
  SPELLS_ASC
  STARTING_EQUIPMENT_ASC
  _ID_ASC
  INDEX_ASC
}

type ClassSubclass {
  index: String
  name: String
  url: String
}

input ClassSubclassInsertInput {
  url: String
  index: String
  name: String
}

input ClassSubclassQueryInput {
  name: String
  url: String
  url_exists: Boolean
  index_lt: String
  name_lt: String
  url_nin: [String]
  AND: [ClassSubclassQueryInput!]
  name_ne: String
  index_nin: [String]
  url_gte: String
  name_in: [String]
  name_lte: String
  name_gt: String
  name_gte: String
  index_in: [String]
  index_gte: String
  index_lte: String
  index_ne: String
  name_exists: Boolean
  url_in: [String]
  index_gt: String
  OR: [ClassSubclassQueryInput!]
  name_nin: [String]
  url_lt: String
  url_gt: String
  url_lte: String
  url_ne: String
  index_exists: Boolean
  index: String
}

input ClassSubclassUpdateInput {
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
}

input ClassUpdateInput {
  hit_die_unset: Boolean
  starting_equipment: String
  class_levels_unset: Boolean
  subclasses: [ClassSubclassUpdateInput]
  hit_die: Int
  index_unset: Boolean
  _id_unset: Boolean
  spells: String
  url: String
  index: String
  subclasses_unset: Boolean
  proficiency_choices: [ClassProficiency_choiceUpdateInput]
  spellcasting: String
  hit_die_inc: Int
  proficiencies: [ClassProficiencyUpdateInput]
  name_unset: Boolean
  saving_throws: [ClassSaving_throwUpdateInput]
  proficiency_choices_unset: Boolean
  spellcasting_unset: Boolean
  _id: ObjectId
  name: String
  proficiencies_unset: Boolean
  class_levels: String
  starting_equipment_unset: Boolean
  spells_unset: Boolean
  url_unset: Boolean
  saving_throws_unset: Boolean
}

type Condition {
  _id: ObjectId
  desc: [String]
  index: String
  name: String
  url: String
}

input ConditionInsertInput {
  url: String
  _id: ObjectId
  desc: [String]
  index: String
  name: String
}

input ConditionQueryInput {
  name_lt: String
  index_nin: [String]
  _id_lt: ObjectId
  name_gte: String
  _id: ObjectId
  url_lt: String
  index_gt: String
  url_ne: String
  desc_in: [String]
  name: String
  _id_ne: ObjectId
  url_in: [String]
  OR: [ConditionQueryInput!]
  name_exists: Boolean
  url_nin: [String]
  name_ne: String
  url_lte: String
  index_lt: String
  name_lte: String
  url: String
  url_exists: Boolean
  _id_lte: ObjectId
  url_gt: String
  _id_gt: ObjectId
  index: String
  index_in: [String]
  AND: [ConditionQueryInput!]
  index_ne: String
  url_gte: String
  name_in: [String]
  _id_gte: ObjectId
  _id_in: [ObjectId]
  index_gte: String
  desc: [String]
  index_lte: String
  desc_nin: [String]
  desc_exists: Boolean
  name_nin: [String]
  name_gt: String
  index_exists: Boolean
  _id_nin: [ObjectId]
  _id_exists: Boolean
}

enum ConditionSortByInput {
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
}

input ConditionUpdateInput {
  desc: [String]
  _id: ObjectId
  desc_unset: Boolean
  index_unset: Boolean
  name: String
  index: String
  url: String
  _id_unset: Boolean
  name_unset: Boolean
  url_unset: Boolean
}

type DamageType {
  _id: ObjectId
  desc: [String]
  index: String
  name: String
  url: String
}

input DamageTypeInsertInput {
  url: String
  _id: ObjectId
  desc: [String]
  index: String
  name: String
}

input DamageTypeQueryInput {
  url_lte: String
  _id_in: [ObjectId]
  url: String
  name_nin: [String]
  name_lte: String
  _id_gte: ObjectId
  index_gt: String
  name_in: [String]
  url_nin: [String]
  name_exists: Boolean
  _id: ObjectId
  index_gte: String
  _id_lt: ObjectId
  AND: [DamageTypeQueryInput!]
  name_gte: String
  index_nin: [String]
  name_lt: String
  url_gt: String
  index_in: [String]
  desc: [String]
  index_ne: String
  name: String
  index: String
  url_gte: String
  url_lt: String
  _id_lte: ObjectId
  OR: [DamageTypeQueryInput!]
  _id_exists: Boolean
  index_lt: String
  url_in: [String]
  index_exists: Boolean
  _id_gt: ObjectId
  index_lte: String
  desc_in: [String]
  url_ne: String
  desc_nin: [String]
  desc_exists: Boolean
  _id_ne: ObjectId
  url_exists: Boolean
  _id_nin: [ObjectId]
  name_gt: String
  name_ne: String
}

enum DamageTypeSortByInput {
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
}

input DamageTypeUpdateInput {
  desc_unset: Boolean
  index_unset: Boolean
  name: String
  index: String
  _id_unset: Boolean
  desc: [String]
  name_unset: Boolean
  url_unset: Boolean
  _id: ObjectId
  url: String
}

type DeleteManyPayload {
  deletedCount: Int!
}

type Equipment {
  H_damage: EquipmentH_damage
  _id: ObjectId
  armor_category: String
  armor_class: EquipmentArmor_class
  capacity: String
  category_range: String
  contents: [EquipmentContent]
  cost: EquipmentCost
  damage: EquipmentDamage
  desc: [String]
  equipment_category: EquipmentEquipment_category
  gear_category: EquipmentGear_category
  index: String
  name: String
  properties: [EquipmentProperty]
  quantity: Int
  range: EquipmentRange
  special: [String]
  speed: EquipmentSpeed
  stealth_disadvantage: Boolean
  str_minimum: Int
  throw_range: EquipmentThrow_range
  tool_category: String
  url: String
  vehicle_category: String
  weapon_category: String
  weapon_range: String
  weight: Int
}

type EquipmentArmor_class {
  base: Int
  dex_bonus: Boolean
  max_bonus: Int
}

input EquipmentArmor_classInsertInput {
  dex_bonus: Boolean
  max_bonus: Int
  base: Int
}

input EquipmentArmor_classQueryInput {
  max_bonus_gte: Int
  dex_bonus_exists: Boolean
  max_bonus_exists: Boolean
  max_bonus_ne: Int
  base_gt: Int
  base_gte: Int
  OR: [EquipmentArmor_classQueryInput!]
  max_bonus_in: [Int]
  max_bonus: Int
  max_bonus_nin: [Int]
  AND: [EquipmentArmor_classQueryInput!]
  dex_bonus_ne: Boolean
  base_lte: Int
  dex_bonus: Boolean
  base: Int
  base_lt: Int
  max_bonus_lte: Int
  base_nin: [Int]
  max_bonus_lt: Int
  base_exists: Boolean
  max_bonus_gt: Int
  base_ne: Int
  base_in: [Int]
}

input EquipmentArmor_classUpdateInput {
  base: Int
  base_inc: Int
  base_unset: Boolean
  dex_bonus: Boolean
  dex_bonus_unset: Boolean
  max_bonus: Int
  max_bonus_unset: Boolean
  max_bonus_inc: Int
}

type EquipmentCategory {
  _id: ObjectId
  equipment: [EquipmentCategoryEquipment]
  index: String
  name: String
  url: String
}

type EquipmentCategoryEquipment {
  index: String
  name: String
  url: String
}

input EquipmentCategoryEquipmentInsertInput {
  url: String
  index: String
  name: String
}

input EquipmentCategoryEquipmentQueryInput {
  url_in: [String]
  index_gte: String
  url: String
  index_lte: String
  index_nin: [String]
  url_exists: Boolean
  url_lt: String
  name_in: [String]
  url_gt: String
  index_exists: Boolean
  AND: [EquipmentCategoryEquipmentQueryInput!]
  name_exists: Boolean
  name_nin: [String]
  name_lte: String
  name_lt: String
  name_ne: String
  index: String
  url_nin: [String]
  index_lt: String
  url_gte: String
  url_ne: String
  index_ne: String
  name_gt: String
  name_gte: String
  OR: [EquipmentCategoryEquipmentQueryInput!]
  index_gt: String
  index_in: [String]
  url_lte: String
  name: String
}

input EquipmentCategoryEquipmentUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input EquipmentCategoryInsertInput {
  _id: ObjectId
  equipment: [EquipmentCategoryEquipmentInsertInput]
  index: String
  name: String
  url: String
}

input EquipmentCategoryQueryInput {
  name_ne: String
  url_nin: [String]
  equipment: [EquipmentCategoryEquipmentQueryInput]
  url_gt: String
  _id_nin: [ObjectId]
  url_exists: Boolean
  _id_ne: ObjectId
  _id_in: [ObjectId]
  name_lt: String
  OR: [EquipmentCategoryQueryInput!]
  index_lte: String
  url_ne: String
  index_in: [String]
  equipment_in: [EquipmentCategoryEquipmentQueryInput]
  name: String
  name_lte: String
  AND: [EquipmentCategoryQueryInput!]
  index_gte: String
  url_in: [String]
  url_lt: String
  index_nin: [String]
  url_lte: String
  index_gt: String
  url: String
  _id_exists: Boolean
  index_lt: String
  _id_lte: ObjectId
  url_gte: String
  _id: ObjectId
  name_in: [String]
  name_exists: Boolean
  _id_gte: ObjectId
  name_nin: [String]
  _id_lt: ObjectId
  equipment_exists: Boolean
  index_ne: String
  index: String
  name_gt: String
  equipment_nin: [EquipmentCategoryEquipmentQueryInput]
  index_exists: Boolean
  name_gte: String
  _id_gt: ObjectId
}

enum EquipmentCategorySortByInput {
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
}

input EquipmentCategoryUpdateInput {
  index: String
  url: String
  _id_unset: Boolean
  equipment: [EquipmentCategoryEquipmentUpdateInput]
  equipment_unset: Boolean
  index_unset: Boolean
  name: String
  url_unset: Boolean
  _id: ObjectId
  name_unset: Boolean
}

type EquipmentContent {
  item: EquipmentContentItem
  quantity: Int
}

input EquipmentContentInsertInput {
  quantity: Int
  item: EquipmentContentItemInsertInput
}

type EquipmentContentItem {
  index: String
  name: String
  url: String
}

input EquipmentContentItemInsertInput {
  index: String
  name: String
  url: String
}

input EquipmentContentItemQueryInput {
  name_gt: String
  name_nin: [String]
  url_nin: [String]
  OR: [EquipmentContentItemQueryInput!]
  index_in: [String]
  name_in: [String]
  index: String
  url_lt: String
  url_in: [String]
  url_exists: Boolean
  index_lt: String
  name_lt: String
  url_gt: String
  index_gte: String
  name: String
  name_exists: Boolean
  url: String
  url_gte: String
  url_lte: String
  index_ne: String
  name_gte: String
  index_gt: String
  index_nin: [String]
  name_lte: String
  index_lte: String
  url_ne: String
  name_ne: String
  index_exists: Boolean
  AND: [EquipmentContentItemQueryInput!]
}

input EquipmentContentItemUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input EquipmentContentQueryInput {
  OR: [EquipmentContentQueryInput!]
  quantity: Int
  quantity_lte: Int
  quantity_in: [Int]
  quantity_exists: Boolean
  quantity_gte: Int
  quantity_ne: Int
  AND: [EquipmentContentQueryInput!]
  item_exists: Boolean
  quantity_nin: [Int]
  item: EquipmentContentItemQueryInput
  quantity_gt: Int
  quantity_lt: Int
}

input EquipmentContentUpdateInput {
  quantity_inc: Int
  quantity_unset: Boolean
  item: EquipmentContentItemUpdateInput
  item_unset: Boolean
  quantity: Int
}

type EquipmentCost {
  quantity: Int
  unit: String
}

input EquipmentCostInsertInput {
  unit: String
  quantity: Int
}

input EquipmentCostQueryInput {
  AND: [EquipmentCostQueryInput!]
  quantity: Int
  quantity_exists: Boolean
  quantity_gte: Int
  unit_gt: String
  unit_in: [String]
  quantity_ne: Int
  OR: [EquipmentCostQueryInput!]
  unit_nin: [String]
  quantity_in: [Int]
  unit_lte: String
  quantity_lt: Int
  quantity_lte: Int
  unit: String
  unit_gte: String
  unit_exists: Boolean
  unit_ne: String
  unit_lt: String
  quantity_nin: [Int]
  quantity_gt: Int
}

input EquipmentCostUpdateInput {
  unit: String
  unit_unset: Boolean
  quantity: Int
  quantity_inc: Int
  quantity_unset: Boolean
}

type EquipmentDamage {
  damage_dice: String
  damage_type: EquipmentDamageDamage_type
}

type EquipmentDamageDamage_type {
  index: String
  name: String
  url: String
}

input EquipmentDamageDamage_typeInsertInput {
  index: String
  name: String
  url: String
}

input EquipmentDamageDamage_typeQueryInput {
  name_lte: String
  index_exists: Boolean
  url_nin: [String]
  index_nin: [String]
  url_exists: Boolean
  url_lt: String
  url_in: [String]
  url_gte: String
  name_gt: String
  name: String
  index_gte: String
  index_lt: String
  name_gte: String
  name_nin: [String]
  name_exists: Boolean
  name_ne: String
  index: String
  index_ne: String
  url_gt: String
  OR: [EquipmentDamageDamage_typeQueryInput!]
  name_in: [String]
  index_in: [String]
  url_lte: String
  url: String
  index_lte: String
  AND: [EquipmentDamageDamage_typeQueryInput!]
  name_lt: String
  url_ne: String
  index_gt: String
}

input EquipmentDamageDamage_typeUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input EquipmentDamageInsertInput {
  damage_dice: String
  damage_type: EquipmentDamageDamage_typeInsertInput
}

input EquipmentDamageQueryInput {
  damage_dice_nin: [String]
  damage_dice_exists: Boolean
  OR: [EquipmentDamageQueryInput!]
  damage_type: EquipmentDamageDamage_typeQueryInput
  damage_dice_gt: String
  damage_dice_gte: String
  damage_dice_lt: String
  damage_type_exists: Boolean
  AND: [EquipmentDamageQueryInput!]
  damage_dice: String
  damage_dice_in: [String]
  damage_dice_lte: String
  damage_dice_ne: String
}

input EquipmentDamageUpdateInput {
  damage_type: EquipmentDamageDamage_typeUpdateInput
  damage_type_unset: Boolean
  damage_dice: String
  damage_dice_unset: Boolean
}

type EquipmentEquipment_category {
  index: String
  name: String
  url: String
}

input EquipmentEquipment_categoryInsertInput {
  name: String
  url: String
  index: String
}

input EquipmentEquipment_categoryQueryInput {
  index_exists: Boolean
  name_ne: String
  name_exists: Boolean
  url_ne: String
  name: String
  name_in: [String]
  index_lte: String
  index_gte: String
  url_gt: String
  index_in: [String]
  name_gte: String
  url_in: [String]
  index: String
  name_gt: String
  AND: [EquipmentEquipment_categoryQueryInput!]
  url_lt: String
  name_lt: String
  url_gte: String
  name_lte: String
  index_nin: [String]
  OR: [EquipmentEquipment_categoryQueryInput!]
  index_gt: String
  index_lt: String
  url_exists: Boolean
  url_nin: [String]
  url: String
  url_lte: String
  index_ne: String
  name_nin: [String]
}

input EquipmentEquipment_categoryUpdateInput {
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
}

type EquipmentGear_category {
  index: String
  name: String
  url: String
}

input EquipmentGear_categoryInsertInput {
  url: String
  index: String
  name: String
}

input EquipmentGear_categoryQueryInput {
  name_nin: [String]
  index_nin: [String]
  name_gte: String
  url_lte: String
  name_gt: String
  name_exists: Boolean
  index_lt: String
  name_lt: String
  index_gte: String
  url_lt: String
  name: String
  url_nin: [String]
  name_in: [String]
  index: String
  index_ne: String
  url_gte: String
  url_exists: Boolean
  name_lte: String
  url_in: [String]
  name_ne: String
  AND: [EquipmentGear_categoryQueryInput!]
  url: String
  index_exists: Boolean
  index_lte: String
  url_gt: String
  OR: [EquipmentGear_categoryQueryInput!]
  url_ne: String
  index_gt: String
  index_in: [String]
}

input EquipmentGear_categoryUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

type EquipmentH_damage {
  damage_dice: String
  damage_type: EquipmentH_damageDamage_type
}

type EquipmentH_damageDamage_type {
  index: String
  name: String
  url: String
}

input EquipmentH_damageDamage_typeInsertInput {
  url: String
  index: String
  name: String
}

input EquipmentH_damageDamage_typeQueryInput {
  index_lt: String
  url_lt: String
  url_exists: Boolean
  OR: [EquipmentH_damageDamage_typeQueryInput!]
  index_lte: String
  index_gt: String
  name_nin: [String]
  url_in: [String]
  AND: [EquipmentH_damageDamage_typeQueryInput!]
  name_in: [String]
  index: String
  index_in: [String]
  url_nin: [String]
  url: String
  url_gte: String
  index_gte: String
  name_ne: String
  index_nin: [String]
  name_lt: String
  name_lte: String
  name_gte: String
  url_lte: String
  url_ne: String
  index_exists: Boolean
  name: String
  name_gt: String
  name_exists: Boolean
  url_gt: String
  index_ne: String
}

input EquipmentH_damageDamage_typeUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input EquipmentH_damageInsertInput {
  damage_dice: String
  damage_type: EquipmentH_damageDamage_typeInsertInput
}

input EquipmentH_damageQueryInput {
  damage_dice_in: [String]
  damage_dice_exists: Boolean
  damage_dice_gt: String
  damage_type: EquipmentH_damageDamage_typeQueryInput
  damage_type_exists: Boolean
  OR: [EquipmentH_damageQueryInput!]
  damage_dice: String
  damage_dice_lte: String
  damage_dice_nin: [String]
  AND: [EquipmentH_damageQueryInput!]
  damage_dice_gte: String
  damage_dice_lt: String
  damage_dice_ne: String
}

input EquipmentH_damageUpdateInput {
  damage_dice: String
  damage_dice_unset: Boolean
  damage_type: EquipmentH_damageDamage_typeUpdateInput
  damage_type_unset: Boolean
}

input EquipmentInsertInput {
  armor_class: EquipmentArmor_classInsertInput
  category_range: String
  cost: EquipmentCostInsertInput
  gear_category: EquipmentGear_categoryInsertInput
  contents: [EquipmentContentInsertInput]
  stealth_disadvantage: Boolean
  weapon_range: String
  equipment_category: EquipmentEquipment_categoryInsertInput
  vehicle_category: String
  range: EquipmentRangeInsertInput
  armor_category: String
  quantity: Int
  capacity: String
  speed: EquipmentSpeedInsertInput
  _id: ObjectId
  index: String
  tool_category: String
  weapon_category: String
  name: String
  desc: [String]
  damage: EquipmentDamageInsertInput
  throw_range: EquipmentThrow_rangeInsertInput
  properties: [EquipmentPropertyInsertInput]
  special: [String]
  str_minimum: Int
  H_damage: EquipmentH_damageInsertInput
  weight: Int
  url: String
}

type EquipmentProperty {
  index: String
  name: String
  url: String
}

input EquipmentPropertyInsertInput {
  url: String
  index: String
  name: String
}

input EquipmentPropertyQueryInput {
  name_ne: String
  index_in: [String]
  index_gte: String
  url_nin: [String]
  name_exists: Boolean
  name_in: [String]
  name_gte: String
  name_gt: String
  url_gte: String
  index_gt: String
  AND: [EquipmentPropertyQueryInput!]
  url_exists: Boolean
  url_gt: String
  name: String
  url_lt: String
  index_nin: [String]
  url_ne: String
  OR: [EquipmentPropertyQueryInput!]
  index_lte: String
  url_in: [String]
  index_lt: String
  url: String
  index_ne: String
  name_lt: String
  index: String
  name_nin: [String]
  url_lte: String
  name_lte: String
  index_exists: Boolean
}

input EquipmentPropertyUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input EquipmentQueryInput {
  weapon_range_lt: String
  special_nin: [String]
  capacity_exists: Boolean
  name_exists: Boolean
  quantity_lte: Int
  index_lte: String
  weight_lte: Int
  name_in: [String]
  capacity_lt: String
  quantity_exists: Boolean
  armor_class_exists: Boolean
  _id: ObjectId
  special: [String]
  tool_category: String
  url_gt: String
  gear_category_exists: Boolean
  armor_category_lt: String
  tool_category_exists: Boolean
  weight_in: [Int]
  armor_class: EquipmentArmor_classQueryInput
  weapon_category_gte: String
  name_lt: String
  capacity_gt: String
  contents_in: [EquipmentContentQueryInput]
  weight: Int
  category_range_in: [String]
  vehicle_category_lte: String
  url_exists: Boolean
  tool_category_nin: [String]
  quantity_ne: Int
  str_minimum: Int
  quantity: Int
  vehicle_category_in: [String]
  quantity_in: [Int]
  quantity_lt: Int
  name_gte: String
  str_minimum_gt: Int
  str_minimum_in: [Int]
  H_damage: EquipmentH_damageQueryInput
  category_range_lte: String
  desc_nin: [String]
  index_gte: String
  tool_category_gte: String
  OR: [EquipmentQueryInput!]
  vehicle_category_gt: String
  damage: EquipmentDamageQueryInput
  stealth_disadvantage_exists: Boolean
  special_in: [String]
  armor_category_gte: String
  equipment_category: EquipmentEquipment_categoryQueryInput
  capacity_ne: String
  _id_ne: ObjectId
  str_minimum_exists: Boolean
  armor_category_nin: [String]
  capacity_nin: [String]
  capacity: String
  str_minimum_lte: Int
  cost_exists: Boolean
  name: String
  desc_in: [String]
  contents_nin: [EquipmentContentQueryInput]
  category_range_exists: Boolean
  category_range_ne: String
  category_range_lt: String
  weapon_category_lte: String
  range_exists: Boolean
  armor_category_in: [String]
  AND: [EquipmentQueryInput!]
  tool_category_lt: String
  url_ne: String
  cost: EquipmentCostQueryInput
  quantity_gte: Int
  _id_gt: ObjectId
  weapon_category_ne: String
  weight_ne: Int
  _id_lte: ObjectId
  capacity_lte: String
  speed: EquipmentSpeedQueryInput
  name_nin: [String]
  url: String
  capacity_gte: String
  weapon_category_nin: [String]
  stealth_disadvantage_ne: Boolean
  armor_category: String
  tool_category_lte: String
  url_lte: String
  category_range_gt: String
  url_gte: String
  weapon_range_in: [String]
  equipment_category_exists: Boolean
  weapon_range_ne: String
  properties_exists: Boolean
  vehicle_category_exists: Boolean
  desc: [String]
  weight_gte: Int
  properties_nin: [EquipmentPropertyQueryInput]
  armor_category_ne: String
  _id_gte: ObjectId
  damage_exists: Boolean
  properties: [EquipmentPropertyQueryInput]
  _id_nin: [ObjectId]
  weapon_range_nin: [String]
  _id_in: [ObjectId]
  weapon_category_gt: String
  properties_in: [EquipmentPropertyQueryInput]
  armor_category_gt: String
  vehicle_category_gte: String
  contents: [EquipmentContentQueryInput]
  contents_exists: Boolean
  stealth_disadvantage: Boolean
  tool_category_gt: String
  name_gt: String
  index_exists: Boolean
  weapon_range_exists: Boolean
  weight_nin: [Int]
  str_minimum_ne: Int
  desc_exists: Boolean
  category_range_nin: [String]
  weight_lt: Int
  url_in: [String]
  gear_category: EquipmentGear_categoryQueryInput
  special_exists: Boolean
  vehicle_category: String
  weapon_category_lt: String
  url_lt: String
  vehicle_category_nin: [String]
  weight_gt: Int
  str_minimum_gte: Int
  armor_category_lte: String
  _id_exists: Boolean
  capacity_in: [String]
  throw_range: EquipmentThrow_rangeQueryInput
  vehicle_category_ne: String
  weapon_range_gte: String
  str_minimum_lt: Int
  speed_exists: Boolean
  category_range_gte: String
  index_in: [String]
  armor_category_exists: Boolean
  category_range: String
  vehicle_category_lt: String
  range: EquipmentRangeQueryInput
  weapon_category_exists: Boolean
  index_lt: String
  weight_exists: Boolean
  quantity_gt: Int
  url_nin: [String]
  _id_lt: ObjectId
  weapon_range_gt: String
  index: String
  index_ne: String
  throw_range_exists: Boolean
  name_lte: String
  tool_category_ne: String
  index_gt: String
  name_ne: String
  quantity_nin: [Int]
  index_nin: [String]
  weapon_category_in: [String]
  weapon_range_lte: String
  tool_category_in: [String]
  weapon_category: String
  str_minimum_nin: [Int]
  weapon_range: String
  H_damage_exists: Boolean
}

type EquipmentRange {
  long: Int
  normal: Int
}

input EquipmentRangeInsertInput {
  normal: Int
  long: Int
}

input EquipmentRangeQueryInput {
  normal_exists: Boolean
  normal_ne: Int
  long_lte: Int
  normal_gte: Int
  long_exists: Boolean
  long_in: [Int]
  normal_gt: Int
  long_gte: Int
  long_ne: Int
  normal: Int
  AND: [EquipmentRangeQueryInput!]
  long: Int
  long_nin: [Int]
  long_lt: Int
  normal_lte: Int
  OR: [EquipmentRangeQueryInput!]
  normal_lt: Int
  normal_in: [Int]
  normal_nin: [Int]
  long_gt: Int
}

input EquipmentRangeUpdateInput {
  long: Int
  long_unset: Boolean
  long_inc: Int
  normal: Int
  normal_inc: Int
  normal_unset: Boolean
}

enum EquipmentSortByInput {
  QUANTITY_DESC
  WEAPON_CATEGORY_DESC
  VEHICLE_CATEGORY_DESC
  INDEX_DESC
  WEAPON_CATEGORY_ASC
  NAME_DESC
  WEIGHT_DESC
  ARMOR_CATEGORY_ASC
  ARMOR_CATEGORY_DESC
  QUANTITY_ASC
  TOOL_CATEGORY_DESC
  WEIGHT_ASC
  STR_MINIMUM_ASC
  CATEGORY_RANGE_ASC
  CAPACITY_ASC
  CAPACITY_DESC
  _ID_ASC
  CATEGORY_RANGE_DESC
  _ID_DESC
  INDEX_ASC
  TOOL_CATEGORY_ASC
  STR_MINIMUM_DESC
  VEHICLE_CATEGORY_ASC
  NAME_ASC
  WEAPON_RANGE_ASC
  WEAPON_RANGE_DESC
  URL_ASC
  URL_DESC
}

type EquipmentSpeed {
  quantity: Int
  unit: String
}

input EquipmentSpeedInsertInput {
  unit: String
  quantity: Int
}

input EquipmentSpeedQueryInput {
  unit_in: [String]
  unit_exists: Boolean
  unit_lt: String
  unit: String
  unit_gt: String
  AND: [EquipmentSpeedQueryInput!]
  quantity: Int
  quantity_nin: [Int]
  OR: [EquipmentSpeedQueryInput!]
  unit_gte: String
  unit_ne: String
  quantity_gte: Int
  unit_lte: String
  quantity_ne: Int
  quantity_lte: Int
  quantity_exists: Boolean
  quantity_gt: Int
  quantity_in: [Int]
  unit_nin: [String]
  quantity_lt: Int
}

input EquipmentSpeedUpdateInput {
  unit_unset: Boolean
  quantity: Int
  quantity_inc: Int
  quantity_unset: Boolean
  unit: String
}

type EquipmentThrow_range {
  long: Int
  normal: Int
}

input EquipmentThrow_rangeInsertInput {
  long: Int
  normal: Int
}

input EquipmentThrow_rangeQueryInput {
  long_ne: Int
  long_nin: [Int]
  normal_gte: Int
  AND: [EquipmentThrow_rangeQueryInput!]
  normal_exists: Boolean
  long: Int
  long_lt: Int
  normal_lt: Int
  normal_nin: [Int]
  long_in: [Int]
  long_lte: Int
  normal_gt: Int
  normal_ne: Int
  OR: [EquipmentThrow_rangeQueryInput!]
  long_exists: Boolean
  long_gte: Int
  normal: Int
  normal_lte: Int
  long_gt: Int
  normal_in: [Int]
}

input EquipmentThrow_rangeUpdateInput {
  normal_inc: Int
  normal_unset: Boolean
  long: Int
  long_inc: Int
  long_unset: Boolean
  normal: Int
}

input EquipmentUpdateInput {
  weight_inc: Int
  throw_range: EquipmentThrow_rangeUpdateInput
  armor_category: String
  weapon_range: String
  str_minimum: Int
  H_damage: EquipmentH_damageUpdateInput
  weapon_category: String
  properties_unset: Boolean
  damage_unset: Boolean
  equipment_category_unset: Boolean
  category_range: String
  quantity_unset: Boolean
  armor_class: EquipmentArmor_classUpdateInput
  stealth_disadvantage: Boolean
  capacity_unset: Boolean
  special_unset: Boolean
  index_unset: Boolean
  speed_unset: Boolean
  _id: ObjectId
  cost_unset: Boolean
  gear_category: EquipmentGear_categoryUpdateInput
  desc: [String]
  name: String
  armor_category_unset: Boolean
  desc_unset: Boolean
  stealth_disadvantage_unset: Boolean
  special: [String]
  speed: EquipmentSpeedUpdateInput
  quantity: Int
  index: String
  weight_unset: Boolean
  name_unset: Boolean
  H_damage_unset: Boolean
  weapon_category_unset: Boolean
  damage: EquipmentDamageUpdateInput
  capacity: String
  weight: Int
  equipment_category: EquipmentEquipment_categoryUpdateInput
  contents: [EquipmentContentUpdateInput]
  category_range_unset: Boolean
  quantity_inc: Int
  armor_class_unset: Boolean
  url: String
  url_unset: Boolean
  cost: EquipmentCostUpdateInput
  str_minimum_inc: Int
  properties: [EquipmentPropertyUpdateInput]
  range_unset: Boolean
  contents_unset: Boolean
  tool_category_unset: Boolean
  vehicle_category_unset: Boolean
  tool_category: String
  _id_unset: Boolean
  gear_category_unset: Boolean
  str_minimum_unset: Boolean
  throw_range_unset: Boolean
  weapon_range_unset: Boolean
  vehicle_category: String
  range: EquipmentRangeUpdateInput
}

type Feature {
  _id: ObjectId
  choice: FeatureChoice
  class: FeatureClass
  desc: [String]
  group: String
  index: String
  level: Int
  name: String
  prerequisites: [FeaturePrerequisite]
  reference: String
  subclass: FeatureSubclass
  url: String
}

type FeatureChoice {
  choose: Int
  from: [FeatureChoiceFrom]
  type: String
}

type FeatureChoiceFrom {
  index: String
  name: String
  url: String
}

input FeatureChoiceFromInsertInput {
  index: String
  name: String
  url: String
}

input FeatureChoiceFromQueryInput {
  url_in: [String]
  index_ne: String
  name_nin: [String]
  url_gte: String
  index_gt: String
  name_gt: String
  url_ne: String
  url: String
  index_gte: String
  url_nin: [String]
  index_nin: [String]
  AND: [FeatureChoiceFromQueryInput!]
  url_exists: Boolean
  url_lt: String
  index_exists: Boolean
  name: String
  name_lte: String
  url_lte: String
  name_exists: Boolean
  url_gt: String
  OR: [FeatureChoiceFromQueryInput!]
  index_in: [String]
  index: String
  name_lt: String
  name_ne: String
  name_gte: String
  index_lt: String
  name_in: [String]
  index_lte: String
}

input FeatureChoiceFromUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input FeatureChoiceInsertInput {
  choose: Int
  from: [FeatureChoiceFromInsertInput]
  type: String
}

input FeatureChoiceQueryInput {
  type_gt: String
  choose_ne: Int
  type: String
  choose_exists: Boolean
  type_nin: [String]
  choose_lte: Int
  type_exists: Boolean
  type_ne: String
  type_gte: String
  choose_in: [Int]
  AND: [FeatureChoiceQueryInput!]
  type_lte: String
  choose_gte: Int
  from_nin: [FeatureChoiceFromQueryInput]
  type_lt: String
  OR: [FeatureChoiceQueryInput!]
  choose_nin: [Int]
  from_in: [FeatureChoiceFromQueryInput]
  choose: Int
  choose_gt: Int
  from: [FeatureChoiceFromQueryInput]
  from_exists: Boolean
  type_in: [String]
  choose_lt: Int
}

input FeatureChoiceUpdateInput {
  choose_unset: Boolean
  from: [FeatureChoiceFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
  choose: Int
  choose_inc: Int
}

type FeatureClass {
  index: String
  name: String
  url: String
}

input FeatureClassInsertInput {
  index: String
  name: String
  url: String
}

input FeatureClassQueryInput {
  url_nin: [String]
  url_in: [String]
  index_gt: String
  index_in: [String]
  AND: [FeatureClassQueryInput!]
  url_gte: String
  url_ne: String
  url_lt: String
  OR: [FeatureClassQueryInput!]
  index: String
  name_lt: String
  name_in: [String]
  url_exists: Boolean
  name_lte: String
  name_gte: String
  name_exists: Boolean
  name_ne: String
  name: String
  name_nin: [String]
  index_exists: Boolean
  url_lte: String
  index_gte: String
  name_gt: String
  index_lte: String
  url: String
  index_nin: [String]
  url_gt: String
  index_lt: String
  index_ne: String
}

input FeatureClassUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input FeatureInsertInput {
  desc: [String]
  level: Int
  prerequisites: [FeaturePrerequisiteInsertInput]
  choice: FeatureChoiceInsertInput
  class: FeatureClassInsertInput
  group: String
  name: String
  subclass: FeatureSubclassInsertInput
  url: String
  reference: String
  _id: ObjectId
  index: String
}

type FeaturePrerequisite {
  feature: String
  level: Int
  type: String
}

input FeaturePrerequisiteInsertInput {
  feature: String
  level: Int
  type: String
}

input FeaturePrerequisiteQueryInput {
  type: String
  AND: [FeaturePrerequisiteQueryInput!]
  feature_gte: String
  type_nin: [String]
  feature_gt: String
  level_gt: Int
  type_exists: Boolean
  level_in: [Int]
  level_ne: Int
  level: Int
  type_ne: String
  type_lt: String
  level_lte: Int
  feature_nin: [String]
  type_gte: String
  level_nin: [Int]
  type_gt: String
  feature_exists: Boolean
  type_in: [String]
  type_lte: String
  feature_ne: String
  feature_lt: String
  feature_in: [String]
  OR: [FeaturePrerequisiteQueryInput!]
  feature: String
  feature_lte: String
  level_gte: Int
  level_lt: Int
  level_exists: Boolean
}

input FeaturePrerequisiteUpdateInput {
  feature_unset: Boolean
  level: Int
  level_unset: Boolean
  level_inc: Int
  type: String
  type_unset: Boolean
  feature: String
}

input FeatureQueryInput {
  group_ne: String
  desc_exists: Boolean
  reference_in: [String]
  level_ne: Int
  url: String
  name_exists: Boolean
  _id_nin: [ObjectId]
  url_lt: String
  index_lt: String
  url_exists: Boolean
  reference_exists: Boolean
  reference_lte: String
  level_in: [Int]
  class: FeatureClassQueryInput
  index_gt: String
  name_in: [String]
  index_exists: Boolean
  reference_lt: String
  desc_in: [String]
  _id_exists: Boolean
  choice: FeatureChoiceQueryInput
  subclass_exists: Boolean
  url_ne: String
  index_lte: String
  _id_gt: ObjectId
  name_ne: String
  _id_gte: ObjectId
  index_ne: String
  choice_exists: Boolean
  reference_gt: String
  level_gte: Int
  reference_ne: String
  index_nin: [String]
  group_lte: String
  index_in: [String]
  reference_nin: [String]
  class_exists: Boolean
  name: String
  level: Int
  url_nin: [String]
  AND: [FeatureQueryInput!]
  group_gte: String
  level_gt: Int
  prerequisites_in: [FeaturePrerequisiteQueryInput]
  group_nin: [String]
  group_lt: String
  desc: [String]
  index: String
  group: String
  _id_in: [ObjectId]
  desc_nin: [String]
  url_gt: String
  level_nin: [Int]
  group_gt: String
  OR: [FeatureQueryInput!]
  _id_lt: ObjectId
  _id: ObjectId
  name_lt: String
  _id_lte: ObjectId
  prerequisites: [FeaturePrerequisiteQueryInput]
  subclass: FeatureSubclassQueryInput
  prerequisites_exists: Boolean
  url_in: [String]
  group_in: [String]
  name_nin: [String]
  reference: String
  prerequisites_nin: [FeaturePrerequisiteQueryInput]
  _id_ne: ObjectId
  level_exists: Boolean
  name_gt: String
  reference_gte: String
  url_lte: String
  url_gte: String
  index_gte: String
  name_lte: String
  name_gte: String
  group_exists: Boolean
  level_lte: Int
  level_lt: Int
}

enum FeatureSortByInput {
  GROUP_DESC
  REFERENCE_ASC
  NAME_DESC
  _ID_DESC
  INDEX_ASC
  LEVEL_DESC
  URL_DESC
  NAME_ASC
  GROUP_ASC
  INDEX_DESC
  LEVEL_ASC
  _ID_ASC
  REFERENCE_DESC
  URL_ASC
}

type FeatureSubclass {
  index: String
  name: String
  url: String
}

input FeatureSubclassInsertInput {
  name: String
  url: String
  index: String
}

input FeatureSubclassQueryInput {
  url: String
  name_gt: String
  name_lt: String
  index_ne: String
  index: String
  name_nin: [String]
  url_in: [String]
  OR: [FeatureSubclassQueryInput!]
  index_exists: Boolean
  index_nin: [String]
  index_lt: String
  url_lt: String
  url_ne: String
  name_gte: String
  AND: [FeatureSubclassQueryInput!]
  url_nin: [String]
  url_gte: String
  index_gte: String
  url_exists: Boolean
  url_gt: String
  name_ne: String
  name_lte: String
  name_in: [String]
  index_gt: String
  index_lte: String
  index_in: [String]
  name_exists: Boolean
  name: String
  url_lte: String
}

input FeatureSubclassUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input FeatureUpdateInput {
  subclass_unset: Boolean
  _id: ObjectId
  index_unset: Boolean
  choice_unset: Boolean
  name: String
  reference: String
  url_unset: Boolean
  choice: FeatureChoiceUpdateInput
  group_unset: Boolean
  level: Int
  prerequisites_unset: Boolean
  class: FeatureClassUpdateInput
  level_inc: Int
  index: String
  desc_unset: Boolean
  level_unset: Boolean
  reference_unset: Boolean
  class_unset: Boolean
  desc: [String]
  group: String
  subclass: FeatureSubclassUpdateInput
  _id_unset: Boolean
  url: String
  name_unset: Boolean
  prerequisites: [FeaturePrerequisiteUpdateInput]
}

type InsertManyPayload {
  insertedIds: [ObjectId]!
}

type Language {
  _id: ObjectId
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String
}

input LanguageInsertInput {
  _id: ObjectId
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String
}

input LanguageQueryInput {
  _id: ObjectId
  desc_lte: String
  script_in: [String]
  desc_gt: String
  desc_ne: String
  type_nin: [String]
  script_gte: String
  AND: [LanguageQueryInput!]
  script_nin: [String]
  name_exists: Boolean
  index_in: [String]
  index_lte: String
  type_in: [String]
  url_lte: String
  type_lt: String
  url_gte: String
  desc: String
  typical_speakers_in: [String]
  name_nin: [String]
  script_ne: String
  index_gte: String
  _id_lt: ObjectId
  type_gt: String
  typical_speakers_nin: [String]
  desc_in: [String]
  _id_nin: [ObjectId]
  OR: [LanguageQueryInput!]
  name_lte: String
  type_gte: String
  typical_speakers: [String]
  desc_lt: String
  url_in: [String]
  type_exists: Boolean
  script_gt: String
  name_lt: String
  index_exists: Boolean
  script_lte: String
  index_nin: [String]
  url: String
  _id_gt: ObjectId
  _id_ne: ObjectId
  index_lt: String
  typical_speakers_exists: Boolean
  url_gt: String
  _id_exists: Boolean
  type: String
  type_lte: String
  _id_lte: ObjectId
  url_exists: Boolean
  index: String
  desc_gte: String
  type_ne: String
  index_gt: String
  name: String
  desc_nin: [String]
  script: String
  name_gte: String
  url_ne: String
  name_gt: String
  _id_gte: ObjectId
  script_exists: Boolean
  _id_in: [ObjectId]
  name_ne: String
  name_in: [String]
  index_ne: String
  desc_exists: Boolean
  script_lt: String
  url_lt: String
  url_nin: [String]
}

enum LanguageSortByInput {
  URL_DESC
  NAME_ASC
  INDEX_DESC
  URL_ASC
  _ID_DESC
  DESC_DESC
  TYPE_ASC
  TYPE_DESC
  _ID_ASC
  DESC_ASC
  INDEX_ASC
  NAME_DESC
  SCRIPT_ASC
  SCRIPT_DESC
}

input LanguageUpdateInput {
  desc_unset: Boolean
  index: String
  desc: String
  name_unset: Boolean
  typical_speakers: [String]
  _id_unset: Boolean
  index_unset: Boolean
  name: String
  typical_speakers_unset: Boolean
  type: String
  script: String
  url_unset: Boolean
  type_unset: Boolean
  url: String
  _id: ObjectId
  script_unset: Boolean
}

type Level {
  _id: ObjectId
  ability_score_bonuses: Int
  class: LevelClass
  class_specific: LevelClass_specific
  feature_choices: [LevelFeature_choice]
  features: [LevelFeature]
  index: String
  level: Int
  prof_bonus: Int
  spellcasting: LevelSpellcasting
  subclass: LevelSubclass
  subclass_specific: LevelSubclass_specific
  url: String
}

type LevelClass {
  index: String
  name: String
  url: String
}

type LevelClass_specific {
  action_surges: Int
  arcane_recovery_levels: Int
  aura_range: Int
  bardic_inspiration_die: Int
  brutal_critical_dice: Int
  channel_divinity_charges: Int
  creating_spell_slots: [LevelClass_specificCreating_spell_slot]
  destroy_undead_cr: Int
  extra_attacks: Int
  favored_enemies: Int
  favored_terrain: Int
  indomitable_uses: Int
  invocations_known: Int
  ki_points: Int
  magical_secrets_max_5: Int
  magical_secrets_max_7: Int
  magical_secrets_max_9: Int
  martial_arts: LevelClass_specificMartial_art
  metamagic_known: Int
  mystic_arcanum_level_6: Int
  mystic_arcanum_level_7: Int
  mystic_arcanum_level_8: Int
  mystic_arcanum_level_9: Int
  rage_count: Int
  rage_damage_bonus: Int
  sneak_attack: LevelClass_specificSneak_attack
  song_of_rest_die: Int
  sorcery_points: Int
  unarmored_movement: Int
  wild_shape_fly: Boolean
  wild_shape_max_cr: Int
  wild_shape_swim: Boolean
}

type LevelClass_specificCreating_spell_slot {
  sorcery_point_cost: Int
  spell_slot_level: Int
}

input LevelClass_specificCreating_spell_slotInsertInput {
  spell_slot_level: Int
  sorcery_point_cost: Int
}

input LevelClass_specificCreating_spell_slotQueryInput {
  spell_slot_level_in: [Int]
  spell_slot_level_exists: Boolean
  sorcery_point_cost_gte: Int
  sorcery_point_cost_lt: Int
  spell_slot_level: Int
  spell_slot_level_gte: Int
  sorcery_point_cost_in: [Int]
  spell_slot_level_lte: Int
  sorcery_point_cost_nin: [Int]
  sorcery_point_cost_exists: Boolean
  sorcery_point_cost_lte: Int
  spell_slot_level_ne: Int
  sorcery_point_cost_gt: Int
  AND: [LevelClass_specificCreating_spell_slotQueryInput!]
  sorcery_point_cost_ne: Int
  spell_slot_level_lt: Int
  sorcery_point_cost: Int
  spell_slot_level_gt: Int
  spell_slot_level_nin: [Int]
  OR: [LevelClass_specificCreating_spell_slotQueryInput!]
}

input LevelClass_specificCreating_spell_slotUpdateInput {
  spell_slot_level_unset: Boolean
  sorcery_point_cost: Int
  sorcery_point_cost_inc: Int
  sorcery_point_cost_unset: Boolean
  spell_slot_level: Int
  spell_slot_level_inc: Int
}

input LevelClass_specificInsertInput {
  song_of_rest_die: Int
  sneak_attack: LevelClass_specificSneak_attackInsertInput
  aura_range: Int
  sorcery_points: Int
  creating_spell_slots: [LevelClass_specificCreating_spell_slotInsertInput]
  mystic_arcanum_level_8: Int
  mystic_arcanum_level_6: Int
  arcane_recovery_levels: Int
  wild_shape_swim: Boolean
  brutal_critical_dice: Int
  mystic_arcanum_level_9: Int
  martial_arts: LevelClass_specificMartial_artInsertInput
  rage_damage_bonus: Int
  extra_attacks: Int
  unarmored_movement: Int
  favored_terrain: Int
  favored_enemies: Int
  channel_divinity_charges: Int
  magical_secrets_max_9: Int
  ki_points: Int
  metamagic_known: Int
  wild_shape_max_cr: Int
  rage_count: Int
  destroy_undead_cr: Int
  indomitable_uses: Int
  mystic_arcanum_level_7: Int
  magical_secrets_max_5: Int
  action_surges: Int
  invocations_known: Int
  bardic_inspiration_die: Int
  magical_secrets_max_7: Int
  wild_shape_fly: Boolean
}

type LevelClass_specificMartial_art {
  dice_count: Int
  dice_value: Int
}

input LevelClass_specificMartial_artInsertInput {
  dice_count: Int
  dice_value: Int
}

input LevelClass_specificMartial_artQueryInput {
  OR: [LevelClass_specificMartial_artQueryInput!]
  dice_value_lte: Int
  dice_value_gt: Int
  dice_value_exists: Boolean
  dice_value: Int
  dice_value_in: [Int]
  dice_count_lte: Int
  dice_count_exists: Boolean
  dice_value_nin: [Int]
  dice_count: Int
  dice_count_ne: Int
  dice_value_lt: Int
  AND: [LevelClass_specificMartial_artQueryInput!]
  dice_count_nin: [Int]
  dice_count_lt: Int
  dice_count_gt: Int
  dice_count_gte: Int
  dice_value_gte: Int
  dice_count_in: [Int]
  dice_value_ne: Int
}

input LevelClass_specificMartial_artUpdateInput {
  dice_value_unset: Boolean
  dice_count: Int
  dice_count_inc: Int
  dice_count_unset: Boolean
  dice_value: Int
  dice_value_inc: Int
}

input LevelClass_specificQueryInput {
  wild_shape_max_cr_gt: Int
  mystic_arcanum_level_9_in: [Int]
  channel_divinity_charges_nin: [Int]
  channel_divinity_charges_lte: Int
  mystic_arcanum_level_9_lte: Int
  aura_range_lte: Int
  channel_divinity_charges_ne: Int
  magical_secrets_max_9_lte: Int
  magical_secrets_max_5_lt: Int
  arcane_recovery_levels_gt: Int
  wild_shape_fly_exists: Boolean
  magical_secrets_max_7_gt: Int
  favored_terrain_lte: Int
  ki_points_gt: Int
  rage_damage_bonus: Int
  unarmored_movement_lte: Int
  brutal_critical_dice_in: [Int]
  magical_secrets_max_5_gt: Int
  mystic_arcanum_level_7_in: [Int]
  brutal_critical_dice: Int
  mystic_arcanum_level_9_exists: Boolean
  wild_shape_max_cr: Int
  mystic_arcanum_level_7: Int
  rage_damage_bonus_lte: Int
  destroy_undead_cr_nin: [Int]
  brutal_critical_dice_exists: Boolean
  arcane_recovery_levels_lte: Int
  action_surges_nin: [Int]
  magical_secrets_max_7_gte: Int
  ki_points: Int
  ki_points_in: [Int]
  invocations_known_exists: Boolean
  extra_attacks_lt: Int
  ki_points_gte: Int
  mystic_arcanum_level_7_gte: Int
  destroy_undead_cr_exists: Boolean
  invocations_known_lte: Int
  bardic_inspiration_die: Int
  ki_points_exists: Boolean
  extra_attacks_gt: Int
  aura_range_gt: Int
  mystic_arcanum_level_6_ne: Int
  magical_secrets_max_9_lt: Int
  magical_secrets_max_7_exists: Boolean
  song_of_rest_die: Int
  sorcery_points_ne: Int
  aura_range: Int
  action_surges: Int
  brutal_critical_dice_lt: Int
  magical_secrets_max_7_lt: Int
  mystic_arcanum_level_7_ne: Int
  metamagic_known_in: [Int]
  wild_shape_max_cr_gte: Int
  aura_range_gte: Int
  bardic_inspiration_die_in: [Int]
  magical_secrets_max_9_in: [Int]
  aura_range_lt: Int
  invocations_known_in: [Int]
  metamagic_known_lte: Int
  arcane_recovery_levels_lt: Int
  aura_range_ne: Int
  sorcery_points_gt: Int
  arcane_recovery_levels_in: [Int]
  favored_enemies: Int
  sneak_attack: LevelClass_specificSneak_attackQueryInput
  wild_shape_swim_ne: Boolean
  mystic_arcanum_level_9: Int
  mystic_arcanum_level_9_gte: Int
  arcane_recovery_levels_gte: Int
  channel_divinity_charges_gte: Int
  unarmored_movement_nin: [Int]
  mystic_arcanum_level_7_lte: Int
  rage_count_nin: [Int]
  magical_secrets_max_9_ne: Int
  unarmored_movement_lt: Int
  wild_shape_max_cr_in: [Int]
  indomitable_uses_lt: Int
  mystic_arcanum_level_7_gt: Int
  wild_shape_max_cr_nin: [Int]
  rage_damage_bonus_gt: Int
  arcane_recovery_levels_ne: Int
  bardic_inspiration_die_nin: [Int]
  brutal_critical_dice_nin: [Int]
  brutal_critical_dice_gte: Int
  bardic_inspiration_die_gt: Int
  mystic_arcanum_level_8_exists: Boolean
  rage_count_exists: Boolean
  ki_points_ne: Int
  favored_enemies_lt: Int
  song_of_rest_die_in: [Int]
  mystic_arcanum_level_8_lte: Int
  favored_terrain_exists: Boolean
  bardic_inspiration_die_ne: Int
  channel_divinity_charges_in: [Int]
  wild_shape_max_cr_lte: Int
  invocations_known_lt: Int
  mystic_arcanum_level_6_nin: [Int]
  brutal_critical_dice_lte: Int
  magical_secrets_max_7_lte: Int
  wild_shape_max_cr_exists: Boolean
  favored_enemies_in: [Int]
  creating_spell_slots_exists: Boolean
  arcane_recovery_levels_exists: Boolean
  action_surges_in: [Int]
  bardic_inspiration_die_exists: Boolean
  rage_damage_bonus_exists: Boolean
  magical_secrets_max_5_lte: Int
  rage_count_ne: Int
  AND: [LevelClass_specificQueryInput!]
  magical_secrets_max_7: Int
  channel_divinity_charges: Int
  brutal_critical_dice_ne: Int
  song_of_rest_die_exists: Boolean
  ki_points_lt: Int
  martial_arts_exists: Boolean
  extra_attacks_in: [Int]
  mystic_arcanum_level_6_gt: Int
  favored_terrain_ne: Int
  magical_secrets_max_5_ne: Int
  magical_secrets_max_5_exists: Boolean
  favored_enemies_exists: Boolean
  mystic_arcanum_level_8_nin: [Int]
  favored_enemies_gt: Int
  sorcery_points: Int
  mystic_arcanum_level_8_gte: Int
  song_of_rest_die_gte: Int
  destroy_undead_cr_in: [Int]
  destroy_undead_cr_gte: Int
  rage_count_in: [Int]
  extra_attacks_lte: Int
  bardic_inspiration_die_lte: Int
  sorcery_points_lt: Int
  mystic_arcanum_level_6_lt: Int
  indomitable_uses_gte: Int
  rage_damage_bonus_gte: Int
  wild_shape_swim_exists: Boolean
  favored_enemies_gte: Int
  metamagic_known_exists: Boolean
  destroy_undead_cr_ne: Int
  ki_points_lte: Int
  sorcery_points_exists: Boolean
  destroy_undead_cr: Int
  arcane_recovery_levels_nin: [Int]
  favored_terrain_in: [Int]
  metamagic_known_gte: Int
  bardic_inspiration_die_gte: Int
  favored_enemies_nin: [Int]
  magical_secrets_max_7_nin: [Int]
  action_surges_lt: Int
  favored_terrain_nin: [Int]
  rage_count_lte: Int
  favored_terrain_gt: Int
  rage_damage_bonus_nin: [Int]
  rage_count: Int
  magical_secrets_max_5_gte: Int
  metamagic_known_lt: Int
  magical_secrets_max_5_in: [Int]
  destroy_undead_cr_lt: Int
  magical_secrets_max_9_nin: [Int]
  extra_attacks_gte: Int
  favored_enemies_ne: Int
  extra_attacks_nin: [Int]
  magical_secrets_max_7_ne: Int
  mystic_arcanum_level_8: Int
  song_of_rest_die_gt: Int
  mystic_arcanum_level_7_lt: Int
  magical_secrets_max_7_in: [Int]
  extra_attacks_ne: Int
  channel_divinity_charges_gt: Int
  action_surges_lte: Int
  invocations_known_nin: [Int]
  extra_attacks_exists: Boolean
  mystic_arcanum_level_8_ne: Int
  mystic_arcanum_level_8_in: [Int]
  rage_damage_bonus_lt: Int
  metamagic_known_nin: [Int]
  metamagic_known_gt: Int
  mystic_arcanum_level_6_lte: Int
  rage_count_gte: Int
  aura_range_nin: [Int]
  action_surges_gte: Int
  magical_secrets_max_5_nin: [Int]
  favored_enemies_lte: Int
  invocations_known: Int
  sorcery_points_nin: [Int]
  indomitable_uses_nin: [Int]
  mystic_arcanum_level_9_gt: Int
  unarmored_movement_gt: Int
  rage_damage_bonus_in: [Int]
  mystic_arcanum_level_9_ne: Int
  channel_divinity_charges_lt: Int
  indomitable_uses_ne: Int
  wild_shape_max_cr_ne: Int
  ki_points_nin: [Int]
  indomitable_uses_gt: Int
  indomitable_uses_in: [Int]
  destroy_undead_cr_lte: Int
  indomitable_uses: Int
  unarmored_movement_gte: Int
  mystic_arcanum_level_6_in: [Int]
  favored_terrain: Int
  action_surges_ne: Int
  indomitable_uses_lte: Int
  rage_count_lt: Int
  sneak_attack_exists: Boolean
  creating_spell_slots_in: [LevelClass_specificCreating_spell_slotQueryInput]
  song_of_rest_die_lt: Int
  sorcery_points_in: [Int]
  martial_arts: LevelClass_specificMartial_artQueryInput
  aura_range_in: [Int]
  wild_shape_swim: Boolean
  song_of_rest_die_nin: [Int]
  unarmored_movement_in: [Int]
  bardic_inspiration_die_lt: Int
  action_surges_exists: Boolean
  aura_range_exists: Boolean
  favored_terrain_lt: Int
  mystic_arcanum_level_7_nin: [Int]
  sorcery_points_gte: Int
  unarmored_movement_ne: Int
  mystic_arcanum_level_6_exists: Boolean
  unarmored_movement: Int
  invocations_known_gte: Int
  wild_shape_fly_ne: Boolean
  mystic_arcanum_level_6_gte: Int
  OR: [LevelClass_specificQueryInput!]
  metamagic_known: Int
  sorcery_points_lte: Int
  mystic_arcanum_level_7_exists: Boolean
  creating_spell_slots: [LevelClass_specificCreating_spell_slotQueryInput]
  mystic_arcanum_level_9_nin: [Int]
  wild_shape_fly: Boolean
  indomitable_uses_exists: Boolean
  rage_count_gt: Int
  magical_secrets_max_5: Int
  mystic_arcanum_level_6: Int
  magical_secrets_max_9_exists: Boolean
  magical_secrets_max_9: Int
  channel_divinity_charges_exists: Boolean
  invocations_known_ne: Int
  metamagic_known_ne: Int
  mystic_arcanum_level_9_lt: Int
  creating_spell_slots_nin: [LevelClass_specificCreating_spell_slotQueryInput]
  arcane_recovery_levels: Int
  magical_secrets_max_9_gte: Int
  mystic_arcanum_level_8_lt: Int
  brutal_critical_dice_gt: Int
  song_of_rest_die_ne: Int
  rage_damage_bonus_ne: Int
  action_surges_gt: Int
  song_of_rest_die_lte: Int
  unarmored_movement_exists: Boolean
  magical_secrets_max_9_gt: Int
  invocations_known_gt: Int
  wild_shape_max_cr_lt: Int
  destroy_undead_cr_gt: Int
  favored_terrain_gte: Int
  mystic_arcanum_level_8_gt: Int
  extra_attacks: Int
}

type LevelClass_specificSneak_attack {
  dice_count: Int
  dice_value: Int
}

input LevelClass_specificSneak_attackInsertInput {
  dice_count: Int
  dice_value: Int
}

input LevelClass_specificSneak_attackQueryInput {
  dice_value_gt: Int
  dice_value_gte: Int
  dice_value_ne: Int
  dice_count_gte: Int
  dice_count_gt: Int
  dice_count_ne: Int
  dice_count_lt: Int
  OR: [LevelClass_specificSneak_attackQueryInput!]
  dice_count: Int
  dice_value: Int
  dice_value_in: [Int]
  AND: [LevelClass_specificSneak_attackQueryInput!]
  dice_count_in: [Int]
  dice_count_nin: [Int]
  dice_count_lte: Int
  dice_count_exists: Boolean
  dice_value_nin: [Int]
  dice_value_exists: Boolean
  dice_value_lt: Int
  dice_value_lte: Int
}

input LevelClass_specificSneak_attackUpdateInput {
  dice_value_inc: Int
  dice_value_unset: Boolean
  dice_count: Int
  dice_count_inc: Int
  dice_count_unset: Boolean
  dice_value: Int
}

input LevelClass_specificUpdateInput {
  mystic_arcanum_level_6_unset: Boolean
  destroy_undead_cr_unset: Boolean
  sneak_attack_unset: Boolean
  mystic_arcanum_level_7_inc: Int
  invocations_known: Int
  mystic_arcanum_level_6: Int
  destroy_undead_cr_inc: Int
  unarmored_movement: Int
  bardic_inspiration_die_inc: Int
  rage_count_inc: Int
  extra_attacks: Int
  favored_terrain_unset: Boolean
  brutal_critical_dice_unset: Boolean
  aura_range_inc: Int
  indomitable_uses_inc: Int
  arcane_recovery_levels_unset: Boolean
  magical_secrets_max_7: Int
  magical_secrets_max_9_inc: Int
  aura_range: Int
  wild_shape_fly_unset: Boolean
  rage_count_unset: Boolean
  song_of_rest_die_inc: Int
  wild_shape_fly: Boolean
  song_of_rest_die_unset: Boolean
  ki_points_inc: Int
  favored_enemies_inc: Int
  magical_secrets_max_9_unset: Boolean
  aura_range_unset: Boolean
  mystic_arcanum_level_9_unset: Boolean
  favored_enemies_unset: Boolean
  brutal_critical_dice: Int
  mystic_arcanum_level_9_inc: Int
  creating_spell_slots_unset: Boolean
  action_surges_inc: Int
  magical_secrets_max_7_inc: Int
  mystic_arcanum_level_8_unset: Boolean
  wild_shape_max_cr_unset: Boolean
  magical_secrets_max_5: Int
  wild_shape_swim_unset: Boolean
  extra_attacks_inc: Int
  rage_damage_bonus: Int
  destroy_undead_cr: Int
  bardic_inspiration_die_unset: Boolean
  extra_attacks_unset: Boolean
  rage_count: Int
  rage_damage_bonus_inc: Int
  channel_divinity_charges_inc: Int
  magical_secrets_max_5_inc: Int
  mystic_arcanum_level_8_inc: Int
  brutal_critical_dice_inc: Int
  wild_shape_max_cr: Int
  mystic_arcanum_level_7: Int
  sorcery_points_inc: Int
  action_surges: Int
  favored_terrain_inc: Int
  rage_damage_bonus_unset: Boolean
  mystic_arcanum_level_6_inc: Int
  creating_spell_slots: [LevelClass_specificCreating_spell_slotUpdateInput]
  wild_shape_swim: Boolean
  unarmored_movement_inc: Int
  invocations_known_inc: Int
  sorcery_points_unset: Boolean
  invocations_known_unset: Boolean
  favored_terrain: Int
  bardic_inspiration_die: Int
  magical_secrets_max_5_unset: Boolean
  mystic_arcanum_level_9: Int
  martial_arts_unset: Boolean
  song_of_rest_die: Int
  sorcery_points: Int
  unarmored_movement_unset: Boolean
  ki_points_unset: Boolean
  metamagic_known_unset: Boolean
  wild_shape_max_cr_inc: Int
  mystic_arcanum_level_7_unset: Boolean
  arcane_recovery_levels: Int
  arcane_recovery_levels_inc: Int
  magical_secrets_max_9: Int
  sneak_attack: LevelClass_specificSneak_attackUpdateInput
  indomitable_uses: Int
  action_surges_unset: Boolean
  ki_points: Int
  martial_arts: LevelClass_specificMartial_artUpdateInput
  mystic_arcanum_level_8: Int
  channel_divinity_charges: Int
  favored_enemies: Int
  metamagic_known_inc: Int
  indomitable_uses_unset: Boolean
  magical_secrets_max_7_unset: Boolean
  channel_divinity_charges_unset: Boolean
  metamagic_known: Int
}

input LevelClassInsertInput {
  index: String
  name: String
  url: String
}

input LevelClassQueryInput {
  index_exists: Boolean
  index_gt: String
  name: String
  index_ne: String
  name_exists: Boolean
  index_lt: String
  url_gte: String
  index_nin: [String]
  AND: [LevelClassQueryInput!]
  url_in: [String]
  url_ne: String
  url_lte: String
  name_nin: [String]
  url_gt: String
  index_gte: String
  index_in: [String]
  index: String
  name_ne: String
  OR: [LevelClassQueryInput!]
  name_lt: String
  url_exists: Boolean
  name_gte: String
  index_lte: String
  name_gt: String
  name_in: [String]
  name_lte: String
  url: String
  url_lt: String
  url_nin: [String]
}

input LevelClassUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

type LevelFeature {
  index: String
  name: String
  url: String
}

type LevelFeature_choice {
  index: String
  name: String
  url: String
}

input LevelFeature_choiceInsertInput {
  index: String
  name: String
  url: String
}

input LevelFeature_choiceQueryInput {
  name_exists: Boolean
  index: String
  url: String
  url_in: [String]
  index_ne: String
  url_ne: String
  name_lte: String
  name_nin: [String]
  name_gt: String
  url_lte: String
  url_nin: [String]
  index_exists: Boolean
  index_gte: String
  name_in: [String]
  index_nin: [String]
  name_ne: String
  url_lt: String
  AND: [LevelFeature_choiceQueryInput!]
  index_lt: String
  name_gte: String
  OR: [LevelFeature_choiceQueryInput!]
  index_gt: String
  index_lte: String
  index_in: [String]
  url_gte: String
  name_lt: String
  url_exists: Boolean
  url_gt: String
  name: String
}

input LevelFeature_choiceUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input LevelFeatureInsertInput {
  name: String
  url: String
  index: String
}

input LevelFeatureQueryInput {
  index_ne: String
  AND: [LevelFeatureQueryInput!]
  name_in: [String]
  name_nin: [String]
  url_lt: String
  name: String
  url_in: [String]
  url_nin: [String]
  index: String
  name_gte: String
  url_gte: String
  url_ne: String
  index_nin: [String]
  url: String
  index_gt: String
  index_lt: String
  name_lt: String
  url_gt: String
  index_lte: String
  OR: [LevelFeatureQueryInput!]
  name_exists: Boolean
  url_exists: Boolean
  name_gt: String
  index_in: [String]
  index_gte: String
  url_lte: String
  index_exists: Boolean
  name_ne: String
  name_lte: String
}

input LevelFeatureUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input LevelInsertInput {
  features: [LevelFeatureInsertInput]
  subclass: LevelSubclassInsertInput
  class: LevelClassInsertInput
  spellcasting: LevelSpellcastingInsertInput
  feature_choices: [LevelFeature_choiceInsertInput]
  url: String
  _id: ObjectId
  ability_score_bonuses: Int
  index: String
  level: Int
  class_specific: LevelClass_specificInsertInput
  prof_bonus: Int
  subclass_specific: LevelSubclass_specificInsertInput
}

input LevelQueryInput {
  subclass_specific_exists: Boolean
  url_gte: String
  index_lt: String
  prof_bonus_lte: Int
  level_gte: Int
  subclass: LevelSubclassQueryInput
  subclass_specific: LevelSubclass_specificQueryInput
  level_in: [Int]
  class_specific_exists: Boolean
  index_in: [String]
  ability_score_bonuses_nin: [Int]
  feature_choices: [LevelFeature_choiceQueryInput]
  features: [LevelFeatureQueryInput]
  _id_lte: ObjectId
  url_ne: String
  index_gte: String
  ability_score_bonuses_lte: Int
  _id: ObjectId
  class_exists: Boolean
  url: String
  ability_score_bonuses: Int
  index: String
  index_lte: String
  level: Int
  prof_bonus: Int
  _id_in: [ObjectId]
  ability_score_bonuses_gt: Int
  subclass_exists: Boolean
  url_lt: String
  _id_exists: Boolean
  class_specific: LevelClass_specificQueryInput
  url_nin: [String]
  _id_nin: [ObjectId]
  class: LevelClassQueryInput
  index_ne: String
  ability_score_bonuses_lt: Int
  level_exists: Boolean
  AND: [LevelQueryInput!]
  ability_score_bonuses_exists: Boolean
  _id_lt: ObjectId
  ability_score_bonuses_in: [Int]
  url_gt: String
  prof_bonus_lt: Int
  prof_bonus_exists: Boolean
  features_in: [LevelFeatureQueryInput]
  prof_bonus_nin: [Int]
  level_nin: [Int]
  url_in: [String]
  _id_gt: ObjectId
  feature_choices_exists: Boolean
  OR: [LevelQueryInput!]
  feature_choices_in: [LevelFeature_choiceQueryInput]
  prof_bonus_gte: Int
  prof_bonus_in: [Int]
  index_nin: [String]
  features_nin: [LevelFeatureQueryInput]
  features_exists: Boolean
  _id_ne: ObjectId
  prof_bonus_ne: Int
  index_exists: Boolean
  url_exists: Boolean
  spellcasting_exists: Boolean
  index_gt: String
  prof_bonus_gt: Int
  level_lt: Int
  ability_score_bonuses_gte: Int
  _id_gte: ObjectId
  ability_score_bonuses_ne: Int
  feature_choices_nin: [LevelFeature_choiceQueryInput]
  url_lte: String
  level_gt: Int
  spellcasting: LevelSpellcastingQueryInput
  level_lte: Int
  level_ne: Int
}

enum LevelSortByInput {
  LEVEL_DESC
  URL_ASC
  INDEX_ASC
  INDEX_DESC
  PROF_BONUS_DESC
  LEVEL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
  ABILITY_SCORE_BONUSES_ASC
  ABILITY_SCORE_BONUSES_DESC
  PROF_BONUS_ASC
}

type LevelSpellcasting {
  cantrips_known: Int
  spell_slots_level_1: Int
  spell_slots_level_2: Int
  spell_slots_level_3: Int
  spell_slots_level_4: Int
  spell_slots_level_5: Int
  spell_slots_level_6: Int
  spell_slots_level_7: Int
  spell_slots_level_8: Int
  spell_slots_level_9: Int
  spells_known: Int
}

input LevelSpellcastingInsertInput {
  spell_slots_level_1: Int
  spell_slots_level_7: Int
  spell_slots_level_2: Int
  spell_slots_level_4: Int
  spell_slots_level_6: Int
  spells_known: Int
  spell_slots_level_5: Int
  spell_slots_level_8: Int
  spell_slots_level_3: Int
  cantrips_known: Int
  spell_slots_level_9: Int
}

input LevelSpellcastingQueryInput {
  spell_slots_level_2_lt: Int
  spell_slots_level_5: Int
  spell_slots_level_2: Int
  spell_slots_level_3_gte: Int
  spell_slots_level_8_lt: Int
  spell_slots_level_1_gt: Int
  spells_known_ne: Int
  cantrips_known_nin: [Int]
  cantrips_known_gt: Int
  cantrips_known_in: [Int]
  spell_slots_level_6_lt: Int
  spell_slots_level_8_nin: [Int]
  spell_slots_level_2_lte: Int
  spell_slots_level_5_in: [Int]
  spell_slots_level_9: Int
  spell_slots_level_4: Int
  spell_slots_level_7_gt: Int
  spell_slots_level_2_in: [Int]
  cantrips_known: Int
  spell_slots_level_5_lte: Int
  spells_known_lt: Int
  OR: [LevelSpellcastingQueryInput!]
  spell_slots_level_4_ne: Int
  spell_slots_level_6_in: [Int]
  spell_slots_level_5_nin: [Int]
  spell_slots_level_6: Int
  spell_slots_level_5_lt: Int
  spell_slots_level_9_lte: Int
  spell_slots_level_2_gt: Int
  spell_slots_level_9_ne: Int
  spell_slots_level_5_gte: Int
  spell_slots_level_6_ne: Int
  cantrips_known_ne: Int
  spells_known_nin: [Int]
  spell_slots_level_1_ne: Int
  spell_slots_level_7_in: [Int]
  spell_slots_level_9_exists: Boolean
  spell_slots_level_6_nin: [Int]
  spell_slots_level_4_exists: Boolean
  cantrips_known_exists: Boolean
  spell_slots_level_9_nin: [Int]
  spell_slots_level_3_lte: Int
  spell_slots_level_1_exists: Boolean
  spell_slots_level_2_ne: Int
  spell_slots_level_8_in: [Int]
  spell_slots_level_8_gte: Int
  spell_slots_level_8_exists: Boolean
  spell_slots_level_9_lt: Int
  spell_slots_level_8_ne: Int
  spell_slots_level_6_exists: Boolean
  cantrips_known_gte: Int
  spell_slots_level_3_nin: [Int]
  spell_slots_level_7: Int
  cantrips_known_lte: Int
  spell_slots_level_3_gt: Int
  spells_known_gte: Int
  spell_slots_level_8_lte: Int
  spells_known_gt: Int
  spell_slots_level_9_gt: Int
  spell_slots_level_6_gte: Int
  spell_slots_level_4_lte: Int
  spell_slots_level_7_nin: [Int]
  spell_slots_level_1_lt: Int
  spell_slots_level_3_in: [Int]
  spells_known: Int
  spell_slots_level_1_lte: Int
  spell_slots_level_2_nin: [Int]
  spell_slots_level_6_gt: Int
  spell_slots_level_4_nin: [Int]
  spell_slots_level_8_gt: Int
  spell_slots_level_1: Int
  spell_slots_level_7_gte: Int
  spell_slots_level_5_gt: Int
  spell_slots_level_1_in: [Int]
  spell_slots_level_7_lt: Int
  spells_known_lte: Int
  spell_slots_level_1_nin: [Int]
  spell_slots_level_4_gte: Int
  spell_slots_level_3_ne: Int
  spell_slots_level_3_exists: Boolean
  spell_slots_level_7_lte: Int
  spell_slots_level_7_exists: Boolean
  spell_slots_level_3_lt: Int
  spell_slots_level_4_lt: Int
  spell_slots_level_9_in: [Int]
  spell_slots_level_5_ne: Int
  spell_slots_level_1_gte: Int
  spell_slots_level_3: Int
  spell_slots_level_7_ne: Int
  spell_slots_level_2_gte: Int
  spell_slots_level_9_gte: Int
  spell_slots_level_4_gt: Int
  cantrips_known_lt: Int
  spell_slots_level_4_in: [Int]
  spell_slots_level_6_lte: Int
  spells_known_in: [Int]
  AND: [LevelSpellcastingQueryInput!]
  spell_slots_level_5_exists: Boolean
  spell_slots_level_8: Int
  spell_slots_level_2_exists: Boolean
  spells_known_exists: Boolean
}

input LevelSpellcastingUpdateInput {
  cantrips_known_unset: Boolean
  spell_slots_level_1_inc: Int
  spell_slots_level_1: Int
  spell_slots_level_9_unset: Boolean
  spell_slots_level_3_unset: Boolean
  spell_slots_level_6: Int
  spell_slots_level_8_inc: Int
  spell_slots_level_7: Int
  spells_known_inc: Int
  spell_slots_level_4_unset: Boolean
  spell_slots_level_2_unset: Boolean
  spell_slots_level_4_inc: Int
  spell_slots_level_3_inc: Int
  spell_slots_level_4: Int
  spell_slots_level_2_inc: Int
  spells_known: Int
  spell_slots_level_9: Int
  spell_slots_level_7_inc: Int
  spells_known_unset: Boolean
  spell_slots_level_5: Int
  spell_slots_level_7_unset: Boolean
  spell_slots_level_8: Int
  spell_slots_level_5_inc: Int
  cantrips_known: Int
  spell_slots_level_9_inc: Int
  spell_slots_level_3: Int
  spell_slots_level_6_inc: Int
  spell_slots_level_1_unset: Boolean
  spell_slots_level_5_unset: Boolean
  cantrips_known_inc: Int
  spell_slots_level_8_unset: Boolean
  spell_slots_level_2: Int
  spell_slots_level_6_unset: Boolean
}

type LevelSubclass {
  index: String
  name: String
  url: String
}

type LevelSubclass_specific {
  additional_magical_secrets_max_lvl: Int
  aura_range: Int
}

input LevelSubclass_specificInsertInput {
  additional_magical_secrets_max_lvl: Int
  aura_range: Int
}

input LevelSubclass_specificQueryInput {
  aura_range_lte: Int
  additional_magical_secrets_max_lvl_exists: Boolean
  additional_magical_secrets_max_lvl: Int
  OR: [LevelSubclass_specificQueryInput!]
  additional_magical_secrets_max_lvl_in: [Int]
  aura_range_ne: Int
  aura_range_nin: [Int]
  aura_range_exists: Boolean
  additional_magical_secrets_max_lvl_lt: Int
  aura_range_gt: Int
  AND: [LevelSubclass_specificQueryInput!]
  additional_magical_secrets_max_lvl_nin: [Int]
  additional_magical_secrets_max_lvl_gte: Int
  aura_range: Int
  aura_range_lt: Int
  aura_range_in: [Int]
  aura_range_gte: Int
  additional_magical_secrets_max_lvl_lte: Int
  additional_magical_secrets_max_lvl_ne: Int
  additional_magical_secrets_max_lvl_gt: Int
}

input LevelSubclass_specificUpdateInput {
  aura_range_unset: Boolean
  additional_magical_secrets_max_lvl: Int
  additional_magical_secrets_max_lvl_inc: Int
  additional_magical_secrets_max_lvl_unset: Boolean
  aura_range: Int
  aura_range_inc: Int
}

input LevelSubclassInsertInput {
  index: String
  name: String
  url: String
}

input LevelSubclassQueryInput {
  name_lte: String
  url: String
  name_in: [String]
  index_lte: String
  name_gt: String
  index_exists: Boolean
  index: String
  url_nin: [String]
  url_exists: Boolean
  url_gte: String
  name_exists: Boolean
  url_gt: String
  name_gte: String
  url_lt: String
  AND: [LevelSubclassQueryInput!]
  url_in: [String]
  name_lt: String
  index_gt: String
  OR: [LevelSubclassQueryInput!]
  url_ne: String
  index_gte: String
  index_nin: [String]
  name_nin: [String]
  index_in: [String]
  name_ne: String
  index_ne: String
  name: String
  index_lt: String
  url_lte: String
}

input LevelSubclassUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input LevelUpdateInput {
  spellcasting: LevelSpellcastingUpdateInput
  subclass_unset: Boolean
  _id: ObjectId
  index: String
  prof_bonus: Int
  subclass: LevelSubclassUpdateInput
  class_specific_unset: Boolean
  feature_choices: [LevelFeature_choiceUpdateInput]
  features: [LevelFeatureUpdateInput]
  class: LevelClassUpdateInput
  class_unset: Boolean
  features_unset: Boolean
  ability_score_bonuses_inc: Int
  prof_bonus_inc: Int
  level_inc: Int
  subclass_specific: LevelSubclass_specificUpdateInput
  level: Int
  _id_unset: Boolean
  ability_score_bonuses_unset: Boolean
  spellcasting_unset: Boolean
  url: String
  level_unset: Boolean
  index_unset: Boolean
  ability_score_bonuses: Int
  subclass_specific_unset: Boolean
  url_unset: Boolean
  class_specific: LevelClass_specificUpdateInput
  feature_choices_unset: Boolean
  prof_bonus_unset: Boolean
}

type MagicItem {
  _id: ObjectId
  desc: [String]
  equipment_category: MagicItemEquipment_category
  index: String
  name: String
  url: String
}

type MagicItemEquipment_category {
  index: String
  name: String
  url: String
}

input MagicItemEquipment_categoryInsertInput {
  name: String
  url: String
  index: String
}

input MagicItemEquipment_categoryQueryInput {
  index_lte: String
  name_lte: String
  name_gte: String
  name: String
  url_in: [String]
  url_lt: String
  OR: [MagicItemEquipment_categoryQueryInput!]
  index: String
  index_lt: String
  index_ne: String
  url: String
  index_nin: [String]
  index_gte: String
  name_nin: [String]
  url_lte: String
  url_ne: String
  name_ne: String
  name_in: [String]
  index_gt: String
  AND: [MagicItemEquipment_categoryQueryInput!]
  name_gt: String
  url_gte: String
  name_exists: Boolean
  name_lt: String
  index_exists: Boolean
  url_nin: [String]
  index_in: [String]
  url_gt: String
  url_exists: Boolean
}

input MagicItemEquipment_categoryUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input MagicItemInsertInput {
  _id: ObjectId
  desc: [String]
  equipment_category: MagicItemEquipment_categoryInsertInput
  index: String
  name: String
  url: String
}

input MagicItemQueryInput {
  name: String
  _id: ObjectId
  name_gte: String
  equipment_category_exists: Boolean
  url: String
  OR: [MagicItemQueryInput!]
  index_gte: String
  name_nin: [String]
  url_ne: String
  _id_exists: Boolean
  name_gt: String
  url_gt: String
  _id_in: [ObjectId]
  index: String
  desc_in: [String]
  index_lte: String
  name_in: [String]
  index_nin: [String]
  index_ne: String
  url_gte: String
  name_ne: String
  name_exists: Boolean
  AND: [MagicItemQueryInput!]
  _id_nin: [ObjectId]
  index_lt: String
  _id_lt: ObjectId
  index_in: [String]
  index_exists: Boolean
  desc: [String]
  index_gt: String
  _id_lte: ObjectId
  _id_ne: ObjectId
  url_exists: Boolean
  _id_gt: ObjectId
  url_lte: String
  name_lte: String
  equipment_category: MagicItemEquipment_categoryQueryInput
  _id_gte: ObjectId
  url_nin: [String]
  url_lt: String
  url_in: [String]
  name_lt: String
  desc_exists: Boolean
  desc_nin: [String]
}

enum MagicItemSortByInput {
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
}

input MagicItemUpdateInput {
  equipment_category: MagicItemEquipment_categoryUpdateInput
  equipment_category_unset: Boolean
  index: String
  name: String
  url: String
  name_unset: Boolean
  url_unset: Boolean
  _id_unset: Boolean
  desc: [String]
  index_unset: Boolean
  desc_unset: Boolean
  _id: ObjectId
}

type MagicSchool {
  _id: ObjectId
  desc: String
  index: String
  name: String
  url: String
}

input MagicSchoolInsertInput {
  name: String
  url: String
  _id: ObjectId
  desc: String
  index: String
}

input MagicSchoolQueryInput {
  name_in: [String]
  _id_ne: ObjectId
  _id_exists: Boolean
  url_nin: [String]
  index_nin: [String]
  desc_in: [String]
  _id: ObjectId
  desc: String
  index_gt: String
  desc_gte: String
  url_gte: String
  desc_lte: String
  desc_nin: [String]
  name_ne: String
  _id_gte: ObjectId
  AND: [MagicSchoolQueryInput!]
  _id_lt: ObjectId
  name_gte: String
  url_in: [String]
  _id_in: [ObjectId]
  desc_lt: String
  desc_ne: String
  _id_lte: ObjectId
  name_nin: [String]
  _id_nin: [ObjectId]
  index_lt: String
  url_gt: String
  url_lte: String
  index_exists: Boolean
  url: String
  desc_gt: String
  name_exists: Boolean
  url_exists: Boolean
  _id_gt: ObjectId
  OR: [MagicSchoolQueryInput!]
  index_ne: String
  desc_exists: Boolean
  index_gte: String
  name: String
  name_lte: String
  index_in: [String]
  index_lte: String
  name_lt: String
  index: String
  name_gt: String
  url_lt: String
  url_ne: String
}

enum MagicSchoolSortByInput {
  URL_DESC
  _ID_DESC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  _ID_ASC
  DESC_ASC
  URL_ASC
}

input MagicSchoolUpdateInput {
  url_unset: Boolean
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  desc: String
  index: String
  _id: ObjectId
  desc_unset: Boolean
  _id_unset: Boolean
}

type Monster {
  _id: ObjectId
  actions: [MonsterAction]
  alignment: String
  armor_class: Int
  challenge_rating: Int
  charisma: Int
  condition_immunities: [MonsterCondition_immunity]
  constitution: Int
  damage_immunities: [String]
  damage_resistances: [String]
  damage_vulnerabilities: [String]
  dexterity: Int
  hit_dice: String
  hit_points: Int
  index: String
  intelligence: Int
  languages: String
  legendary_actions: [MonsterLegendary_action]
  name: String
  other_speeds: [MonsterOther_speed]
  proficiencies: [MonsterProficiency]
  reactions: [MonsterReaction]
  senses: MonsterSense
  size: String
  special_abilities: [MonsterSpecial_ability]
  speed: MonsterSpeed
  strength: Int
  subtype: String
  type: String
  url: String
  wisdom: Int
}

type MonsterAction {
  attack_bonus: Int
  attack_options: MonsterActionAttack_option
  damage: [MonsterActionDamage]
  desc: String
  name: String
  options: MonsterActionOption
  usage: MonsterActionUsage
}

type MonsterActionAttack_option {
  choose: Int
  from: [MonsterActionAttack_optionFrom]
  type: String
}

type MonsterActionAttack_optionFrom {
  damage: [MonsterActionAttack_optionFromDamage]
  dc: MonsterActionAttack_optionFromDc
  name: String
}

type MonsterActionAttack_optionFromDamage {
  damage_dice: String
  damage_type: MonsterActionAttack_optionFromDamageDamage_type
}

type MonsterActionAttack_optionFromDamageDamage_type {
  index: String
  name: String
  url: String
}

input MonsterActionAttack_optionFromDamageDamage_typeInsertInput {
  name: String
  url: String
  index: String
}

input MonsterActionAttack_optionFromDamageDamage_typeQueryInput {
  url_lt: String
  url_ne: String
  url_lte: String
  index_lte: String
  name_lt: String
  name_gte: String
  url: String
  name_nin: [String]
  url_gte: String
  url_gt: String
  name_exists: Boolean
  index_gte: String
  index_gt: String
  OR: [MonsterActionAttack_optionFromDamageDamage_typeQueryInput!]
  url_in: [String]
  index_nin: [String]
  index_ne: String
  name_ne: String
  name_lte: String
  index: String
  index_lt: String
  name_in: [String]
  url_nin: [String]
  AND: [MonsterActionAttack_optionFromDamageDamage_typeQueryInput!]
  index_exists: Boolean
  url_exists: Boolean
  index_in: [String]
  name: String
  name_gt: String
}

input MonsterActionAttack_optionFromDamageDamage_typeUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input MonsterActionAttack_optionFromDamageInsertInput {
  damage_dice: String
  damage_type: MonsterActionAttack_optionFromDamageDamage_typeInsertInput
}

input MonsterActionAttack_optionFromDamageQueryInput {
  damage_dice_in: [String]
  damage_type_exists: Boolean
  damage_dice_gt: String
  damage_dice_gte: String
  damage_dice_nin: [String]
  OR: [MonsterActionAttack_optionFromDamageQueryInput!]
  damage_type: MonsterActionAttack_optionFromDamageDamage_typeQueryInput
  damage_dice_lte: String
  AND: [MonsterActionAttack_optionFromDamageQueryInput!]
  damage_dice: String
  damage_dice_ne: String
  damage_dice_exists: Boolean
  damage_dice_lt: String
}

input MonsterActionAttack_optionFromDamageUpdateInput {
  damage_dice: String
  damage_dice_unset: Boolean
  damage_type: MonsterActionAttack_optionFromDamageDamage_typeUpdateInput
  damage_type_unset: Boolean
}

type MonsterActionAttack_optionFromDc {
  dc_type: MonsterActionAttack_optionFromDcDc_type
  dc_value: Int
  success_type: String
}

type MonsterActionAttack_optionFromDcDc_type {
  index: String
  name: String
  url: String
}

input MonsterActionAttack_optionFromDcDc_typeInsertInput {
  name: String
  url: String
  index: String
}

input MonsterActionAttack_optionFromDcDc_typeQueryInput {
  AND: [MonsterActionAttack_optionFromDcDc_typeQueryInput!]
  OR: [MonsterActionAttack_optionFromDcDc_typeQueryInput!]
  url_gte: String
  index_lte: String
  index_ne: String
  name_in: [String]
  url_lt: String
  name: String
  name_lte: String
  name_ne: String
  name_gt: String
  index_in: [String]
  name_lt: String
  index_lt: String
  index: String
  url_exists: Boolean
  url: String
  url_lte: String
  index_exists: Boolean
  index_gte: String
  url_in: [String]
  url_gt: String
  name_nin: [String]
  name_gte: String
  name_exists: Boolean
  url_ne: String
  index_gt: String
  index_nin: [String]
  url_nin: [String]
}

input MonsterActionAttack_optionFromDcDc_typeUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input MonsterActionAttack_optionFromDcInsertInput {
  dc_value: Int
  success_type: String
  dc_type: MonsterActionAttack_optionFromDcDc_typeInsertInput
}

input MonsterActionAttack_optionFromDcQueryInput {
  dc_value_exists: Boolean
  dc_value_ne: Int
  OR: [MonsterActionAttack_optionFromDcQueryInput!]
  success_type_gte: String
  success_type_lt: String
  dc_value_lte: Int
  success_type_exists: Boolean
  success_type_ne: String
  dc_value_lt: Int
  success_type_lte: String
  dc_value_gte: Int
  success_type_in: [String]
  AND: [MonsterActionAttack_optionFromDcQueryInput!]
  dc_type_exists: Boolean
  dc_value_nin: [Int]
  dc_value_gt: Int
  dc_value_in: [Int]
  dc_type: MonsterActionAttack_optionFromDcDc_typeQueryInput
  dc_value: Int
  success_type_nin: [String]
  success_type_gt: String
  success_type: String
}

input MonsterActionAttack_optionFromDcUpdateInput {
  dc_type: MonsterActionAttack_optionFromDcDc_typeUpdateInput
  dc_type_unset: Boolean
  dc_value: Int
  dc_value_inc: Int
  dc_value_unset: Boolean
  success_type: String
  success_type_unset: Boolean
}

input MonsterActionAttack_optionFromInsertInput {
  dc: MonsterActionAttack_optionFromDcInsertInput
  name: String
  damage: [MonsterActionAttack_optionFromDamageInsertInput]
}

input MonsterActionAttack_optionFromQueryInput {
  damage_exists: Boolean
  name: String
  dc: MonsterActionAttack_optionFromDcQueryInput
  name_gte: String
  name_lte: String
  damage_nin: [MonsterActionAttack_optionFromDamageQueryInput]
  name_lt: String
  damage: [MonsterActionAttack_optionFromDamageQueryInput]
  name_in: [String]
  name_ne: String
  dc_exists: Boolean
  name_nin: [String]
  name_exists: Boolean
  OR: [MonsterActionAttack_optionFromQueryInput!]
  name_gt: String
  AND: [MonsterActionAttack_optionFromQueryInput!]
  damage_in: [MonsterActionAttack_optionFromDamageQueryInput]
}

input MonsterActionAttack_optionFromUpdateInput {
  dc_unset: Boolean
  name: String
  name_unset: Boolean
  damage: [MonsterActionAttack_optionFromDamageUpdateInput]
  damage_unset: Boolean
  dc: MonsterActionAttack_optionFromDcUpdateInput
}

input MonsterActionAttack_optionInsertInput {
  from: [MonsterActionAttack_optionFromInsertInput]
  type: String
  choose: Int
}

input MonsterActionAttack_optionQueryInput {
  type_gt: String
  choose_lt: Int
  choose: Int
  OR: [MonsterActionAttack_optionQueryInput!]
  type_lte: String
  choose_exists: Boolean
  choose_gte: Int
  from_nin: [MonsterActionAttack_optionFromQueryInput]
  choose_nin: [Int]
  type_nin: [String]
  type_exists: Boolean
  from: [MonsterActionAttack_optionFromQueryInput]
  from_exists: Boolean
  choose_lte: Int
  type_in: [String]
  choose_ne: Int
  type_gte: String
  type: String
  from_in: [MonsterActionAttack_optionFromQueryInput]
  choose_in: [Int]
  choose_gt: Int
  type_lt: String
  AND: [MonsterActionAttack_optionQueryInput!]
  type_ne: String
}

input MonsterActionAttack_optionUpdateInput {
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
  from: [MonsterActionAttack_optionFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
}

type MonsterActionDamage {
  damage_dice: String
  damage_type: MonsterActionDamageDamage_type
}

type MonsterActionDamageDamage_type {
  index: String
  name: String
  url: String
}

input MonsterActionDamageDamage_typeInsertInput {
  name: String
  url: String
  index: String
}

input MonsterActionDamageDamage_typeQueryInput {
  name_in: [String]
  index_gte: String
  index_in: [String]
  url_in: [String]
  name_lte: String
  url_gt: String
  url_lt: String
  name_ne: String
  name_exists: Boolean
  index: String
  index_lt: String
  name_nin: [String]
  index_lte: String
  url: String
  url_lte: String
  name_lt: String
  AND: [MonsterActionDamageDamage_typeQueryInput!]
  name: String
  url_exists: Boolean
  url_nin: [String]
  OR: [MonsterActionDamageDamage_typeQueryInput!]
  name_gte: String
  url_gte: String
  index_nin: [String]
  index_exists: Boolean
  url_ne: String
  index_gt: String
  index_ne: String
  name_gt: String
}

input MonsterActionDamageDamage_typeUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input MonsterActionDamageInsertInput {
  damage_dice: String
  damage_type: MonsterActionDamageDamage_typeInsertInput
}

input MonsterActionDamageQueryInput {
  damage_dice_nin: [String]
  OR: [MonsterActionDamageQueryInput!]
  damage_dice_gt: String
  damage_dice_ne: String
  AND: [MonsterActionDamageQueryInput!]
  damage_dice_lt: String
  damage_dice_in: [String]
  damage_type_exists: Boolean
  damage_type: MonsterActionDamageDamage_typeQueryInput
  damage_dice: String
  damage_dice_exists: Boolean
  damage_dice_gte: String
  damage_dice_lte: String
}

input MonsterActionDamageUpdateInput {
  damage_dice: String
  damage_dice_unset: Boolean
  damage_type: MonsterActionDamageDamage_typeUpdateInput
  damage_type_unset: Boolean
}

input MonsterActionInsertInput {
  usage: MonsterActionUsageInsertInput
  attack_bonus: Int
  attack_options: MonsterActionAttack_optionInsertInput
  damage: [MonsterActionDamageInsertInput]
  desc: String
  name: String
  options: MonsterActionOptionInsertInput
}

type MonsterActionOption {
  choose: Int
}

input MonsterActionOptionInsertInput {
  choose: Int
}

input MonsterActionOptionQueryInput {
  OR: [MonsterActionOptionQueryInput!]
  choose_lt: Int
  choose_gte: Int
  choose_in: [Int]
  choose_exists: Boolean
  choose_ne: Int
  choose: Int
  choose_gt: Int
  choose_nin: [Int]
  AND: [MonsterActionOptionQueryInput!]
  choose_lte: Int
}

input MonsterActionOptionUpdateInput {
  choose_unset: Boolean
  choose: Int
  choose_inc: Int
}

input MonsterActionQueryInput {
  usage: MonsterActionUsageQueryInput
  desc_in: [String]
  attack_bonus_ne: Int
  desc_gt: String
  name_ne: String
  name_exists: Boolean
  attack_bonus: Int
  damage_in: [MonsterActionDamageQueryInput]
  options: MonsterActionOptionQueryInput
  attack_bonus_nin: [Int]
  name_nin: [String]
  attack_bonus_in: [Int]
  attack_bonus_gt: Int
  attack_bonus_gte: Int
  damage: [MonsterActionDamageQueryInput]
  attack_options: MonsterActionAttack_optionQueryInput
  AND: [MonsterActionQueryInput!]
  damage_exists: Boolean
  name_in: [String]
  name_gte: String
  attack_bonus_exists: Boolean
  damage_nin: [MonsterActionDamageQueryInput]
  name_lte: String
  usage_exists: Boolean
  attack_bonus_lte: Int
  desc_gte: String
  desc_lte: String
  OR: [MonsterActionQueryInput!]
  desc_lt: String
  desc: String
  name_lt: String
  attack_bonus_lt: Int
  name_gt: String
  desc_nin: [String]
  options_exists: Boolean
  desc_ne: String
  desc_exists: Boolean
  name: String
  attack_options_exists: Boolean
}

input MonsterActionUpdateInput {
  attack_options_unset: Boolean
  damage_unset: Boolean
  options: MonsterActionOptionUpdateInput
  usage_unset: Boolean
  desc_unset: Boolean
  options_unset: Boolean
  name: String
  name_unset: Boolean
  usage: MonsterActionUsageUpdateInput
  attack_bonus_unset: Boolean
  attack_bonus: Int
  attack_bonus_inc: Int
  attack_options: MonsterActionAttack_optionUpdateInput
  damage: [MonsterActionDamageUpdateInput]
  desc: String
}

type MonsterActionUsage {
  dice: String
  min_value: Int
  type: String
}

input MonsterActionUsageInsertInput {
  dice: String
  min_value: Int
  type: String
}

input MonsterActionUsageQueryInput {
  type_exists: Boolean
  type_gt: String
  type_ne: String
  type_lt: String
  min_value_nin: [Int]
  type_gte: String
  dice_lte: String
  min_value_in: [Int]
  type: String
  dice: String
  dice_in: [String]
  dice_lt: String
  type_lte: String
  min_value_ne: Int
  type_nin: [String]
  dice_ne: String
  AND: [MonsterActionUsageQueryInput!]
  OR: [MonsterActionUsageQueryInput!]
  min_value_lt: Int
  min_value_lte: Int
  dice_nin: [String]
  min_value_gt: Int
  min_value: Int
  min_value_exists: Boolean
  min_value_gte: Int
  dice_gte: String
  dice_gt: String
  type_in: [String]
  dice_exists: Boolean
}

input MonsterActionUsageUpdateInput {
  min_value_unset: Boolean
  type: String
  type_unset: Boolean
  dice: String
  dice_unset: Boolean
  min_value: Int
  min_value_inc: Int
}

type MonsterCondition_immunity {
  index: String
  name: String
  url: String
}

input MonsterCondition_immunityInsertInput {
  name: String
  url: String
  index: String
}

input MonsterCondition_immunityQueryInput {
  url_gte: String
  url_lt: String
  OR: [MonsterCondition_immunityQueryInput!]
  name_in: [String]
  url_nin: [String]
  url_lte: String
  url_ne: String
  index_ne: String
  url_exists: Boolean
  index_in: [String]
  index_nin: [String]
  name_exists: Boolean
  index_gte: String
  name: String
  name_gte: String
  index_exists: Boolean
  index_lt: String
  index: String
  name_gt: String
  url_in: [String]
  AND: [MonsterCondition_immunityQueryInput!]
  name_nin: [String]
  name_ne: String
  url: String
  url_gt: String
  index_gt: String
  name_lte: String
  name_lt: String
  index_lte: String
}

input MonsterCondition_immunityUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input MonsterInsertInput {
  damage_immunities: [String]
  charisma: Int
  damage_resistances: [String]
  _id: ObjectId
  wisdom: Int
  url: String
  strength: Int
  constitution: Int
  speed: MonsterSpeedInsertInput
  damage_vulnerabilities: [String]
  index: String
  reactions: [MonsterReactionInsertInput]
  subtype: String
  other_speeds: [MonsterOther_speedInsertInput]
  condition_immunities: [MonsterCondition_immunityInsertInput]
  armor_class: Int
  legendary_actions: [MonsterLegendary_actionInsertInput]
  senses: MonsterSenseInsertInput
  name: String
  intelligence: Int
  languages: String
  type: String
  alignment: String
  actions: [MonsterActionInsertInput]
  challenge_rating: Int
  hit_dice: String
  hit_points: Int
  special_abilities: [MonsterSpecial_abilityInsertInput]
  proficiencies: [MonsterProficiencyInsertInput]
  size: String
  dexterity: Int
}

type MonsterLegendary_action {
  desc: String
  name: String
}

input MonsterLegendary_actionInsertInput {
  name: String
  desc: String
}

input MonsterLegendary_actionQueryInput {
  name_ne: String
  desc_nin: [String]
  desc_exists: Boolean
  OR: [MonsterLegendary_actionQueryInput!]
  name_nin: [String]
  AND: [MonsterLegendary_actionQueryInput!]
  desc_lt: String
  desc_lte: String
  name_exists: Boolean
  name_lt: String
  desc: String
  desc_ne: String
  desc_gt: String
  desc_in: [String]
  name: String
  name_gte: String
  name_lte: String
  name_in: [String]
  desc_gte: String
  name_gt: String
}

input MonsterLegendary_actionUpdateInput {
  name_unset: Boolean
  desc: String
  desc_unset: Boolean
  name: String
}

type MonsterOther_speed {
  form: String
  speed: MonsterOther_speedSpeed
}

input MonsterOther_speedInsertInput {
  form: String
  speed: MonsterOther_speedSpeedInsertInput
}

input MonsterOther_speedQueryInput {
  OR: [MonsterOther_speedQueryInput!]
  form_gt: String
  speed: MonsterOther_speedSpeedQueryInput
  form_exists: Boolean
  form_ne: String
  form_lt: String
  AND: [MonsterOther_speedQueryInput!]
  form_lte: String
  form_in: [String]
  form: String
  form_gte: String
  form_nin: [String]
  speed_exists: Boolean
}

type MonsterOther_speedSpeed {
  climb: String
  walk: String
}

input MonsterOther_speedSpeedInsertInput {
  climb: String
  walk: String
}

input MonsterOther_speedSpeedQueryInput {
  climb_in: [String]
  walk: String
  walk_in: [String]
  AND: [MonsterOther_speedSpeedQueryInput!]
  climb_lte: String
  climb_nin: [String]
  OR: [MonsterOther_speedSpeedQueryInput!]
  walk_nin: [String]
  walk_lt: String
  climb_exists: Boolean
  climb_gt: String
  walk_lte: String
  walk_ne: String
  walk_gt: String
  climb_lt: String
  climb_ne: String
  climb_gte: String
  walk_exists: Boolean
  climb: String
  walk_gte: String
}

input MonsterOther_speedSpeedUpdateInput {
  climb_unset: Boolean
  walk: String
  walk_unset: Boolean
  climb: String
}

input MonsterOther_speedUpdateInput {
  speed: MonsterOther_speedSpeedUpdateInput
  speed_unset: Boolean
  form: String
  form_unset: Boolean
}

type MonsterProficiency {
  proficiency: MonsterProficiencyProficiency
  value: Int
}

input MonsterProficiencyInsertInput {
  proficiency: MonsterProficiencyProficiencyInsertInput
  value: Int
}

type MonsterProficiencyProficiency {
  index: String
  name: String
  url: String
}

input MonsterProficiencyProficiencyInsertInput {
  index: String
  name: String
  url: String
}

input MonsterProficiencyProficiencyQueryInput {
  url_gt: String
  index_ne: String
  url_ne: String
  index_gte: String
  index_in: [String]
  AND: [MonsterProficiencyProficiencyQueryInput!]
  url_in: [String]
  name_gt: String
  name_in: [String]
  index: String
  name_nin: [String]
  name_exists: Boolean
  name_lt: String
  index_lte: String
  url_lt: String
  name_lte: String
  url: String
  url_nin: [String]
  OR: [MonsterProficiencyProficiencyQueryInput!]
  name: String
  name_gte: String
  url_gte: String
  url_lte: String
  index_exists: Boolean
  index_gt: String
  url_exists: Boolean
  name_ne: String
  index_lt: String
  index_nin: [String]
}

input MonsterProficiencyProficiencyUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input MonsterProficiencyQueryInput {
  value: Int
  OR: [MonsterProficiencyQueryInput!]
  proficiency: MonsterProficiencyProficiencyQueryInput
  AND: [MonsterProficiencyQueryInput!]
  proficiency_exists: Boolean
  value_nin: [Int]
  value_exists: Boolean
  value_ne: Int
  value_gte: Int
  value_lt: Int
  value_in: [Int]
  value_gt: Int
  value_lte: Int
}

input MonsterProficiencyUpdateInput {
  value: Int
  value_inc: Int
  value_unset: Boolean
  proficiency: MonsterProficiencyProficiencyUpdateInput
  proficiency_unset: Boolean
}

input MonsterQueryInput {
  dexterity_exists: Boolean
  _id_nin: [ObjectId]
  wisdom_gt: Int
  size_gt: String
  dexterity_lte: Int
  index_lte: String
  constitution_in: [Int]
  AND: [MonsterQueryInput!]
  damage_resistances_exists: Boolean
  alignment_gte: String
  subtype_exists: Boolean
  charisma: Int
  name_lte: String
  charisma_nin: [Int]
  condition_immunities_exists: Boolean
  subtype_lt: String
  languages_gte: String
  intelligence_nin: [Int]
  name_gte: String
  index_ne: String
  hit_points_ne: Int
  strength_gt: Int
  index_gte: String
  dexterity_in: [Int]
  name: String
  legendary_actions: [MonsterLegendary_actionQueryInput]
  damage_resistances_in: [String]
  index_nin: [String]
  name_in: [String]
  size_gte: String
  alignment_lt: String
  size_nin: [String]
  wisdom_lte: Int
  armor_class_gt: Int
  _id_exists: Boolean
  damage_vulnerabilities: [String]
  hit_points_exists: Boolean
  subtype_nin: [String]
  _id_lte: ObjectId
  damage_immunities_nin: [String]
  strength_lte: Int
  challenge_rating_exists: Boolean
  armor_class_exists: Boolean
  type_nin: [String]
  intelligence_ne: Int
  intelligence_in: [Int]
  type: String
  hit_dice: String
  languages_gt: String
  subtype: String
  speed: MonsterSpeedQueryInput
  _id_gt: ObjectId
  intelligence_lte: Int
  charisma_ne: Int
  armor_class_lt: Int
  wisdom_exists: Boolean
  armor_class_ne: Int
  url: String
  _id_in: [ObjectId]
  damage_vulnerabilities_exists: Boolean
  alignment_ne: String
  reactions_nin: [MonsterReactionQueryInput]
  armor_class_nin: [Int]
  url_nin: [String]
  condition_immunities_in: [MonsterCondition_immunityQueryInput]
  other_speeds: [MonsterOther_speedQueryInput]
  damage_vulnerabilities_in: [String]
  type_ne: String
  constitution_lte: Int
  url_in: [String]
  strength_nin: [Int]
  type_lte: String
  charisma_gte: Int
  charisma_lte: Int
  strength_in: [Int]
  hit_points_lt: Int
  alignment_lte: String
  name_exists: Boolean
  armor_class_lte: Int
  languages_lt: String
  intelligence_gt: Int
  url_lt: String
  damage_immunities_in: [String]
  constitution_nin: [Int]
  index_lt: String
  legendary_actions_nin: [MonsterLegendary_actionQueryInput]
  alignment_exists: Boolean
  alignment_in: [String]
  hit_points: Int
  wisdom_nin: [Int]
  dexterity_nin: [Int]
  constitution_exists: Boolean
  type_gte: String
  hit_dice_gt: String
  senses_exists: Boolean
  challenge_rating_lte: Int
  OR: [MonsterQueryInput!]
  type_exists: Boolean
  size: String
  size_ne: String
  challenge_rating_lt: Int
  _id_lt: ObjectId
  name_ne: String
  wisdom_in: [Int]
  index: String
  hit_dice_nin: [String]
  languages_nin: [String]
  _id: ObjectId
  armor_class_gte: Int
  languages: String
  challenge_rating_gt: Int
  hit_dice_in: [String]
  proficiencies: [MonsterProficiencyQueryInput]
  damage_immunities_exists: Boolean
  legendary_actions_exists: Boolean
  constitution_gt: Int
  charisma_in: [Int]
  url_ne: String
  special_abilities_nin: [MonsterSpecial_abilityQueryInput]
  subtype_lte: String
  url_gte: String
  hit_points_gte: Int
  languages_ne: String
  intelligence_exists: Boolean
  languages_lte: String
  dexterity_gt: Int
  wisdom_ne: Int
  actions_nin: [MonsterActionQueryInput]
  challenge_rating_nin: [Int]
  alignment_gt: String
  charisma_gt: Int
  intelligence_lt: Int
  challenge_rating: Int
  index_gt: String
  strength: Int
  type_in: [String]
  charisma_lt: Int
  hit_points_in: [Int]
  damage_resistances_nin: [String]
  legendary_actions_in: [MonsterLegendary_actionQueryInput]
  wisdom_gte: Int
  type_gt: String
  subtype_gt: String
  type_lt: String
  reactions: [MonsterReactionQueryInput]
  index_in: [String]
  subtype_ne: String
  strength_exists: Boolean
  url_gt: String
  name_lt: String
  wisdom_lt: Int
  name_gt: String
  url_lte: String
  alignment_nin: [String]
  special_abilities_exists: Boolean
  reactions_in: [MonsterReactionQueryInput]
  strength_lt: Int
  challenge_rating_ne: Int
  index_exists: Boolean
  actions_in: [MonsterActionQueryInput]
  condition_immunities: [MonsterCondition_immunityQueryInput]
  intelligence: Int
  actions_exists: Boolean
  intelligence_gte: Int
  constitution: Int
  senses: MonsterSenseQueryInput
  hit_dice_exists: Boolean
  hit_points_lte: Int
  armor_class: Int
  strength_ne: Int
  size_lte: String
  dexterity_gte: Int
  armor_class_in: [Int]
  url_exists: Boolean
  subtype_gte: String
  dexterity: Int
  speed_exists: Boolean
  hit_points_nin: [Int]
  constitution_ne: Int
  actions: [MonsterActionQueryInput]
  hit_dice_gte: String
  other_speeds_in: [MonsterOther_speedQueryInput]
  languages_in: [String]
  strength_gte: Int
  proficiencies_in: [MonsterProficiencyQueryInput]
  condition_immunities_nin: [MonsterCondition_immunityQueryInput]
  reactions_exists: Boolean
  size_lt: String
  hit_points_gt: Int
  size_exists: Boolean
  dexterity_ne: Int
  constitution_lt: Int
  hit_dice_ne: String
  constitution_gte: Int
  challenge_rating_gte: Int
  alignment: String
  proficiencies_exists: Boolean
  damage_immunities: [String]
  special_abilities: [MonsterSpecial_abilityQueryInput]
  damage_vulnerabilities_nin: [String]
  other_speeds_nin: [MonsterOther_speedQueryInput]
  damage_resistances: [String]
  hit_dice_lt: String
  wisdom: Int
  special_abilities_in: [MonsterSpecial_abilityQueryInput]
  dexterity_lt: Int
  _id_gte: ObjectId
  proficiencies_nin: [MonsterProficiencyQueryInput]
  hit_dice_lte: String
  size_in: [String]
  other_speeds_exists: Boolean
  name_nin: [String]
  subtype_in: [String]
  languages_exists: Boolean
  _id_ne: ObjectId
  charisma_exists: Boolean
  challenge_rating_in: [Int]
}

type MonsterReaction {
  desc: String
  name: String
}

input MonsterReactionInsertInput {
  desc: String
  name: String
}

input MonsterReactionQueryInput {
  AND: [MonsterReactionQueryInput!]
  desc_lt: String
  desc_gt: String
  name_ne: String
  desc_ne: String
  OR: [MonsterReactionQueryInput!]
  name_lte: String
  name_lt: String
  name_exists: Boolean
  name_in: [String]
  name_gte: String
  desc: String
  desc_lte: String
  name_gt: String
  desc_in: [String]
  desc_nin: [String]
  desc_gte: String
  desc_exists: Boolean
  name: String
  name_nin: [String]
}

input MonsterReactionUpdateInput {
  name: String
  name_unset: Boolean
  desc: String
  desc_unset: Boolean
}

type MonsterSense {
  blindsight: String
  darkvision: String
  passive_perception: Int
  tremorsense: String
  truesight: String
}

input MonsterSenseInsertInput {
  blindsight: String
  darkvision: String
  passive_perception: Int
  tremorsense: String
  truesight: String
}

input MonsterSenseQueryInput {
  truesight_gte: String
  tremorsense_in: [String]
  darkvision_lt: String
  passive_perception_ne: Int
  blindsight_lt: String
  tremorsense_lt: String
  blindsight_lte: String
  passive_perception_lte: Int
  truesight: String
  passive_perception: Int
  tremorsense_gt: String
  OR: [MonsterSenseQueryInput!]
  passive_perception_in: [Int]
  darkvision_ne: String
  truesight_lt: String
  blindsight_in: [String]
  passive_perception_nin: [Int]
  tremorsense_nin: [String]
  tremorsense_ne: String
  darkvision_in: [String]
  blindsight_nin: [String]
  blindsight_ne: String
  darkvision: String
  darkvision_lte: String
  darkvision_gt: String
  truesight_in: [String]
  tremorsense_gte: String
  truesight_lte: String
  blindsight_gte: String
  darkvision_nin: [String]
  passive_perception_exists: Boolean
  AND: [MonsterSenseQueryInput!]
  blindsight_gt: String
  darkvision_exists: Boolean
  darkvision_gte: String
  truesight_ne: String
  tremorsense_lte: String
  truesight_gt: String
  blindsight_exists: Boolean
  truesight_nin: [String]
  truesight_exists: Boolean
  blindsight: String
  passive_perception_gte: Int
  tremorsense_exists: Boolean
  tremorsense: String
  passive_perception_lt: Int
  passive_perception_gt: Int
}

input MonsterSenseUpdateInput {
  passive_perception: Int
  passive_perception_inc: Int
  tremorsense: String
  blindsight: String
  darkvision: String
  truesight: String
  blindsight_unset: Boolean
  darkvision_unset: Boolean
  truesight_unset: Boolean
  passive_perception_unset: Boolean
  tremorsense_unset: Boolean
}

enum MonsterSortByInput {
  STRENGTH_ASC
  CHARISMA_ASC
  TYPE_DESC
  INDEX_DESC
  HIT_POINTS_DESC
  NAME_DESC
  URL_ASC
  CHARISMA_DESC
  LANGUAGES_ASC
  ALIGNMENT_ASC
  SUBTYPE_ASC
  URL_DESC
  INTELLIGENCE_ASC
  CONSTITUTION_ASC
  ARMOR_CLASS_DESC
  NAME_ASC
  CHALLENGE_RATING_DESC
  HIT_DICE_ASC
  SUBTYPE_DESC
  WISDOM_ASC
  SIZE_ASC
  INDEX_ASC
  CHALLENGE_RATING_ASC
  _ID_ASC
  HIT_POINTS_ASC
  STRENGTH_DESC
  WISDOM_DESC
  HIT_DICE_DESC
  SIZE_DESC
  TYPE_ASC
  ARMOR_CLASS_ASC
  _ID_DESC
  DEXTERITY_ASC
  ALIGNMENT_DESC
  LANGUAGES_DESC
  DEXTERITY_DESC
  INTELLIGENCE_DESC
  CONSTITUTION_DESC
}

type MonsterSpecial_ability {
  desc: String
  name: String
}

input MonsterSpecial_abilityInsertInput {
  desc: String
  name: String
}

input MonsterSpecial_abilityQueryInput {
  AND: [MonsterSpecial_abilityQueryInput!]
  OR: [MonsterSpecial_abilityQueryInput!]
  desc_gt: String
  desc_in: [String]
  name_in: [String]
  name_nin: [String]
  name_lt: String
  name_gt: String
  desc: String
  desc_lt: String
  desc_nin: [String]
  desc_gte: String
  name: String
  name_exists: Boolean
  name_gte: String
  name_lte: String
  desc_lte: String
  desc_ne: String
  name_ne: String
  desc_exists: Boolean
}

input MonsterSpecial_abilityUpdateInput {
  desc_unset: Boolean
  name: String
  name_unset: Boolean
  desc: String
}

type MonsterSpeed {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

input MonsterSpeedInsertInput {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

input MonsterSpeedQueryInput {
  AND: [MonsterSpeedQueryInput!]
  climb_nin: [String]
  climb: String
  walk_exists: Boolean
  climb_gte: String
  fly_gte: String
  OR: [MonsterSpeedQueryInput!]
  fly: String
  burrow_in: [String]
  fly_exists: Boolean
  fly_gt: String
  fly_lte: String
  swim_ne: String
  swim_in: [String]
  burrow: String
  burrow_ne: String
  fly_nin: [String]
  walk_in: [String]
  hover_exists: Boolean
  swim_lt: String
  walk_gte: String
  walk_lte: String
  fly_lt: String
  burrow_gt: String
  swim_exists: Boolean
  walk: String
  fly_ne: String
  climb_exists: Boolean
  burrow_lte: String
  swim_gte: String
  burrow_lt: String
  walk_gt: String
  swim_gt: String
  hover_ne: Boolean
  climb_lte: String
  swim_lte: String
  burrow_exists: Boolean
  burrow_nin: [String]
  climb_in: [String]
  hover: Boolean
  walk_ne: String
  swim_nin: [String]
  climb_gt: String
  walk_nin: [String]
  climb_lt: String
  swim: String
  walk_lt: String
  climb_ne: String
  burrow_gte: String
  fly_in: [String]
}

input MonsterSpeedUpdateInput {
  walk_unset: Boolean
  climb: String
  fly: String
  swim: String
  burrow_unset: Boolean
  hover: Boolean
  walk: String
  fly_unset: Boolean
  hover_unset: Boolean
  burrow: String
  swim_unset: Boolean
  climb_unset: Boolean
}

input MonsterUpdateInput {
  speed: MonsterSpeedUpdateInput
  damage_resistances: [String]
  charisma_unset: Boolean
  url_unset: Boolean
  damage_immunities: [String]
  constitution_inc: Int
  index_unset: Boolean
  senses: MonsterSenseUpdateInput
  actions: [MonsterActionUpdateInput]
  alignment_unset: Boolean
  wisdom_unset: Boolean
  size_unset: Boolean
  hit_dice_unset: Boolean
  charisma_inc: Int
  dexterity_inc: Int
  name: String
  constitution: Int
  damage_vulnerabilities: [String]
  type_unset: Boolean
  challenge_rating: Int
  legendary_actions: [MonsterLegendary_actionUpdateInput]
  legendary_actions_unset: Boolean
  index: String
  alignment: String
  dexterity: Int
  condition_immunities: [MonsterCondition_immunityUpdateInput]
  wisdom: Int
  type: String
  wisdom_inc: Int
  intelligence_inc: Int
  intelligence_unset: Boolean
  constitution_unset: Boolean
  subtype: String
  damage_resistances_unset: Boolean
  hit_points_unset: Boolean
  _id_unset: Boolean
  reactions_unset: Boolean
  hit_points: Int
  url: String
  proficiencies_unset: Boolean
  special_abilities: [MonsterSpecial_abilityUpdateInput]
  strength: Int
  special_abilities_unset: Boolean
  speed_unset: Boolean
  challenge_rating_inc: Int
  armor_class_inc: Int
  charisma: Int
  armor_class: Int
  name_unset: Boolean
  languages: String
  hit_points_inc: Int
  other_speeds: [MonsterOther_speedUpdateInput]
  senses_unset: Boolean
  damage_immunities_unset: Boolean
  proficiencies: [MonsterProficiencyUpdateInput]
  actions_unset: Boolean
  other_speeds_unset: Boolean
  languages_unset: Boolean
  strength_inc: Int
  hit_dice: String
  subtype_unset: Boolean
  dexterity_unset: Boolean
  challenge_rating_unset: Boolean
  condition_immunities_unset: Boolean
  intelligence: Int
  strength_unset: Boolean
  _id: ObjectId
  armor_class_unset: Boolean
  reactions: [MonsterReactionUpdateInput]
  size: String
  damage_vulnerabilities_unset: Boolean
}

type Mutation {
  deleteManyAbilityScores(query: AbilityScoreQueryInput): DeleteManyPayload
  deleteManyClasses(query: ClassQueryInput): DeleteManyPayload
  deleteManyConditions(query: ConditionQueryInput): DeleteManyPayload
  deleteManyDamageTypes(query: DamageTypeQueryInput): DeleteManyPayload
  deleteManyEquipmentCategories(query: EquipmentCategoryQueryInput): DeleteManyPayload
  deleteManyEquipments(query: EquipmentQueryInput): DeleteManyPayload
  deleteManyFeatures(query: FeatureQueryInput): DeleteManyPayload
  deleteManyLanguages(query: LanguageQueryInput): DeleteManyPayload
  deleteManyLevels(query: LevelQueryInput): DeleteManyPayload
  deleteManyMagicItems(query: MagicItemQueryInput): DeleteManyPayload
  deleteManyMagicSchools(query: MagicSchoolQueryInput): DeleteManyPayload
  deleteManyMonsters(query: MonsterQueryInput): DeleteManyPayload
  deleteManyProficiencies(query: ProficiencyQueryInput): DeleteManyPayload
  deleteManyRaces(query: RaceQueryInput): DeleteManyPayload
  deleteManyRuleSections(query: RuleSectionQueryInput): DeleteManyPayload
  deleteManyRules(query: RuleQueryInput): DeleteManyPayload
  deleteManySkills(query: SkillQueryInput): DeleteManyPayload
  deleteManySpellcastings(query: SpellcastingQueryInput): DeleteManyPayload
  deleteManySpells(query: SpellQueryInput): DeleteManyPayload
  deleteManyStartingequipments(query: StartingequipmentQueryInput): DeleteManyPayload
  deleteManySubclasses(query: SubclassQueryInput): DeleteManyPayload
  deleteManySubraces(query: SubraceQueryInput): DeleteManyPayload
  deleteManyTraits(query: TraitQueryInput): DeleteManyPayload
  deleteManyWeaponProperties(query: WeaponPropertyQueryInput): DeleteManyPayload
  deleteOneAbilityScore(query: AbilityScoreQueryInput!): AbilityScore
  deleteOneClass(query: ClassQueryInput!): Class
  deleteOneCondition(query: ConditionQueryInput!): Condition
  deleteOneDamageType(query: DamageTypeQueryInput!): DamageType
  deleteOneEquipment(query: EquipmentQueryInput!): Equipment
  deleteOneEquipmentCategory(query: EquipmentCategoryQueryInput!): EquipmentCategory
  deleteOneFeature(query: FeatureQueryInput!): Feature
  deleteOneLanguage(query: LanguageQueryInput!): Language
  deleteOneLevel(query: LevelQueryInput!): Level
  deleteOneMagicItem(query: MagicItemQueryInput!): MagicItem
  deleteOneMagicSchool(query: MagicSchoolQueryInput!): MagicSchool
  deleteOneMonster(query: MonsterQueryInput!): Monster
  deleteOneProficiency(query: ProficiencyQueryInput!): Proficiency
  deleteOneRace(query: RaceQueryInput!): Race
  deleteOneRule(query: RuleQueryInput!): Rule
  deleteOneRuleSection(query: RuleSectionQueryInput!): RuleSection
  deleteOneSkill(query: SkillQueryInput!): Skill
  deleteOneSpell(query: SpellQueryInput!): Spell
  deleteOneSpellcasting(query: SpellcastingQueryInput!): Spellcasting
  deleteOneStartingequipment(query: StartingequipmentQueryInput!): Startingequipment
  deleteOneSubclass(query: SubclassQueryInput!): Subclass
  deleteOneSubrace(query: SubraceQueryInput!): Subrace
  deleteOneTrait(query: TraitQueryInput!): Trait
  deleteOneWeaponProperty(query: WeaponPropertyQueryInput!): WeaponProperty
  insertManyAbilityScores(data: [AbilityScoreInsertInput!]!): InsertManyPayload
  insertManyClasses(data: [ClassInsertInput!]!): InsertManyPayload
  insertManyConditions(data: [ConditionInsertInput!]!): InsertManyPayload
  insertManyDamageTypes(data: [DamageTypeInsertInput!]!): InsertManyPayload
  insertManyEquipmentCategories(data: [EquipmentCategoryInsertInput!]!): InsertManyPayload
  insertManyEquipments(data: [EquipmentInsertInput!]!): InsertManyPayload
  insertManyFeatures(data: [FeatureInsertInput!]!): InsertManyPayload
  insertManyLanguages(data: [LanguageInsertInput!]!): InsertManyPayload
  insertManyLevels(data: [LevelInsertInput!]!): InsertManyPayload
  insertManyMagicItems(data: [MagicItemInsertInput!]!): InsertManyPayload
  insertManyMagicSchools(data: [MagicSchoolInsertInput!]!): InsertManyPayload
  insertManyMonsters(data: [MonsterInsertInput!]!): InsertManyPayload
  insertManyProficiencies(data: [ProficiencyInsertInput!]!): InsertManyPayload
  insertManyRaces(data: [RaceInsertInput!]!): InsertManyPayload
  insertManyRuleSections(data: [RuleSectionInsertInput!]!): InsertManyPayload
  insertManyRules(data: [RuleInsertInput!]!): InsertManyPayload
  insertManySkills(data: [SkillInsertInput!]!): InsertManyPayload
  insertManySpellcastings(data: [SpellcastingInsertInput!]!): InsertManyPayload
  insertManySpells(data: [SpellInsertInput!]!): InsertManyPayload
  insertManyStartingequipments(data: [StartingequipmentInsertInput!]!): InsertManyPayload
  insertManySubclasses(data: [SubclassInsertInput!]!): InsertManyPayload
  insertManySubraces(data: [SubraceInsertInput!]!): InsertManyPayload
  insertManyTraits(data: [TraitInsertInput!]!): InsertManyPayload
  insertManyWeaponProperties(data: [WeaponPropertyInsertInput!]!): InsertManyPayload
  insertOneAbilityScore(data: AbilityScoreInsertInput!): AbilityScore
  insertOneClass(data: ClassInsertInput!): Class
  insertOneCondition(data: ConditionInsertInput!): Condition
  insertOneDamageType(data: DamageTypeInsertInput!): DamageType
  insertOneEquipment(data: EquipmentInsertInput!): Equipment
  insertOneEquipmentCategory(data: EquipmentCategoryInsertInput!): EquipmentCategory
  insertOneFeature(data: FeatureInsertInput!): Feature
  insertOneLanguage(data: LanguageInsertInput!): Language
  insertOneLevel(data: LevelInsertInput!): Level
  insertOneMagicItem(data: MagicItemInsertInput!): MagicItem
  insertOneMagicSchool(data: MagicSchoolInsertInput!): MagicSchool
  insertOneMonster(data: MonsterInsertInput!): Monster
  insertOneProficiency(data: ProficiencyInsertInput!): Proficiency
  insertOneRace(data: RaceInsertInput!): Race
  insertOneRule(data: RuleInsertInput!): Rule
  insertOneRuleSection(data: RuleSectionInsertInput!): RuleSection
  insertOneSkill(data: SkillInsertInput!): Skill
  insertOneSpell(data: SpellInsertInput!): Spell
  insertOneSpellcasting(data: SpellcastingInsertInput!): Spellcasting
  insertOneStartingequipment(data: StartingequipmentInsertInput!): Startingequipment
  insertOneSubclass(data: SubclassInsertInput!): Subclass
  insertOneSubrace(data: SubraceInsertInput!): Subrace
  insertOneTrait(data: TraitInsertInput!): Trait
  insertOneWeaponProperty(data: WeaponPropertyInsertInput!): WeaponProperty
  replaceOneAbilityScore(data: AbilityScoreInsertInput!, query: AbilityScoreQueryInput): AbilityScore
  replaceOneClass(query: ClassQueryInput, data: ClassInsertInput!): Class
  replaceOneCondition(query: ConditionQueryInput, data: ConditionInsertInput!): Condition
  replaceOneDamageType(query: DamageTypeQueryInput, data: DamageTypeInsertInput!): DamageType
  replaceOneEquipment(query: EquipmentQueryInput, data: EquipmentInsertInput!): Equipment
  replaceOneEquipmentCategory(query: EquipmentCategoryQueryInput, data: EquipmentCategoryInsertInput!): EquipmentCategory
  replaceOneFeature(query: FeatureQueryInput, data: FeatureInsertInput!): Feature
  replaceOneLanguage(query: LanguageQueryInput, data: LanguageInsertInput!): Language
  replaceOneLevel(query: LevelQueryInput, data: LevelInsertInput!): Level
  replaceOneMagicItem(data: MagicItemInsertInput!, query: MagicItemQueryInput): MagicItem
  replaceOneMagicSchool(data: MagicSchoolInsertInput!, query: MagicSchoolQueryInput): MagicSchool
  replaceOneMonster(query: MonsterQueryInput, data: MonsterInsertInput!): Monster
  replaceOneProficiency(query: ProficiencyQueryInput, data: ProficiencyInsertInput!): Proficiency
  replaceOneRace(query: RaceQueryInput, data: RaceInsertInput!): Race
  replaceOneRule(query: RuleQueryInput, data: RuleInsertInput!): Rule
  replaceOneRuleSection(query: RuleSectionQueryInput, data: RuleSectionInsertInput!): RuleSection
  replaceOneSkill(query: SkillQueryInput, data: SkillInsertInput!): Skill
  replaceOneSpell(query: SpellQueryInput, data: SpellInsertInput!): Spell
  replaceOneSpellcasting(query: SpellcastingQueryInput, data: SpellcastingInsertInput!): Spellcasting
  replaceOneStartingequipment(query: StartingequipmentQueryInput, data: StartingequipmentInsertInput!): Startingequipment
  replaceOneSubclass(query: SubclassQueryInput, data: SubclassInsertInput!): Subclass
  replaceOneSubrace(query: SubraceQueryInput, data: SubraceInsertInput!): Subrace
  replaceOneTrait(query: TraitQueryInput, data: TraitInsertInput!): Trait
  replaceOneWeaponProperty(query: WeaponPropertyQueryInput, data: WeaponPropertyInsertInput!): WeaponProperty
  updateManyAbilityScores(query: AbilityScoreQueryInput, set: AbilityScoreUpdateInput!): UpdateManyPayload
  updateManyClasses(query: ClassQueryInput, set: ClassUpdateInput!): UpdateManyPayload
  updateManyConditions(query: ConditionQueryInput, set: ConditionUpdateInput!): UpdateManyPayload
  updateManyDamageTypes(query: DamageTypeQueryInput, set: DamageTypeUpdateInput!): UpdateManyPayload
  updateManyEquipmentCategories(query: EquipmentCategoryQueryInput, set: EquipmentCategoryUpdateInput!): UpdateManyPayload
  updateManyEquipments(query: EquipmentQueryInput, set: EquipmentUpdateInput!): UpdateManyPayload
  updateManyFeatures(query: FeatureQueryInput, set: FeatureUpdateInput!): UpdateManyPayload
  updateManyLanguages(query: LanguageQueryInput, set: LanguageUpdateInput!): UpdateManyPayload
  updateManyLevels(query: LevelQueryInput, set: LevelUpdateInput!): UpdateManyPayload
  updateManyMagicItems(query: MagicItemQueryInput, set: MagicItemUpdateInput!): UpdateManyPayload
  updateManyMagicSchools(query: MagicSchoolQueryInput, set: MagicSchoolUpdateInput!): UpdateManyPayload
  updateManyMonsters(query: MonsterQueryInput, set: MonsterUpdateInput!): UpdateManyPayload
  updateManyProficiencies(query: ProficiencyQueryInput, set: ProficiencyUpdateInput!): UpdateManyPayload
  updateManyRaces(query: RaceQueryInput, set: RaceUpdateInput!): UpdateManyPayload
  updateManyRuleSections(query: RuleSectionQueryInput, set: RuleSectionUpdateInput!): UpdateManyPayload
  updateManyRules(query: RuleQueryInput, set: RuleUpdateInput!): UpdateManyPayload
  updateManySkills(query: SkillQueryInput, set: SkillUpdateInput!): UpdateManyPayload
  updateManySpellcastings(set: SpellcastingUpdateInput!, query: SpellcastingQueryInput): UpdateManyPayload
  updateManySpells(set: SpellUpdateInput!, query: SpellQueryInput): UpdateManyPayload
  updateManyStartingequipments(query: StartingequipmentQueryInput, set: StartingequipmentUpdateInput!): UpdateManyPayload
  updateManySubclasses(query: SubclassQueryInput, set: SubclassUpdateInput!): UpdateManyPayload
  updateManySubraces(query: SubraceQueryInput, set: SubraceUpdateInput!): UpdateManyPayload
  updateManyTraits(query: TraitQueryInput, set: TraitUpdateInput!): UpdateManyPayload
  updateManyWeaponProperties(query: WeaponPropertyQueryInput, set: WeaponPropertyUpdateInput!): UpdateManyPayload
  updateOneAbilityScore(query: AbilityScoreQueryInput, set: AbilityScoreUpdateInput!): AbilityScore
  updateOneClass(query: ClassQueryInput, set: ClassUpdateInput!): Class
  updateOneCondition(query: ConditionQueryInput, set: ConditionUpdateInput!): Condition
  updateOneDamageType(query: DamageTypeQueryInput, set: DamageTypeUpdateInput!): DamageType
  updateOneEquipment(query: EquipmentQueryInput, set: EquipmentUpdateInput!): Equipment
  updateOneEquipmentCategory(query: EquipmentCategoryQueryInput, set: EquipmentCategoryUpdateInput!): EquipmentCategory
  updateOneFeature(query: FeatureQueryInput, set: FeatureUpdateInput!): Feature
  updateOneLanguage(query: LanguageQueryInput, set: LanguageUpdateInput!): Language
  updateOneLevel(query: LevelQueryInput, set: LevelUpdateInput!): Level
  updateOneMagicItem(query: MagicItemQueryInput, set: MagicItemUpdateInput!): MagicItem
  updateOneMagicSchool(query: MagicSchoolQueryInput, set: MagicSchoolUpdateInput!): MagicSchool
  updateOneMonster(query: MonsterQueryInput, set: MonsterUpdateInput!): Monster
  updateOneProficiency(query: ProficiencyQueryInput, set: ProficiencyUpdateInput!): Proficiency
  updateOneRace(query: RaceQueryInput, set: RaceUpdateInput!): Race
  updateOneRule(query: RuleQueryInput, set: RuleUpdateInput!): Rule
  updateOneRuleSection(query: RuleSectionQueryInput, set: RuleSectionUpdateInput!): RuleSection
  updateOneSkill(query: SkillQueryInput, set: SkillUpdateInput!): Skill
  updateOneSpell(query: SpellQueryInput, set: SpellUpdateInput!): Spell
  updateOneSpellcasting(query: SpellcastingQueryInput, set: SpellcastingUpdateInput!): Spellcasting
  updateOneStartingequipment(query: StartingequipmentQueryInput, set: StartingequipmentUpdateInput!): Startingequipment
  updateOneSubclass(query: SubclassQueryInput, set: SubclassUpdateInput!): Subclass
  updateOneSubrace(query: SubraceQueryInput, set: SubraceUpdateInput!): Subrace
  updateOneTrait(set: TraitUpdateInput!, query: TraitQueryInput): Trait
  updateOneWeaponProperty(query: WeaponPropertyQueryInput, set: WeaponPropertyUpdateInput!): WeaponProperty
  upsertOneAbilityScore(query: AbilityScoreQueryInput, data: AbilityScoreInsertInput!): AbilityScore
  upsertOneClass(data: ClassInsertInput!, query: ClassQueryInput): Class
  upsertOneCondition(query: ConditionQueryInput, data: ConditionInsertInput!): Condition
  upsertOneDamageType(query: DamageTypeQueryInput, data: DamageTypeInsertInput!): DamageType
  upsertOneEquipment(query: EquipmentQueryInput, data: EquipmentInsertInput!): Equipment
  upsertOneEquipmentCategory(query: EquipmentCategoryQueryInput, data: EquipmentCategoryInsertInput!): EquipmentCategory
  upsertOneFeature(query: FeatureQueryInput, data: FeatureInsertInput!): Feature
  upsertOneLanguage(query: LanguageQueryInput, data: LanguageInsertInput!): Language
  upsertOneLevel(query: LevelQueryInput, data: LevelInsertInput!): Level
  upsertOneMagicItem(query: MagicItemQueryInput, data: MagicItemInsertInput!): MagicItem
  upsertOneMagicSchool(data: MagicSchoolInsertInput!, query: MagicSchoolQueryInput): MagicSchool
  upsertOneMonster(query: MonsterQueryInput, data: MonsterInsertInput!): Monster
  upsertOneProficiency(query: ProficiencyQueryInput, data: ProficiencyInsertInput!): Proficiency
  upsertOneRace(query: RaceQueryInput, data: RaceInsertInput!): Race
  upsertOneRule(query: RuleQueryInput, data: RuleInsertInput!): Rule
  upsertOneRuleSection(query: RuleSectionQueryInput, data: RuleSectionInsertInput!): RuleSection
  upsertOneSkill(query: SkillQueryInput, data: SkillInsertInput!): Skill
  upsertOneSpell(query: SpellQueryInput, data: SpellInsertInput!): Spell
  upsertOneSpellcasting(query: SpellcastingQueryInput, data: SpellcastingInsertInput!): Spellcasting
  upsertOneStartingequipment(query: StartingequipmentQueryInput, data: StartingequipmentInsertInput!): Startingequipment
  upsertOneSubclass(query: SubclassQueryInput, data: SubclassInsertInput!): Subclass
  upsertOneSubrace(query: SubraceQueryInput, data: SubraceInsertInput!): Subrace
  upsertOneTrait(query: TraitQueryInput, data: TraitInsertInput!): Trait
  upsertOneWeaponProperty(query: WeaponPropertyQueryInput, data: WeaponPropertyInsertInput!): WeaponProperty
}

scalar ObjectId

type Proficiency {
  _id: ObjectId
  classes: [ProficiencyClass]
  index: String
  name: String
  races: [ProficiencyRace]
  references: [ProficiencyReference]
  type: String
  url: String
}

type ProficiencyClass {
  index: String
  name: String
  url: String
}

input ProficiencyClassInsertInput {
  url: String
  index: String
  name: String
}

input ProficiencyClassQueryInput {
  name_ne: String
  name_lt: String
  index_gt: String
  url_lt: String
  index_in: [String]
  index_exists: Boolean
  index_lt: String
  index: String
  index_gte: String
  name: String
  url: String
  url_ne: String
  url_in: [String]
  index_lte: String
  name_gte: String
  url_nin: [String]
  index_ne: String
  name_gt: String
  index_nin: [String]
  url_lte: String
  name_exists: Boolean
  OR: [ProficiencyClassQueryInput!]
  url_gt: String
  name_in: [String]
  url_exists: Boolean
  AND: [ProficiencyClassQueryInput!]
  name_nin: [String]
  name_lte: String
  url_gte: String
}

input ProficiencyClassUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input ProficiencyInsertInput {
  races: [ProficiencyRaceInsertInput]
  references: [ProficiencyReferenceInsertInput]
  type: String
  url: String
  _id: ObjectId
  classes: [ProficiencyClassInsertInput]
  index: String
  name: String
}

input ProficiencyQueryInput {
  name_lte: String
  type_gte: String
  index_lte: String
  url_gte: String
  url_exists: Boolean
  name: String
  classes_nin: [ProficiencyClassQueryInput]
  classes_exists: Boolean
  url_lt: String
  type: String
  url_lte: String
  type_gt: String
  references_nin: [ProficiencyReferenceQueryInput]
  references_exists: Boolean
  index_nin: [String]
  index: String
  AND: [ProficiencyQueryInput!]
  references_in: [ProficiencyReferenceQueryInput]
  type_lt: String
  type_in: [String]
  OR: [ProficiencyQueryInput!]
  index_gte: String
  url_nin: [String]
  races: [ProficiencyRaceQueryInput]
  _id: ObjectId
  _id_gte: ObjectId
  name_exists: Boolean
  classes_in: [ProficiencyClassQueryInput]
  name_gte: String
  url: String
  name_gt: String
  url_in: [String]
  classes: [ProficiencyClassQueryInput]
  name_ne: String
  name_nin: [String]
  _id_in: [ObjectId]
  index_ne: String
  _id_lte: ObjectId
  _id_ne: ObjectId
  _id_nin: [ObjectId]
  races_in: [ProficiencyRaceQueryInput]
  url_ne: String
  type_nin: [String]
  _id_gt: ObjectId
  references: [ProficiencyReferenceQueryInput]
  races_nin: [ProficiencyRaceQueryInput]
  index_lt: String
  type_lte: String
  races_exists: Boolean
  url_gt: String
  index_in: [String]
  type_exists: Boolean
  index_gt: String
  type_ne: String
  index_exists: Boolean
  _id_exists: Boolean
  name_lt: String
  name_in: [String]
  _id_lt: ObjectId
}

type ProficiencyRace {
  index: String
  name: String
  url: String
}

input ProficiencyRaceInsertInput {
  index: String
  name: String
  url: String
}

input ProficiencyRaceQueryInput {
  index_gt: String
  index_ne: String
  url_in: [String]
  index: String
  url_gt: String
  url_lt: String
  OR: [ProficiencyRaceQueryInput!]
  index_gte: String
  name_ne: String
  url_nin: [String]
  index_nin: [String]
  AND: [ProficiencyRaceQueryInput!]
  index_in: [String]
  index_exists: Boolean
  index_lte: String
  index_lt: String
  name: String
  name_exists: Boolean
  url_exists: Boolean
  url: String
  name_in: [String]
  name_gte: String
  name_lt: String
  name_gt: String
  url_gte: String
  url_ne: String
  name_lte: String
  name_nin: [String]
  url_lte: String
}

input ProficiencyRaceUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

type ProficiencyReference {
  index: String
  name: String
  type: String
  url: String
}

input ProficiencyReferenceInsertInput {
  type: String
  url: String
  index: String
  name: String
}

input ProficiencyReferenceQueryInput {
  url_in: [String]
  index_in: [String]
  type_in: [String]
  url_gt: String
  type_lt: String
  index: String
  index_nin: [String]
  index_lt: String
  name_nin: [String]
  index_gt: String
  url_gte: String
  AND: [ProficiencyReferenceQueryInput!]
  type: String
  OR: [ProficiencyReferenceQueryInput!]
  type_ne: String
  url_ne: String
  url_lte: String
  index_gte: String
  name_gte: String
  type_gte: String
  name_ne: String
  index_lte: String
  url_lt: String
  name_in: [String]
  type_lte: String
  url_nin: [String]
  name_exists: Boolean
  index_exists: Boolean
  name_lte: String
  type_gt: String
  index_ne: String
  name_lt: String
  type_nin: [String]
  type_exists: Boolean
  name_gt: String
  url: String
  url_exists: Boolean
  name: String
}

input ProficiencyReferenceUpdateInput {
  type: String
  type_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

enum ProficiencySortByInput {
  TYPE_DESC
  _ID_ASC
  INDEX_DESC
  _ID_DESC
  INDEX_ASC
  NAME_ASC
  NAME_DESC
  TYPE_ASC
  URL_ASC
  URL_DESC
}

input ProficiencyUpdateInput {
  type: String
  references_unset: Boolean
  races: [ProficiencyRaceUpdateInput]
  classes_unset: Boolean
  index: String
  url: String
  classes: [ProficiencyClassUpdateInput]
  references: [ProficiencyReferenceUpdateInput]
  type_unset: Boolean
  races_unset: Boolean
  _id: ObjectId
  index_unset: Boolean
  name: String
  url_unset: Boolean
  _id_unset: Boolean
  name_unset: Boolean
}

type Query {
  abilityScore(query: AbilityScoreQueryInput): AbilityScore
  abilityScores(query: AbilityScoreQueryInput, limit: Int = 100, sortBy: AbilityScoreSortByInput): [AbilityScore]!
  class(query: ClassQueryInput): Class
  classes(query: ClassQueryInput, limit: Int = 100, sortBy: ClassSortByInput): [Class]!
  condition(query: ConditionQueryInput): Condition
  conditions(limit: Int = 100, sortBy: ConditionSortByInput, query: ConditionQueryInput): [Condition]!
  damageType(query: DamageTypeQueryInput): DamageType
  damageTypes(limit: Int = 100, sortBy: DamageTypeSortByInput, query: DamageTypeQueryInput): [DamageType]!
  equipment(query: EquipmentQueryInput): Equipment
  equipmentCategories(limit: Int = 100, sortBy: EquipmentCategorySortByInput, query: EquipmentCategoryQueryInput): [EquipmentCategory]!
  equipmentCategory(query: EquipmentCategoryQueryInput): EquipmentCategory
  equipments(query: EquipmentQueryInput, limit: Int = 100, sortBy: EquipmentSortByInput): [Equipment]!
  feature(query: FeatureQueryInput): Feature
  features(query: FeatureQueryInput, limit: Int = 100, sortBy: FeatureSortByInput): [Feature]!
  language(query: LanguageQueryInput): Language
  languages(sortBy: LanguageSortByInput, query: LanguageQueryInput, limit: Int = 100): [Language]!
  level(query: LevelQueryInput): Level
  levels(query: LevelQueryInput, limit: Int = 100, sortBy: LevelSortByInput): [Level]!
  magicItem(query: MagicItemQueryInput): MagicItem
  magicItems(query: MagicItemQueryInput, limit: Int = 100, sortBy: MagicItemSortByInput): [MagicItem]!
  magicSchool(query: MagicSchoolQueryInput): MagicSchool
  magicSchools(query: MagicSchoolQueryInput, limit: Int = 100, sortBy: MagicSchoolSortByInput): [MagicSchool]!
  monster(query: MonsterQueryInput): Monster
  monsters(query: MonsterQueryInput, limit: Int = 100, sortBy: MonsterSortByInput): [Monster]!
  proficiencies(query: ProficiencyQueryInput, limit: Int = 100, sortBy: ProficiencySortByInput): [Proficiency]!
  proficiency(query: ProficiencyQueryInput): Proficiency
  race(query: RaceQueryInput): Race
  races(query: RaceQueryInput, limit: Int = 100, sortBy: RaceSortByInput): [Race]!
  rule(query: RuleQueryInput): Rule
  ruleSection(query: RuleSectionQueryInput): RuleSection
  ruleSections(query: RuleSectionQueryInput, limit: Int = 100, sortBy: RuleSectionSortByInput): [RuleSection]!
  rules(sortBy: RuleSortByInput, query: RuleQueryInput, limit: Int = 100): [Rule]!
  skill(query: SkillQueryInput): Skill
  skills(query: SkillQueryInput, limit: Int = 100, sortBy: SkillSortByInput): [Skill]!
  spell(query: SpellQueryInput): Spell
  spellcasting(query: SpellcastingQueryInput): Spellcasting
  spellcastings(query: SpellcastingQueryInput, limit: Int = 100, sortBy: SpellcastingSortByInput): [Spellcasting]!
  spells(query: SpellQueryInput, limit: Int = 100, sortBy: SpellSortByInput): [Spell]!
  startingequipment(query: StartingequipmentQueryInput): Startingequipment
  startingequipments(query: StartingequipmentQueryInput, limit: Int = 100, sortBy: StartingequipmentSortByInput): [Startingequipment]!
  subclass(query: SubclassQueryInput): Subclass
  subclasses(query: SubclassQueryInput, limit: Int = 100, sortBy: SubclassSortByInput): [Subclass]!
  subrace(query: SubraceQueryInput): Subrace
  subraces(query: SubraceQueryInput, limit: Int = 100, sortBy: SubraceSortByInput): [Subrace]!
  trait(query: TraitQueryInput): Trait
  traits(limit: Int = 100, sortBy: TraitSortByInput, query: TraitQueryInput): [Trait]!
  weaponProperties(query: WeaponPropertyQueryInput, limit: Int = 100, sortBy: WeaponPropertySortByInput): [WeaponProperty]!
  weaponProperty(query: WeaponPropertyQueryInput): WeaponProperty
}

type Race {
  _id: ObjectId
  ability_bonus_options: RaceAbility_bonus_option
  ability_bonuses: [RaceAbility_bonuse]
  age: String
  alignment: String
  index: String
  language_desc: String
  language_options: RaceLanguage_option
  languages: [RaceLanguage]
  name: String
  size: String
  size_description: String
  speed: Int
  starting_proficiencies: [RaceStarting_proficiency]
  starting_proficiency_options: RaceStarting_proficiency_option
  subraces: [RaceSubrace]
  trait_options: RaceTrait_option
  traits: [RaceTrait]
  url: String
}

type RaceAbility_bonus_option {
  choose: Int
  from: [RaceAbility_bonus_optionFrom]
  type: String
}

type RaceAbility_bonus_optionFrom {
  bonus: Int
  index: String
  name: String
  url: String
}

input RaceAbility_bonus_optionFromInsertInput {
  bonus: Int
  index: String
  name: String
  url: String
}

input RaceAbility_bonus_optionFromQueryInput {
  index_ne: String
  url_gt: String
  index_gte: String
  bonus_ne: Int
  bonus_nin: [Int]
  url: String
  index_exists: Boolean
  bonus_gte: Int
  url_gte: String
  url_lte: String
  name: String
  url_in: [String]
  url_exists: Boolean
  name_gte: String
  name_gt: String
  name_in: [String]
  name_lt: String
  bonus_lt: Int
  index_gt: String
  index: String
  index_nin: [String]
  bonus_gt: Int
  index_in: [String]
  name_exists: Boolean
  url_nin: [String]
  bonus_exists: Boolean
  name_ne: String
  index_lt: String
  name_nin: [String]
  bonus_lte: Int
  url_ne: String
  OR: [RaceAbility_bonus_optionFromQueryInput!]
  url_lt: String
  bonus_in: [Int]
  name_lte: String
  AND: [RaceAbility_bonus_optionFromQueryInput!]
  bonus: Int
  index_lte: String
}

input RaceAbility_bonus_optionFromUpdateInput {
  bonus_unset: Boolean
  bonus_inc: Int
  url: String
  name: String
  name_unset: Boolean
  index: String
  url_unset: Boolean
  index_unset: Boolean
  bonus: Int
}

input RaceAbility_bonus_optionInsertInput {
  choose: Int
  from: [RaceAbility_bonus_optionFromInsertInput]
  type: String
}

input RaceAbility_bonus_optionQueryInput {
  type_lte: String
  type_in: [String]
  choose_nin: [Int]
  type_gte: String
  type_lt: String
  choose_lte: Int
  from_nin: [RaceAbility_bonus_optionFromQueryInput]
  choose_exists: Boolean
  choose_lt: Int
  type_gt: String
  choose_ne: Int
  type_ne: String
  type_exists: Boolean
  choose: Int
  from_exists: Boolean
  AND: [RaceAbility_bonus_optionQueryInput!]
  choose_gt: Int
  choose_in: [Int]
  from: [RaceAbility_bonus_optionFromQueryInput]
  type: String
  OR: [RaceAbility_bonus_optionQueryInput!]
  choose_gte: Int
  type_nin: [String]
  from_in: [RaceAbility_bonus_optionFromQueryInput]
}

input RaceAbility_bonus_optionUpdateInput {
  from: [RaceAbility_bonus_optionFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
}

type RaceAbility_bonuse {
  bonus: Int
  index: String
  name: String
  url: String
}

input RaceAbility_bonuseInsertInput {
  index: String
  name: String
  url: String
  bonus: Int
}

input RaceAbility_bonuseQueryInput {
  bonus_in: [Int]
  index_lt: String
  url_ne: String
  name_nin: [String]
  index: String
  name_exists: Boolean
  url_gte: String
  name_gt: String
  url: String
  url_lt: String
  index_nin: [String]
  bonus_lt: Int
  name_gte: String
  url_lte: String
  name_in: [String]
  name_ne: String
  index_exists: Boolean
  name_lt: String
  index_in: [String]
  name: String
  AND: [RaceAbility_bonuseQueryInput!]
  url_exists: Boolean
  index_gte: String
  bonus_gte: Int
  bonus_nin: [Int]
  bonus: Int
  index_gt: String
  OR: [RaceAbility_bonuseQueryInput!]
  bonus_ne: Int
  index_ne: String
  url_in: [String]
  name_lte: String
  index_lte: String
  bonus_lte: Int
  url_gt: String
  bonus_gt: Int
  url_nin: [String]
  bonus_exists: Boolean
}

input RaceAbility_bonuseUpdateInput {
  bonus: Int
  bonus_inc: Int
  bonus_unset: Boolean
  name_unset: Boolean
  index: String
  url_unset: Boolean
  name: String
  url: String
  index_unset: Boolean
}

input RaceInsertInput {
  ability_bonuses: [RaceAbility_bonuseInsertInput]
  trait_options: RaceTrait_optionInsertInput
  _id: ObjectId
  index: String
  url: String
  language_desc: String
  languages: [RaceLanguageInsertInput]
  speed: Int
  ability_bonus_options: RaceAbility_bonus_optionInsertInput
  name: String
  age: String
  traits: [RaceTraitInsertInput]
  size: String
  subraces: [RaceSubraceInsertInput]
  starting_proficiency_options: RaceStarting_proficiency_optionInsertInput
  size_description: String
  alignment: String
  language_options: RaceLanguage_optionInsertInput
  starting_proficiencies: [RaceStarting_proficiencyInsertInput]
}

type RaceLanguage {
  index: String
  name: String
  url: String
}

type RaceLanguage_option {
  choose: Int
  from: [RaceLanguage_optionFrom]
  type: String
}

type RaceLanguage_optionFrom {
  index: String
  name: String
  url: String
}

input RaceLanguage_optionFromInsertInput {
  index: String
  name: String
  url: String
}

input RaceLanguage_optionFromQueryInput {
  url_exists: Boolean
  name_nin: [String]
  index: String
  index_gte: String
  index_nin: [String]
  name_exists: Boolean
  url_nin: [String]
  index_ne: String
  name_gt: String
  url_in: [String]
  index_lte: String
  index_in: [String]
  url_lt: String
  url: String
  url_gt: String
  url_ne: String
  name_ne: String
  url_gte: String
  index_gt: String
  AND: [RaceLanguage_optionFromQueryInput!]
  index_exists: Boolean
  OR: [RaceLanguage_optionFromQueryInput!]
  name_lte: String
  index_lt: String
  name_lt: String
  url_lte: String
  name_in: [String]
  name_gte: String
  name: String
}

input RaceLanguage_optionFromUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input RaceLanguage_optionInsertInput {
  choose: Int
  from: [RaceLanguage_optionFromInsertInput]
  type: String
}

input RaceLanguage_optionQueryInput {
  choose: Int
  choose_gte: Int
  choose_lt: Int
  type_nin: [String]
  type_ne: String
  choose_gt: Int
  type: String
  type_exists: Boolean
  from_nin: [RaceLanguage_optionFromQueryInput]
  type_lte: String
  from_exists: Boolean
  AND: [RaceLanguage_optionQueryInput!]
  type_gt: String
  choose_in: [Int]
  type_in: [String]
  type_gte: String
  from: [RaceLanguage_optionFromQueryInput]
  from_in: [RaceLanguage_optionFromQueryInput]
  choose_nin: [Int]
  OR: [RaceLanguage_optionQueryInput!]
  choose_exists: Boolean
  choose_ne: Int
  choose_lte: Int
  type_lt: String
}

input RaceLanguage_optionUpdateInput {
  from_unset: Boolean
  type: String
  type_unset: Boolean
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
  from: [RaceLanguage_optionFromUpdateInput]
}

input RaceLanguageInsertInput {
  index: String
  name: String
  url: String
}

input RaceLanguageQueryInput {
  index: String
  url_in: [String]
  url_lte: String
  index_ne: String
  name_nin: [String]
  name_gte: String
  index_in: [String]
  name_ne: String
  OR: [RaceLanguageQueryInput!]
  name_lte: String
  index_gte: String
  name_exists: Boolean
  name_gt: String
  url_exists: Boolean
  index_lte: String
  name: String
  url_gte: String
  url_gt: String
  AND: [RaceLanguageQueryInput!]
  index_exists: Boolean
  name_in: [String]
  index_nin: [String]
  index_lt: String
  url_ne: String
  name_lt: String
  url: String
  index_gt: String
  url_lt: String
  url_nin: [String]
}

input RaceLanguageUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input RaceQueryInput {
  index_in: [String]
  traits_nin: [RaceTraitQueryInput]
  _id_lte: ObjectId
  size_description_lte: String
  name_in: [String]
  size_lt: String
  _id_exists: Boolean
  alignment_gte: String
  alignment_lte: String
  _id: ObjectId
  size_description_gte: String
  AND: [RaceQueryInput!]
  languages_nin: [RaceLanguageQueryInput]
  alignment_ne: String
  age: String
  size: String
  index_ne: String
  name_ne: String
  age_exists: Boolean
  alignment_nin: [String]
  speed_lte: Int
  alignment: String
  size_nin: [String]
  size_gt: String
  language_desc_gt: String
  index_exists: Boolean
  ability_bonus_options: RaceAbility_bonus_optionQueryInput
  languages_exists: Boolean
  _id_gte: ObjectId
  OR: [RaceQueryInput!]
  language_desc_lt: String
  starting_proficiencies_exists: Boolean
  language_desc_gte: String
  size_description: String
  age_in: [String]
  size_description_nin: [String]
  ability_bonuses_exists: Boolean
  traits: [RaceTraitQueryInput]
  starting_proficiencies_nin: [RaceStarting_proficiencyQueryInput]
  speed_lt: Int
  speed_nin: [Int]
  size_description_ne: String
  index_gt: String
  ability_bonus_options_exists: Boolean
  subraces_in: [RaceSubraceQueryInput]
  url_gte: String
  name_gte: String
  traits_exists: Boolean
  alignment_gt: String
  subraces_exists: Boolean
  starting_proficiencies: [RaceStarting_proficiencyQueryInput]
  speed_in: [Int]
  language_desc_ne: String
  languages: [RaceLanguageQueryInput]
  url_gt: String
  trait_options_exists: Boolean
  trait_options: RaceTrait_optionQueryInput
  size_description_gt: String
  age_lt: String
  size_description_lt: String
  subraces_nin: [RaceSubraceQueryInput]
  index_lt: String
  _id_lt: ObjectId
  name_lte: String
  url: String
  language_options_exists: Boolean
  _id_nin: [ObjectId]
  languages_in: [RaceLanguageQueryInput]
  _id_in: [ObjectId]
  language_desc_lte: String
  ability_bonuses_nin: [RaceAbility_bonuseQueryInput]
  url_exists: Boolean
  ability_bonuses_in: [RaceAbility_bonuseQueryInput]
  size_exists: Boolean
  _id_gt: ObjectId
  url_lt: String
  size_ne: String
  _id_ne: ObjectId
  language_options: RaceLanguage_optionQueryInput
  speed_gte: Int
  index_lte: String
  starting_proficiency_options: RaceStarting_proficiency_optionQueryInput
  size_gte: String
  age_gte: String
  starting_proficiency_options_exists: Boolean
  speed: Int
  index: String
  name: String
  alignment_in: [String]
  url_nin: [String]
  size_in: [String]
  language_desc_nin: [String]
  ability_bonuses: [RaceAbility_bonuseQueryInput]
  name_nin: [String]
  speed_gt: Int
  index_gte: String
  speed_exists: Boolean
  url_ne: String
  age_gt: String
  speed_ne: Int
  subraces: [RaceSubraceQueryInput]
  index_nin: [String]
  traits_in: [RaceTraitQueryInput]
  language_desc: String
  name_exists: Boolean
  age_nin: [String]
  url_lte: String
  size_description_exists: Boolean
  name_lt: String
  alignment_lt: String
  size_lte: String
  starting_proficiencies_in: [RaceStarting_proficiencyQueryInput]
  size_description_in: [String]
  name_gt: String
  age_ne: String
  age_lte: String
  alignment_exists: Boolean
  language_desc_exists: Boolean
  language_desc_in: [String]
  url_in: [String]
}

enum RaceSortByInput {
  INDEX_ASC
  ALIGNMENT_DESC
  SPEED_DESC
  SIZE_DESC
  ALIGNMENT_ASC
  URL_DESC
  LANGUAGE_DESC_ASC
  LANGUAGE_DESC_DESC
  INDEX_DESC
  SPEED_ASC
  _ID_ASC
  _ID_DESC
  SIZE_DESCRIPTION_ASC
  SIZE_DESCRIPTION_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  AGE_ASC
  AGE_DESC
  SIZE_ASC
}

type RaceStarting_proficiency {
  index: String
  name: String
  url: String
}

type RaceStarting_proficiency_option {
  choose: Int
  from: [RaceStarting_proficiency_optionFrom]
  type: String
}

type RaceStarting_proficiency_optionFrom {
  index: String
  name: String
  url: String
}

input RaceStarting_proficiency_optionFromInsertInput {
  url: String
  index: String
  name: String
}

input RaceStarting_proficiency_optionFromQueryInput {
  url_gte: String
  url_exists: Boolean
  name_ne: String
  index_ne: String
  name_in: [String]
  name: String
  name_lte: String
  index_gt: String
  name_nin: [String]
  name_gt: String
  url_lte: String
  index_gte: String
  url_ne: String
  index_nin: [String]
  index_lte: String
  index_in: [String]
  url_lt: String
  url_in: [String]
  name_gte: String
  AND: [RaceStarting_proficiency_optionFromQueryInput!]
  index: String
  name_lt: String
  url_gt: String
  index_lt: String
  url_nin: [String]
  OR: [RaceStarting_proficiency_optionFromQueryInput!]
  url: String
  index_exists: Boolean
  name_exists: Boolean
}

input RaceStarting_proficiency_optionFromUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input RaceStarting_proficiency_optionInsertInput {
  choose: Int
  from: [RaceStarting_proficiency_optionFromInsertInput]
  type: String
}

input RaceStarting_proficiency_optionQueryInput {
  type_gt: String
  AND: [RaceStarting_proficiency_optionQueryInput!]
  type: String
  type_ne: String
  type_lte: String
  choose: Int
  choose_in: [Int]
  choose_lte: Int
  from_in: [RaceStarting_proficiency_optionFromQueryInput]
  type_gte: String
  type_in: [String]
  OR: [RaceStarting_proficiency_optionQueryInput!]
  choose_lt: Int
  from_nin: [RaceStarting_proficiency_optionFromQueryInput]
  type_nin: [String]
  choose_nin: [Int]
  choose_ne: Int
  type_exists: Boolean
  choose_gte: Int
  choose_exists: Boolean
  type_lt: String
  from: [RaceStarting_proficiency_optionFromQueryInput]
  from_exists: Boolean
  choose_gt: Int
}

input RaceStarting_proficiency_optionUpdateInput {
  choose_unset: Boolean
  from: [RaceStarting_proficiency_optionFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
  choose: Int
  choose_inc: Int
}

input RaceStarting_proficiencyInsertInput {
  url: String
  index: String
  name: String
}

input RaceStarting_proficiencyQueryInput {
  index_lte: String
  name_in: [String]
  index_gt: String
  url_in: [String]
  url_gt: String
  url_ne: String
  name_gte: String
  name_ne: String
  name_gt: String
  index_gte: String
  index_ne: String
  index: String
  name_exists: Boolean
  name: String
  name_nin: [String]
  url_lte: String
  OR: [RaceStarting_proficiencyQueryInput!]
  index_exists: Boolean
  name_lt: String
  index_nin: [String]
  name_lte: String
  url_gte: String
  url_lt: String
  AND: [RaceStarting_proficiencyQueryInput!]
  url_nin: [String]
  index_lt: String
  index_in: [String]
  url_exists: Boolean
  url: String
}

input RaceStarting_proficiencyUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

type RaceSubrace {
  index: String
  name: String
  url: String
}

input RaceSubraceInsertInput {
  name: String
  url: String
  index: String
}

input RaceSubraceQueryInput {
  name_in: [String]
  name_gt: String
  name: String
  name_lte: String
  url_nin: [String]
  index_lte: String
  url_lt: String
  name_nin: [String]
  index_nin: [String]
  index_lt: String
  url_gt: String
  name_gte: String
  url_lte: String
  name_lt: String
  name_ne: String
  url_exists: Boolean
  index: String
  url: String
  url_gte: String
  index_in: [String]
  AND: [RaceSubraceQueryInput!]
  index_gte: String
  name_exists: Boolean
  index_exists: Boolean
  index_gt: String
  index_ne: String
  url_in: [String]
  url_ne: String
  OR: [RaceSubraceQueryInput!]
}

input RaceSubraceUpdateInput {
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
}

type RaceTrait {
  index: String
  name: String
  url: String
}

type RaceTrait_option {
  choose: Int
  from: [RaceTrait_optionFrom]
  type: String
}

type RaceTrait_optionFrom {
  index: String
  name: String
  url: String
}

input RaceTrait_optionFromInsertInput {
  url: String
  index: String
  name: String
}

input RaceTrait_optionFromQueryInput {
  url_lte: String
  name_lt: String
  index_lt: String
  name_gt: String
  OR: [RaceTrait_optionFromQueryInput!]
  url_gt: String
  name_lte: String
  AND: [RaceTrait_optionFromQueryInput!]
  index: String
  index_gte: String
  name_nin: [String]
  name_gte: String
  url_gte: String
  name_ne: String
  url_exists: Boolean
  index_ne: String
  url: String
  url_in: [String]
  url_lt: String
  url_ne: String
  name_in: [String]
  index_exists: Boolean
  index_lte: String
  index_gt: String
  url_nin: [String]
  name_exists: Boolean
  index_nin: [String]
  name: String
  index_in: [String]
}

input RaceTrait_optionFromUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input RaceTrait_optionInsertInput {
  from: [RaceTrait_optionFromInsertInput]
  type: String
  choose: Int
}

input RaceTrait_optionQueryInput {
  choose: Int
  from_nin: [RaceTrait_optionFromQueryInput]
  choose_exists: Boolean
  type_lte: String
  from_exists: Boolean
  from_in: [RaceTrait_optionFromQueryInput]
  type_nin: [String]
  type_lt: String
  choose_ne: Int
  type_in: [String]
  type_ne: String
  type_gt: String
  type_exists: Boolean
  choose_nin: [Int]
  OR: [RaceTrait_optionQueryInput!]
  type_gte: String
  type: String
  choose_in: [Int]
  from: [RaceTrait_optionFromQueryInput]
  AND: [RaceTrait_optionQueryInput!]
  choose_gte: Int
  choose_lt: Int
  choose_lte: Int
  choose_gt: Int
}

input RaceTrait_optionUpdateInput {
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
  from: [RaceTrait_optionFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
}

input RaceTraitInsertInput {
  name: String
  url: String
  index: String
}

input RaceTraitQueryInput {
  url_nin: [String]
  name_in: [String]
  url_lt: String
  name_ne: String
  index: String
  index_nin: [String]
  index_lt: String
  index_in: [String]
  name_lte: String
  name_nin: [String]
  index_gte: String
  url_ne: String
  url_exists: Boolean
  url_gte: String
  url_lte: String
  index_gt: String
  OR: [RaceTraitQueryInput!]
  index_lte: String
  url: String
  url_gt: String
  AND: [RaceTraitQueryInput!]
  index_exists: Boolean
  name_gt: String
  name_gte: String
  index_ne: String
  name_lt: String
  name: String
  url_in: [String]
  name_exists: Boolean
}

input RaceTraitUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input RaceUpdateInput {
  size: String
  language_options: RaceLanguage_optionUpdateInput
  starting_proficiencies_unset: Boolean
  index_unset: Boolean
  speed_unset: Boolean
  size_description: String
  languages: [RaceLanguageUpdateInput]
  ability_bonus_options_unset: Boolean
  trait_options_unset: Boolean
  subraces: [RaceSubraceUpdateInput]
  alignment_unset: Boolean
  _id: ObjectId
  url: String
  starting_proficiency_options_unset: Boolean
  traits: [RaceTraitUpdateInput]
  alignment: String
  age: String
  language_options_unset: Boolean
  starting_proficiency_options: RaceStarting_proficiency_optionUpdateInput
  language_desc: String
  url_unset: Boolean
  trait_options: RaceTrait_optionUpdateInput
  subraces_unset: Boolean
  _id_unset: Boolean
  ability_bonuses: [RaceAbility_bonuseUpdateInput]
  ability_bonuses_unset: Boolean
  languages_unset: Boolean
  ability_bonus_options: RaceAbility_bonus_optionUpdateInput
  age_unset: Boolean
  traits_unset: Boolean
  index: String
  name: String
  speed_inc: Int
  name_unset: Boolean
  size_description_unset: Boolean
  language_desc_unset: Boolean
  speed: Int
  starting_proficiencies: [RaceStarting_proficiencyUpdateInput]
  size_unset: Boolean
}

type Rule {
  _id: ObjectId
  desc: String
  index: String
  name: String
  subsections: [RuleSubsection]
  url: String
}

input RuleInsertInput {
  index: String
  name: String
  subsections: [RuleSubsectionInsertInput]
  url: String
  _id: ObjectId
  desc: String
}

input RuleQueryInput {
  subsections_nin: [RuleSubsectionQueryInput]
  subsections_in: [RuleSubsectionQueryInput]
  url_lte: String
  _id_gte: ObjectId
  index_nin: [String]
  index_exists: Boolean
  url_ne: String
  url_gte: String
  _id_lte: ObjectId
  name_ne: String
  name_gte: String
  _id: ObjectId
  AND: [RuleQueryInput!]
  desc: String
  subsections: [RuleSubsectionQueryInput]
  index: String
  url: String
  desc_nin: [String]
  url_nin: [String]
  url_lt: String
  name_in: [String]
  desc_in: [String]
  _id_nin: [ObjectId]
  name_lte: String
  name_gt: String
  desc_lt: String
  desc_exists: Boolean
  name_lt: String
  desc_gte: String
  name_exists: Boolean
  index_lt: String
  subsections_exists: Boolean
  url_gt: String
  url_in: [String]
  index_ne: String
  url_exists: Boolean
  _id_gt: ObjectId
  index_in: [String]
  _id_ne: ObjectId
  OR: [RuleQueryInput!]
  desc_lte: String
  desc_ne: String
  index_lte: String
  desc_gt: String
  _id_lt: ObjectId
  _id_in: [ObjectId]
  name: String
  _id_exists: Boolean
  index_gte: String
  name_nin: [String]
  index_gt: String
}

type RuleSection {
  _id: ObjectId
  desc: String
  index: String
  name: String
  url: String
}

input RuleSectionInsertInput {
  desc: String
  index: String
  name: String
  url: String
  _id: ObjectId
}

input RuleSectionQueryInput {
  index_lte: String
  name_nin: [String]
  index_exists: Boolean
  OR: [RuleSectionQueryInput!]
  desc_nin: [String]
  _id_gt: ObjectId
  index_ne: String
  url_lte: String
  index_gt: String
  name_lte: String
  desc: String
  _id_lte: ObjectId
  _id: ObjectId
  name: String
  url_gte: String
  name_exists: Boolean
  url_lt: String
  url_gt: String
  name_gt: String
  name_lt: String
  index_gte: String
  _id_exists: Boolean
  desc_gt: String
  _id_ne: ObjectId
  url_ne: String
  desc_lt: String
  desc_lte: String
  index: String
  url: String
  desc_exists: Boolean
  name_ne: String
  _id_lt: ObjectId
  url_exists: Boolean
  desc_gte: String
  name_in: [String]
  index_lt: String
  index_in: [String]
  desc_in: [String]
  _id_in: [ObjectId]
  url_in: [String]
  AND: [RuleSectionQueryInput!]
  name_gte: String
  url_nin: [String]
  desc_ne: String
  _id_gte: ObjectId
  _id_nin: [ObjectId]
  index_nin: [String]
}

enum RuleSectionSortByInput {
  _ID_ASC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  URL_ASC
  _ID_DESC
  DESC_ASC
  DESC_DESC
  NAME_DESC
  URL_DESC
}

input RuleSectionUpdateInput {
  desc: String
  name: String
  _id: ObjectId
  desc_unset: Boolean
  index: String
  index_unset: Boolean
  name_unset: Boolean
  url: String
  url_unset: Boolean
  _id_unset: Boolean
}

enum RuleSortByInput {
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_DESC
  _ID_DESC
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  URL_ASC
  _ID_ASC
}

type RuleSubsection {
  index: String
  name: String
  url: String
}

input RuleSubsectionInsertInput {
  url: String
  index: String
  name: String
}

input RuleSubsectionQueryInput {
  name_ne: String
  AND: [RuleSubsectionQueryInput!]
  url_in: [String]
  name_exists: Boolean
  name_lte: String
  url_gt: String
  name_gte: String
  url_nin: [String]
  index_gte: String
  index: String
  index_ne: String
  url_lte: String
  index_exists: Boolean
  name: String
  index_gt: String
  index_nin: [String]
  url_gte: String
  url_ne: String
  index_lt: String
  name_lt: String
  name_in: [String]
  url_lt: String
  index_lte: String
  OR: [RuleSubsectionQueryInput!]
  index_in: [String]
  url: String
  url_exists: Boolean
  name_gt: String
  name_nin: [String]
}

input RuleSubsectionUpdateInput {
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
}

input RuleUpdateInput {
  url: String
  url_unset: Boolean
  desc_unset: Boolean
  _id: ObjectId
  _id_unset: Boolean
  index: String
  name: String
  name_unset: Boolean
  index_unset: Boolean
  desc: String
  subsections: [RuleSubsectionUpdateInput]
  subsections_unset: Boolean
}

type Skill {
  _id: ObjectId
  ability_score: SkillAbility_score
  desc: [String]
  index: String
  name: String
  url: String
}

type SkillAbility_score {
  index: String
  name: String
  url: String
}

input SkillAbility_scoreInsertInput {
  url: String
  index: String
  name: String
}

input SkillAbility_scoreQueryInput {
  index: String
  index_gte: String
  url_lt: String
  index_ne: String
  index_gt: String
  url_in: [String]
  OR: [SkillAbility_scoreQueryInput!]
  name: String
  name_gt: String
  name_exists: Boolean
  index_in: [String]
  url_nin: [String]
  name_in: [String]
  url_ne: String
  index_lte: String
  AND: [SkillAbility_scoreQueryInput!]
  index_exists: Boolean
  url: String
  name_lt: String
  url_lte: String
  name_gte: String
  name_ne: String
  index_nin: [String]
  url_exists: Boolean
  name_lte: String
  name_nin: [String]
  url_gt: String
  index_lt: String
  url_gte: String
}

input SkillAbility_scoreUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input SkillInsertInput {
  url: String
  _id: ObjectId
  ability_score: SkillAbility_scoreInsertInput
  desc: [String]
  index: String
  name: String
}

input SkillQueryInput {
  url_lte: String
  url_ne: String
  url_gt: String
  index_gt: String
  _id_in: [ObjectId]
  name_lt: String
  _id_ne: ObjectId
  url_in: [String]
  desc_nin: [String]
  index: String
  index_lt: String
  url_gte: String
  _id_nin: [ObjectId]
  desc_exists: Boolean
  index_exists: Boolean
  index_ne: String
  url_nin: [String]
  desc: [String]
  _id_lt: ObjectId
  _id_exists: Boolean
  name_gt: String
  name: String
  name_gte: String
  _id_gt: ObjectId
  ability_score: SkillAbility_scoreQueryInput
  url_lt: String
  _id: ObjectId
  index_lte: String
  desc_in: [String]
  ability_score_exists: Boolean
  name_nin: [String]
  name_in: [String]
  name_ne: String
  AND: [SkillQueryInput!]
  _id_lte: ObjectId
  index_in: [String]
  OR: [SkillQueryInput!]
  index_gte: String
  name_exists: Boolean
  url_exists: Boolean
  name_lte: String
  _id_gte: ObjectId
  url: String
  index_nin: [String]
}

enum SkillSortByInput {
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
}

input SkillUpdateInput {
  desc_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  ability_score_unset: Boolean
  ability_score: SkillAbility_scoreUpdateInput
  desc: [String]
  name_unset: Boolean
  _id: ObjectId
  _id_unset: Boolean
  url: String
  url_unset: Boolean
}

type Spell {
  _id: ObjectId
  area_of_effect: SpellArea_of_effect
  attack_type: String
  casting_time: String
  classes: [SpellClass]
  components: [String]
  concentration: Boolean
  damage: SpellDamage
  dc: SpellDc
  desc: [String]
  duration: String
  heal_at_slot_level: SpellHeal_at_slot_level
  higher_level: [String]
  index: String
  level: Int
  material: String
  name: String
  range: String
  ritual: Boolean
  school: SpellSchool
  subclasses: [SpellSubclass]
  url: String
}

type SpellArea_of_effect {
  size: Int
  type: String
}

input SpellArea_of_effectInsertInput {
  size: Int
  type: String
}

input SpellArea_of_effectQueryInput {
  type_lte: String
  type_gt: String
  size_gte: Int
  size_in: [Int]
  OR: [SpellArea_of_effectQueryInput!]
  size: Int
  type_gte: String
  size_nin: [Int]
  AND: [SpellArea_of_effectQueryInput!]
  type: String
  size_exists: Boolean
  size_lte: Int
  size_lt: Int
  type_ne: String
  size_ne: Int
  type_nin: [String]
  type_exists: Boolean
  type_lt: String
  type_in: [String]
  size_gt: Int
}

input SpellArea_of_effectUpdateInput {
  size: Int
  size_unset: Boolean
  size_inc: Int
  type: String
  type_unset: Boolean
}

type Spellcasting {
  _id: ObjectId
  class: SpellcastingClass
  index: String
  info: [SpellcastingInfo]
  level: Int
  spellcasting_ability: SpellcastingSpellcasting_ability
  url: String
}

type SpellcastingClass {
  index: String
  name: String
  url: String
}

input SpellcastingClassInsertInput {
  index: String
  name: String
  url: String
}

input SpellcastingClassQueryInput {
  name_in: [String]
  url_gte: String
  name: String
  index_nin: [String]
  url_exists: Boolean
  index_lt: String
  url_lte: String
  index_in: [String]
  name_nin: [String]
  name_exists: Boolean
  name_lt: String
  index: String
  url_in: [String]
  index_gt: String
  name_gte: String
  name_ne: String
  url_gt: String
  name_gt: String
  url: String
  index_ne: String
  url_nin: [String]
  url_ne: String
  OR: [SpellcastingClassQueryInput!]
  index_exists: Boolean
  url_lt: String
  index_gte: String
  name_lte: String
  AND: [SpellcastingClassQueryInput!]
  index_lte: String
}

input SpellcastingClassUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

type SpellcastingInfo {
  desc: [String]
  name: String
}

input SpellcastingInfoInsertInput {
  name: String
  desc: [String]
}

input SpellcastingInfoQueryInput {
  name: String
  name_lt: String
  name_in: [String]
  name_nin: [String]
  desc_in: [String]
  AND: [SpellcastingInfoQueryInput!]
  desc_nin: [String]
  name_gt: String
  desc: [String]
  OR: [SpellcastingInfoQueryInput!]
  desc_exists: Boolean
  name_exists: Boolean
  name_ne: String
  name_gte: String
  name_lte: String
}

input SpellcastingInfoUpdateInput {
  desc_unset: Boolean
  name: String
  name_unset: Boolean
  desc: [String]
}

input SpellcastingInsertInput {
  _id: ObjectId
  class: SpellcastingClassInsertInput
  index: String
  info: [SpellcastingInfoInsertInput]
  level: Int
  spellcasting_ability: SpellcastingSpellcasting_abilityInsertInput
  url: String
}

input SpellcastingQueryInput {
  AND: [SpellcastingQueryInput!]
  _id_ne: ObjectId
  url_lte: String
  url_lt: String
  level_lte: Int
  index: String
  level_exists: Boolean
  _id_nin: [ObjectId]
  url_gte: String
  level_in: [Int]
  _id_gte: ObjectId
  level_gt: Int
  class_exists: Boolean
  index_exists: Boolean
  spellcasting_ability_exists: Boolean
  index_in: [String]
  spellcasting_ability: SpellcastingSpellcasting_abilityQueryInput
  url_nin: [String]
  _id_exists: Boolean
  index_lte: String
  level_lt: Int
  url_gt: String
  _id_lt: ObjectId
  index_gte: String
  index_gt: String
  level_nin: [Int]
  url_exists: Boolean
  level_gte: Int
  level_ne: Int
  url_ne: String
  url_in: [String]
  _id_gt: ObjectId
  info: [SpellcastingInfoQueryInput]
  info_nin: [SpellcastingInfoQueryInput]
  _id: ObjectId
  index_nin: [String]
  OR: [SpellcastingQueryInput!]
  url: String
  index_lt: String
  level: Int
  info_exists: Boolean
  info_in: [SpellcastingInfoQueryInput]
  _id_lte: ObjectId
  index_ne: String
  _id_in: [ObjectId]
  class: SpellcastingClassQueryInput
}

enum SpellcastingSortByInput {
  INDEX_DESC
  LEVEL_ASC
  LEVEL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
}

type SpellcastingSpellcasting_ability {
  index: String
  name: String
  url: String
}

input SpellcastingSpellcasting_abilityInsertInput {
  index: String
  name: String
  url: String
}

input SpellcastingSpellcasting_abilityQueryInput {
  OR: [SpellcastingSpellcasting_abilityQueryInput!]
  index_gte: String
  index_in: [String]
  index_ne: String
  index_nin: [String]
  name_gt: String
  name_gte: String
  url_gt: String
  url_ne: String
  name_ne: String
  url_nin: [String]
  name_lt: String
  AND: [SpellcastingSpellcasting_abilityQueryInput!]
  index_lte: String
  url_in: [String]
  index: String
  url_lte: String
  name_exists: Boolean
  name_nin: [String]
  name_in: [String]
  index_lt: String
  url_lt: String
  url_gte: String
  index_exists: Boolean
  index_gt: String
  url: String
  name: String
  name_lte: String
  url_exists: Boolean
}

input SpellcastingSpellcasting_abilityUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input SpellcastingUpdateInput {
  level_inc: Int
  level_unset: Boolean
  index: String
  spellcasting_ability: SpellcastingSpellcasting_abilityUpdateInput
  info: [SpellcastingInfoUpdateInput]
  class_unset: Boolean
  _id_unset: Boolean
  info_unset: Boolean
  class: SpellcastingClassUpdateInput
  _id: ObjectId
  url_unset: Boolean
  index_unset: Boolean
  spellcasting_ability_unset: Boolean
  level: Int
  url: String
}

type SpellClass {
  index: String
  name: String
  url: String
}

input SpellClassInsertInput {
  index: String
  name: String
  url: String
}

input SpellClassQueryInput {
  url_exists: Boolean
  url_in: [String]
  name_gt: String
  name_lt: String
  index_in: [String]
  AND: [SpellClassQueryInput!]
  index_nin: [String]
  OR: [SpellClassQueryInput!]
  url_lte: String
  index_ne: String
  name: String
  index_exists: Boolean
  name_lte: String
  index: String
  name_ne: String
  url_lt: String
  name_in: [String]
  index_lt: String
  name_nin: [String]
  url_gt: String
  index_gte: String
  url: String
  url_gte: String
  name_exists: Boolean
  url_ne: String
  index_gt: String
  url_nin: [String]
  index_lte: String
  name_gte: String
}

input SpellClassUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

type SpellDamage {
  damage_at_character_level: SpellDamageDamage_at_character_level
  damage_at_slot_level: SpellDamageDamage_at_slot_level
  damage_type: SpellDamageDamage_type
}

type SpellDamageDamage_at_character_level {
  a1: String
  a11: String
  a17: String
  a5: String
}

input SpellDamageDamage_at_character_levelInsertInput {
  a11: String
  a17: String
  a5: String
  a1: String
}

input SpellDamageDamage_at_character_levelQueryInput {
  a1_gt: String
  a1_gte: String
  a11_exists: Boolean
  a17_lt: String
  a1_in: [String]
  a1_exists: Boolean
  a1_lte: String
  OR: [SpellDamageDamage_at_character_levelQueryInput!]
  a11_in: [String]
  a5_nin: [String]
  a1_lt: String
  a11_gt: String
  a5_lt: String
  a11_ne: String
  a17_lte: String
  a17_in: [String]
  a5_ne: String
  a1_nin: [String]
  a5_gt: String
  a5_lte: String
  a17_gte: String
  a5_in: [String]
  a17_exists: Boolean
  a11_nin: [String]
  a5_exists: Boolean
  a11_lte: String
  a1_ne: String
  a17: String
  a1: String
  a17_gt: String
  a5_gte: String
  a11: String
  a11_gte: String
  a17_nin: [String]
  a17_ne: String
  a5: String
  a11_lt: String
  AND: [SpellDamageDamage_at_character_levelQueryInput!]
}

input SpellDamageDamage_at_character_levelUpdateInput {
  a1: String
  a1_unset: Boolean
  a11: String
  a11_unset: Boolean
  a17: String
  a17_unset: Boolean
  a5: String
  a5_unset: Boolean
}

type SpellDamageDamage_at_slot_level {
  a1: String
  a2: String
  a3: String
  a4: String
  a5: String
  a6: String
  a7: String
  a8: String
  a9: String
}

input SpellDamageDamage_at_slot_levelInsertInput {
  a7: String
  a9: String
  a6: String
  a8: String
  a2: String
  a3: String
  a5: String
  a1: String
  a4: String
}

input SpellDamageDamage_at_slot_levelQueryInput {
  a5_in: [String]
  a7_lte: String
  a1_exists: Boolean
  a7_gt: String
  a4_gt: String
  a4_ne: String
  a3_gte: String
  a6_in: [String]
  a6_exists: Boolean
  a5_lte: String
  a4_exists: Boolean
  a8: String
  a1_ne: String
  a1_gte: String
  a2_ne: String
  a4_lt: String
  a5_lt: String
  a2_lt: String
  a6: String
  a7_in: [String]
  a1_in: [String]
  a6_lt: String
  a6_ne: String
  a9_gt: String
  a3_lte: String
  a5_exists: Boolean
  a7_nin: [String]
  a6_nin: [String]
  a2_gte: String
  a8_ne: String
  a4: String
  a7: String
  a2_exists: Boolean
  a5_gte: String
  a8_exists: Boolean
  a3_in: [String]
  a9_nin: [String]
  a9_lte: String
  a8_in: [String]
  a8_nin: [String]
  a4_in: [String]
  a2_lte: String
  AND: [SpellDamageDamage_at_slot_levelQueryInput!]
  a3_ne: String
  a9_ne: String
  a8_gte: String
  a1_lte: String
  a4_gte: String
  a9_in: [String]
  a1_gt: String
  a8_lt: String
  a4_lte: String
  a5: String
  a3_nin: [String]
  a6_lte: String
  a9_lt: String
  a3_exists: Boolean
  a3_lt: String
  a9: String
  a2_in: [String]
  a6_gt: String
  a7_gte: String
  a7_ne: String
  a5_ne: String
  a2_nin: [String]
  a3: String
  a5_gt: String
  a6_gte: String
  a2_gt: String
  a8_lte: String
  a5_nin: [String]
  OR: [SpellDamageDamage_at_slot_levelQueryInput!]
  a9_exists: Boolean
  a8_gt: String
  a9_gte: String
  a7_exists: Boolean
  a1_lt: String
  a4_nin: [String]
  a1_nin: [String]
  a3_gt: String
  a7_lt: String
  a2: String
  a1: String
}

input SpellDamageDamage_at_slot_levelUpdateInput {
  a7: String
  a5: String
  a1_unset: Boolean
  a4: String
  a3: String
  a6: String
  a8: String
  a5_unset: Boolean
  a7_unset: Boolean
  a8_unset: Boolean
  a4_unset: Boolean
  a3_unset: Boolean
  a2_unset: Boolean
  a9_unset: Boolean
  a6_unset: Boolean
  a9: String
  a2: String
  a1: String
}

type SpellDamageDamage_type {
  index: String
  name: String
  url: String
}

input SpellDamageDamage_typeInsertInput {
  index: String
  name: String
  url: String
}

input SpellDamageDamage_typeQueryInput {
  index_in: [String]
  index_ne: String
  name_gte: String
  url_exists: Boolean
  url_lte: String
  index: String
  index_lt: String
  name_nin: [String]
  url_lt: String
  url_in: [String]
  AND: [SpellDamageDamage_typeQueryInput!]
  name_in: [String]
  url_gt: String
  url: String
  name_lt: String
  url_gte: String
  name_exists: Boolean
  index_gte: String
  index_nin: [String]
  name_lte: String
  name_gt: String
  name_ne: String
  index_gt: String
  name: String
  index_lte: String
  url_nin: [String]
  index_exists: Boolean
  url_ne: String
  OR: [SpellDamageDamage_typeQueryInput!]
}

input SpellDamageDamage_typeUpdateInput {
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
}

input SpellDamageInsertInput {
  damage_type: SpellDamageDamage_typeInsertInput
  damage_at_character_level: SpellDamageDamage_at_character_levelInsertInput
  damage_at_slot_level: SpellDamageDamage_at_slot_levelInsertInput
}

input SpellDamageQueryInput {
  AND: [SpellDamageQueryInput!]
  OR: [SpellDamageQueryInput!]
  damage_type: SpellDamageDamage_typeQueryInput
  damage_type_exists: Boolean
  damage_at_character_level: SpellDamageDamage_at_character_levelQueryInput
  damage_at_character_level_exists: Boolean
  damage_at_slot_level: SpellDamageDamage_at_slot_levelQueryInput
  damage_at_slot_level_exists: Boolean
}

input SpellDamageUpdateInput {
  damage_type: SpellDamageDamage_typeUpdateInput
  damage_type_unset: Boolean
  damage_at_character_level: SpellDamageDamage_at_character_levelUpdateInput
  damage_at_character_level_unset: Boolean
  damage_at_slot_level: SpellDamageDamage_at_slot_levelUpdateInput
  damage_at_slot_level_unset: Boolean
}

type SpellDc {
  dc_success: String
  dc_type: SpellDcDc_type
  desc: String
}

type SpellDcDc_type {
  index: String
  name: String
  url: String
}

input SpellDcDc_typeInsertInput {
  index: String
  name: String
  url: String
}

input SpellDcDc_typeQueryInput {
  url_exists: Boolean
  index_in: [String]
  name_exists: Boolean
  index_lte: String
  name_ne: String
  index_lt: String
  name_lt: String
  url_ne: String
  name: String
  url_nin: [String]
  url_lte: String
  url_in: [String]
  index_gte: String
  url: String
  name_gt: String
  name_in: [String]
  OR: [SpellDcDc_typeQueryInput!]
  url_gt: String
  name_nin: [String]
  name_lte: String
  url_lt: String
  index_exists: Boolean
  index: String
  index_ne: String
  name_gte: String
  index_gt: String
  index_nin: [String]
  url_gte: String
  AND: [SpellDcDc_typeQueryInput!]
}

input SpellDcDc_typeUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input SpellDcInsertInput {
  dc_type: SpellDcDc_typeInsertInput
  desc: String
  dc_success: String
}

input SpellDcQueryInput {
  dc_success_nin: [String]
  desc_ne: String
  dc_success: String
  dc_success_ne: String
  desc_lte: String
  dc_success_gte: String
  dc_type: SpellDcDc_typeQueryInput
  dc_success_exists: Boolean
  dc_success_lt: String
  desc_in: [String]
  dc_success_gt: String
  OR: [SpellDcQueryInput!]
  dc_success_in: [String]
  desc_nin: [String]
  AND: [SpellDcQueryInput!]
  dc_type_exists: Boolean
  desc_gte: String
  desc_lt: String
  desc: String
  desc_exists: Boolean
  dc_success_lte: String
  desc_gt: String
}

input SpellDcUpdateInput {
  dc_success_unset: Boolean
  dc_type: SpellDcDc_typeUpdateInput
  dc_type_unset: Boolean
  desc: String
  desc_unset: Boolean
  dc_success: String
}

type SpellHeal_at_slot_level {
  a1: String
  a2: String
  a3: String
  a4: String
  a5: String
  a6: String
  a7: String
  a8: String
  a9: String
}

input SpellHeal_at_slot_levelInsertInput {
  a1: String
  a8: String
  a2: String
  a9: String
  a7: String
  a5: String
  a6: String
  a3: String
  a4: String
}

input SpellHeal_at_slot_levelQueryInput {
  a2_in: [String]
  a2_ne: String
  a6_ne: String
  a2_gt: String
  a8_exists: Boolean
  a3_in: [String]
  a1_in: [String]
  a1_exists: Boolean
  a7_gte: String
  a7_lt: String
  a2_nin: [String]
  a3_nin: [String]
  a9_gte: String
  a1_gte: String
  a7: String
  a8_lte: String
  a3_gt: String
  a6_gt: String
  a9_lte: String
  a5_gte: String
  a6_lt: String
  a2: String
  a9_gt: String
  a3_lt: String
  a7_lte: String
  a6: String
  a8_ne: String
  a4_nin: [String]
  a1_nin: [String]
  a8_nin: [String]
  a7_nin: [String]
  OR: [SpellHeal_at_slot_levelQueryInput!]
  a9: String
  a9_in: [String]
  a3_ne: String
  a9_lt: String
  a8: String
  a6_exists: Boolean
  a4_lte: String
  a2_exists: Boolean
  a9_nin: [String]
  a8_gt: String
  a5: String
  a2_lte: String
  a3_lte: String
  a6_in: [String]
  a5_nin: [String]
  a4_lt: String
  a9_exists: Boolean
  a5_exists: Boolean
  a5_lt: String
  a2_gte: String
  a7_exists: Boolean
  a6_lte: String
  a1: String
  a3_gte: String
  a6_gte: String
  a8_in: [String]
  a1_lt: String
  a4_gt: String
  AND: [SpellHeal_at_slot_levelQueryInput!]
  a7_ne: String
  a4_in: [String]
  a5_gt: String
  a3_exists: Boolean
  a7_in: [String]
  a7_gt: String
  a1_ne: String
  a3: String
  a4_exists: Boolean
  a4: String
  a5_in: [String]
  a8_gte: String
  a5_lte: String
  a5_ne: String
  a2_lt: String
  a6_nin: [String]
  a4_ne: String
  a4_gte: String
  a8_lt: String
  a9_ne: String
  a1_lte: String
  a1_gt: String
}

input SpellHeal_at_slot_levelUpdateInput {
  a8: String
  a6: String
  a4_unset: Boolean
  a1: String
  a9_unset: Boolean
  a6_unset: Boolean
  a4: String
  a5: String
  a2: String
  a8_unset: Boolean
  a7: String
  a9: String
  a3_unset: Boolean
  a5_unset: Boolean
  a7_unset: Boolean
  a2_unset: Boolean
  a3: String
  a1_unset: Boolean
}

input SpellInsertInput {
  ritual: Boolean
  classes: [SpellClassInsertInput]
  concentration: Boolean
  area_of_effect: SpellArea_of_effectInsertInput
  components: [String]
  material: String
  _id: ObjectId
  name: String
  casting_time: String
  url: String
  duration: String
  heal_at_slot_level: SpellHeal_at_slot_levelInsertInput
  range: String
  school: SpellSchoolInsertInput
  dc: SpellDcInsertInput
  desc: [String]
  index: String
  attack_type: String
  higher_level: [String]
  subclasses: [SpellSubclassInsertInput]
  level: Int
  damage: SpellDamageInsertInput
}

input SpellQueryInput {
  higher_level_nin: [String]
  attack_type_lte: String
  _id_gt: ObjectId
  level_nin: [Int]
  index_ne: String
  ritual_exists: Boolean
  higher_level_exists: Boolean
  range_exists: Boolean
  index_lte: String
  material_gte: String
  higher_level: [String]
  heal_at_slot_level_exists: Boolean
  school_exists: Boolean
  level_gte: Int
  index_lt: String
  url_ne: String
  range_in: [String]
  level_in: [Int]
  duration_gt: String
  subclasses_in: [SpellSubclassQueryInput]
  name_gt: String
  higher_level_in: [String]
  level: Int
  AND: [SpellQueryInput!]
  name_in: [String]
  material_lt: String
  url_gte: String
  ritual_ne: Boolean
  _id_in: [ObjectId]
  url_in: [String]
  _id_lte: ObjectId
  casting_time: String
  desc_in: [String]
  components_in: [String]
  _id_lt: ObjectId
  range_ne: String
  range_gte: String
  material: String
  dc_exists: Boolean
  casting_time_lt: String
  url: String
  range_nin: [String]
  desc: [String]
  index_gt: String
  url_lt: String
  index_gte: String
  _id_exists: Boolean
  level_ne: Int
  name_exists: Boolean
  material_nin: [String]
  casting_time_nin: [String]
  index_nin: [String]
  url_nin: [String]
  level_exists: Boolean
  url_lte: String
  material_in: [String]
  casting_time_gt: String
  name_gte: String
  desc_exists: Boolean
  material_lte: String
  duration_nin: [String]
  _id_ne: ObjectId
  subclasses: [SpellSubclassQueryInput]
  duration_gte: String
  subclasses_nin: [SpellSubclassQueryInput]
  name_lte: String
  attack_type_nin: [String]
  material_ne: String
  casting_time_ne: String
  dc: SpellDcQueryInput
  index_exists: Boolean
  range_lt: String
  attack_type_gt: String
  attack_type_ne: String
  name_lt: String
  area_of_effect: SpellArea_of_effectQueryInput
  range: String
  _id: ObjectId
  level_lte: Int
  subclasses_exists: Boolean
  name_nin: [String]
  _id_nin: [ObjectId]
  classes_in: [SpellClassQueryInput]
  duration_ne: String
  range_gt: String
  school: SpellSchoolQueryInput
  area_of_effect_exists: Boolean
  duration: String
  name: String
  _id_gte: ObjectId
  casting_time_exists: Boolean
  casting_time_gte: String
  components: [String]
  desc_nin: [String]
  attack_type_in: [String]
  concentration_exists: Boolean
  concentration_ne: Boolean
  concentration: Boolean
  attack_type_lt: String
  heal_at_slot_level: SpellHeal_at_slot_levelQueryInput
  damage_exists: Boolean
  classes: [SpellClassQueryInput]
  duration_in: [String]
  components_exists: Boolean
  duration_lt: String
  classes_exists: Boolean
  level_lt: Int
  components_nin: [String]
  ritual: Boolean
  duration_exists: Boolean
  url_exists: Boolean
  range_lte: String
  index: String
  duration_lte: String
  damage: SpellDamageQueryInput
  casting_time_lte: String
  material_gt: String
  attack_type: String
  OR: [SpellQueryInput!]
  url_gt: String
  classes_nin: [SpellClassQueryInput]
  material_exists: Boolean
  attack_type_gte: String
  index_in: [String]
  level_gt: Int
  casting_time_in: [String]
  name_ne: String
  attack_type_exists: Boolean
}

type SpellSchool {
  index: String
  name: String
  url: String
}

input SpellSchoolInsertInput {
  index: String
  name: String
  url: String
}

input SpellSchoolQueryInput {
  name_lte: String
  url: String
  index_gt: String
  url_lte: String
  url_ne: String
  name_exists: Boolean
  name_gte: String
  url_lt: String
  url_exists: Boolean
  OR: [SpellSchoolQueryInput!]
  name: String
  name_gt: String
  index_lte: String
  index_in: [String]
  url_in: [String]
  index_ne: String
  url_gte: String
  name_lt: String
  index: String
  name_nin: [String]
  name_in: [String]
  name_ne: String
  AND: [SpellSchoolQueryInput!]
  url_nin: [String]
  index_nin: [String]
  index_gte: String
  index_lt: String
  index_exists: Boolean
  url_gt: String
}

input SpellSchoolUpdateInput {
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
}

enum SpellSortByInput {
  ATTACK_TYPE_DESC
  DURATION_DESC
  LEVEL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
  CASTING_TIME_DESC
  ATTACK_TYPE_ASC
  DURATION_ASC
  INDEX_DESC
  MATERIAL_ASC
  LEVEL_ASC
  NAME_ASC
  NAME_DESC
  CASTING_TIME_ASC
  INDEX_ASC
  MATERIAL_DESC
  RANGE_ASC
  RANGE_DESC
}

type SpellSubclass {
  index: String
  name: String
  url: String
}

input SpellSubclassInsertInput {
  name: String
  url: String
  index: String
}

input SpellSubclassQueryInput {
  index_lte: String
  url_gt: String
  url_ne: String
  name_nin: [String]
  index_lt: String
  name_lt: String
  index_gte: String
  url_nin: [String]
  AND: [SpellSubclassQueryInput!]
  url_gte: String
  index: String
  index_gt: String
  index_exists: Boolean
  name_gt: String
  OR: [SpellSubclassQueryInput!]
  url_lt: String
  name_ne: String
  url_in: [String]
  url_exists: Boolean
  index_in: [String]
  index_ne: String
  name_lte: String
  name_gte: String
  name_exists: Boolean
  url: String
  index_nin: [String]
  url_lte: String
  name: String
  name_in: [String]
}

input SpellSubclassUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input SpellUpdateInput {
  damage_unset: Boolean
  concentration: Boolean
  name: String
  school: SpellSchoolUpdateInput
  subclasses_unset: Boolean
  ritual_unset: Boolean
  duration: String
  casting_time_unset: Boolean
  school_unset: Boolean
  index_unset: Boolean
  level_unset: Boolean
  duration_unset: Boolean
  subclasses: [SpellSubclassUpdateInput]
  dc: SpellDcUpdateInput
  classes_unset: Boolean
  desc_unset: Boolean
  higher_level: [String]
  _id: ObjectId
  casting_time: String
  dc_unset: Boolean
  classes: [SpellClassUpdateInput]
  area_of_effect_unset: Boolean
  range: String
  range_unset: Boolean
  components_unset: Boolean
  level_inc: Int
  level: Int
  ritual: Boolean
  material: String
  components: [String]
  material_unset: Boolean
  name_unset: Boolean
  heal_at_slot_level_unset: Boolean
  higher_level_unset: Boolean
  concentration_unset: Boolean
  damage: SpellDamageUpdateInput
  url: String
  heal_at_slot_level: SpellHeal_at_slot_levelUpdateInput
  area_of_effect: SpellArea_of_effectUpdateInput
  attack_type_unset: Boolean
  desc: [String]
  index: String
  _id_unset: Boolean
  url_unset: Boolean
  attack_type: String
}

type Startingequipment {
  _id: ObjectId
  class: StartingequipmentClass
  index: String
  starting_equipment: [StartingequipmentStarting_equipment]
  starting_equipment_options: [StartingequipmentStarting_equipment_option]
  url: String
}

type StartingequipmentClass {
  index: String
  name: String
  url: String
}

input StartingequipmentClassInsertInput {
  url: String
  index: String
  name: String
}

input StartingequipmentClassQueryInput {
  index_lte: String
  url_in: [String]
  name_nin: [String]
  name_gt: String
  index_nin: [String]
  url_gte: String
  name_ne: String
  index_ne: String
  index_gt: String
  url_nin: [String]
  index_lt: String
  index_exists: Boolean
  name_in: [String]
  url_ne: String
  index: String
  index_gte: String
  name_exists: Boolean
  AND: [StartingequipmentClassQueryInput!]
  name: String
  name_lt: String
  url: String
  url_lt: String
  index_in: [String]
  url_gt: String
  name_gte: String
  url_exists: Boolean
  OR: [StartingequipmentClassQueryInput!]
  name_lte: String
  url_lte: String
}

input StartingequipmentClassUpdateInput {
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
}

input StartingequipmentInsertInput {
  starting_equipment: [StartingequipmentStarting_equipmentInsertInput]
  starting_equipment_options: [StartingequipmentStarting_equipment_optionInsertInput]
  url: String
  _id: ObjectId
  class: StartingequipmentClassInsertInput
  index: String
}

input StartingequipmentQueryInput {
  _id_in: [ObjectId]
  index_exists: Boolean
  starting_equipment: [StartingequipmentStarting_equipmentQueryInput]
  _id_gt: ObjectId
  starting_equipment_options_nin: [StartingequipmentStarting_equipment_optionQueryInput]
  index_gt: String
  url: String
  starting_equipment_options: [StartingequipmentStarting_equipment_optionQueryInput]
  _id_lte: ObjectId
  url_exists: Boolean
  _id_gte: ObjectId
  _id_exists: Boolean
  AND: [StartingequipmentQueryInput!]
  index_nin: [String]
  url_lte: String
  starting_equipment_exists: Boolean
  url_gte: String
  index_gte: String
  _id_ne: ObjectId
  _id_lt: ObjectId
  _id: ObjectId
  starting_equipment_nin: [StartingequipmentStarting_equipmentQueryInput]
  url_nin: [String]
  url_gt: String
  _id_nin: [ObjectId]
  index: String
  class: StartingequipmentClassQueryInput
  class_exists: Boolean
  index_in: [String]
  index_lte: String
  starting_equipment_options_in: [StartingequipmentStarting_equipment_optionQueryInput]
  index_lt: String
  url_in: [String]
  url_ne: String
  starting_equipment_in: [StartingequipmentStarting_equipmentQueryInput]
  url_lt: String
  index_ne: String
  starting_equipment_options_exists: Boolean
  OR: [StartingequipmentQueryInput!]
}

enum StartingequipmentSortByInput {
  INDEX_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
}

type StartingequipmentStarting_equipment {
  equipment: StartingequipmentStarting_equipmentEquipment
  quantity: Int
}

type StartingequipmentStarting_equipment_option {
  choose: Int
  from: [StartingequipmentStarting_equipment_optionFrom]
  type: String
}

type StartingequipmentStarting_equipment_optionFrom {
  equipment: StartingequipmentStarting_equipment_optionFromEquipment
  quantity: Int
}

type StartingequipmentStarting_equipment_optionFromEquipment {
  index: String
  name: String
  url: String
}

input StartingequipmentStarting_equipment_optionFromEquipmentInsertInput {
  index: String
  name: String
  url: String
}

input StartingequipmentStarting_equipment_optionFromEquipmentQueryInput {
  url_in: [String]
  AND: [StartingequipmentStarting_equipment_optionFromEquipmentQueryInput!]
  index: String
  name_exists: Boolean
  url_gte: String
  index_nin: [String]
  name_gt: String
  OR: [StartingequipmentStarting_equipment_optionFromEquipmentQueryInput!]
  url_lt: String
  url_nin: [String]
  index_gt: String
  name_lt: String
  url_ne: String
  index_gte: String
  name_in: [String]
  url_exists: Boolean
  name_ne: String
  name: String
  index_exists: Boolean
  url_gt: String
  index_ne: String
  url_lte: String
  name_lte: String
  index_lte: String
  name_nin: [String]
  index_lt: String
  index_in: [String]
  name_gte: String
  url: String
}

input StartingequipmentStarting_equipment_optionFromEquipmentUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input StartingequipmentStarting_equipment_optionFromInsertInput {
  quantity: Int
  equipment: StartingequipmentStarting_equipment_optionFromEquipmentInsertInput
}

input StartingequipmentStarting_equipment_optionFromQueryInput {
  AND: [StartingequipmentStarting_equipment_optionFromQueryInput!]
  quantity_in: [Int]
  quantity_gt: Int
  quantity: Int
  quantity_lt: Int
  quantity_nin: [Int]
  quantity_ne: Int
  equipment_exists: Boolean
  quantity_gte: Int
  equipment: StartingequipmentStarting_equipment_optionFromEquipmentQueryInput
  quantity_lte: Int
  quantity_exists: Boolean
  OR: [StartingequipmentStarting_equipment_optionFromQueryInput!]
}

input StartingequipmentStarting_equipment_optionFromUpdateInput {
  quantity: Int
  quantity_inc: Int
  quantity_unset: Boolean
  equipment: StartingequipmentStarting_equipment_optionFromEquipmentUpdateInput
  equipment_unset: Boolean
}

input StartingequipmentStarting_equipment_optionInsertInput {
  choose: Int
  from: [StartingequipmentStarting_equipment_optionFromInsertInput]
  type: String
}

input StartingequipmentStarting_equipment_optionQueryInput {
  choose_lt: Int
  choose_gte: Int
  from_exists: Boolean
  type: String
  choose_gt: Int
  choose_lte: Int
  type_lt: String
  OR: [StartingequipmentStarting_equipment_optionQueryInput!]
  type_nin: [String]
  from_nin: [StartingequipmentStarting_equipment_optionFromQueryInput]
  type_lte: String
  type_in: [String]
  type_gt: String
  choose_exists: Boolean
  from: [StartingequipmentStarting_equipment_optionFromQueryInput]
  choose_in: [Int]
  choose_nin: [Int]
  type_exists: Boolean
  AND: [StartingequipmentStarting_equipment_optionQueryInput!]
  from_in: [StartingequipmentStarting_equipment_optionFromQueryInput]
  type_ne: String
  choose: Int
  choose_ne: Int
  type_gte: String
}

input StartingequipmentStarting_equipment_optionUpdateInput {
  from: [StartingequipmentStarting_equipment_optionFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
}

type StartingequipmentStarting_equipmentEquipment {
  index: String
  name: String
  url: String
}

input StartingequipmentStarting_equipmentEquipmentInsertInput {
  name: String
  url: String
  index: String
}

input StartingequipmentStarting_equipmentEquipmentQueryInput {
  name_lte: String
  OR: [StartingequipmentStarting_equipmentEquipmentQueryInput!]
  name_lt: String
  index_exists: Boolean
  index_lt: String
  AND: [StartingequipmentStarting_equipmentEquipmentQueryInput!]
  name_gte: String
  index_in: [String]
  index: String
  name_in: [String]
  url_lte: String
  url_nin: [String]
  name_gt: String
  index_lte: String
  name_ne: String
  index_ne: String
  name_nin: [String]
  index_gt: String
  url_gt: String
  index_nin: [String]
  url: String
  name_exists: Boolean
  url_exists: Boolean
  name: String
  url_in: [String]
  url_lt: String
  index_gte: String
  url_ne: String
  url_gte: String
}

input StartingequipmentStarting_equipmentEquipmentUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input StartingequipmentStarting_equipmentInsertInput {
  quantity: Int
  equipment: StartingequipmentStarting_equipmentEquipmentInsertInput
}

input StartingequipmentStarting_equipmentQueryInput {
  AND: [StartingequipmentStarting_equipmentQueryInput!]
  equipment: StartingequipmentStarting_equipmentEquipmentQueryInput
  quantity_lt: Int
  quantity_exists: Boolean
  quantity_gte: Int
  quantity_lte: Int
  equipment_exists: Boolean
  quantity_ne: Int
  OR: [StartingequipmentStarting_equipmentQueryInput!]
  quantity_in: [Int]
  quantity_nin: [Int]
  quantity: Int
  quantity_gt: Int
}

input StartingequipmentStarting_equipmentUpdateInput {
  quantity: Int
  quantity_inc: Int
  quantity_unset: Boolean
  equipment: StartingequipmentStarting_equipmentEquipmentUpdateInput
  equipment_unset: Boolean
}

input StartingequipmentUpdateInput {
  starting_equipment: [StartingequipmentStarting_equipmentUpdateInput]
  starting_equipment_unset: Boolean
  starting_equipment_options_unset: Boolean
  _id: ObjectId
  url: String
  class: StartingequipmentClassUpdateInput
  class_unset: Boolean
  url_unset: Boolean
  _id_unset: Boolean
  index: String
  index_unset: Boolean
  starting_equipment_options: [StartingequipmentStarting_equipment_optionUpdateInput]
}

type Subclass {
  _id: ObjectId
  class: SubclassClass
  desc: [String]
  index: String
  name: String
  spells: [SubclassSpell]
  subclass_flavor: String
  subclass_levels: String
  url: String
}

type SubclassClass {
  index: String
  name: String
  url: String
}

input SubclassClassInsertInput {
  url: String
  index: String
  name: String
}

input SubclassClassQueryInput {
  index_gt: String
  name_lt: String
  index_exists: Boolean
  name_gt: String
  name_lte: String
  url_gte: String
  index: String
  index_ne: String
  index_lte: String
  name_gte: String
  url: String
  index_lt: String
  url_in: [String]
  url_nin: [String]
  index_gte: String
  url_ne: String
  name_nin: [String]
  name_ne: String
  name_in: [String]
  OR: [SubclassClassQueryInput!]
  index_in: [String]
  name_exists: Boolean
  index_nin: [String]
  url_lte: String
  name: String
  url_gt: String
  AND: [SubclassClassQueryInput!]
  url_lt: String
  url_exists: Boolean
}

input SubclassClassUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input SubclassInsertInput {
  _id: ObjectId
  subclass_levels: String
  spells: [SubclassSpellInsertInput]
  url: String
  index: String
  subclass_flavor: String
  desc: [String]
  class: SubclassClassInsertInput
  name: String
}

input SubclassQueryInput {
  index_lt: String
  index_nin: [String]
  subclass_levels_lte: String
  subclass_levels_lt: String
  OR: [SubclassQueryInput!]
  index_in: [String]
  class: SubclassClassQueryInput
  desc_in: [String]
  AND: [SubclassQueryInput!]
  index_lte: String
  subclass_flavor_ne: String
  name_exists: Boolean
  subclass_flavor_nin: [String]
  _id_gt: ObjectId
  subclass_levels_gte: String
  url_nin: [String]
  desc_exists: Boolean
  spells: [SubclassSpellQueryInput]
  _id_nin: [ObjectId]
  _id_ne: ObjectId
  desc: [String]
  subclass_levels_exists: Boolean
  desc_nin: [String]
  subclass_flavor_gt: String
  url: String
  subclass_levels_in: [String]
  url_lte: String
  index_exists: Boolean
  subclass_levels_ne: String
  index: String
  url_gte: String
  index_gt: String
  _id: ObjectId
  _id_exists: Boolean
  url_in: [String]
  index_gte: String
  subclass_flavor: String
  url_gt: String
  name: String
  spells_nin: [SubclassSpellQueryInput]
  name_gte: String
  subclass_levels_gt: String
  name_ne: String
  spells_in: [SubclassSpellQueryInput]
  subclass_flavor_exists: Boolean
  name_in: [String]
  name_gt: String
  _id_gte: ObjectId
  spells_exists: Boolean
  subclass_levels: String
  _id_in: [ObjectId]
  subclass_flavor_lt: String
  index_ne: String
  url_exists: Boolean
  _id_lte: ObjectId
  url_ne: String
  subclass_flavor_gte: String
  name_lt: String
  _id_lt: ObjectId
  url_lt: String
  class_exists: Boolean
  name_nin: [String]
  name_lte: String
  subclass_levels_nin: [String]
  subclass_flavor_lte: String
  subclass_flavor_in: [String]
}

enum SubclassSortByInput {
  NAME_ASC
  SUBCLASS_FLAVOR_ASC
  _ID_ASC
  _ID_DESC
  URL_ASC
  INDEX_DESC
  NAME_DESC
  SUBCLASS_FLAVOR_DESC
  SUBCLASS_LEVELS_ASC
  SUBCLASS_LEVELS_DESC
  URL_DESC
  INDEX_ASC
}

type SubclassSpell {
  prerequisites: [SubclassSpellPrerequisite]
  spell: SubclassSpellSpell
}

input SubclassSpellInsertInput {
  prerequisites: [SubclassSpellPrerequisiteInsertInput]
  spell: SubclassSpellSpellInsertInput
}

type SubclassSpellPrerequisite {
  index: String
  name: String
  type: String
  url: String
}

input SubclassSpellPrerequisiteInsertInput {
  index: String
  name: String
  type: String
  url: String
}

input SubclassSpellPrerequisiteQueryInput {
  name_gt: String
  index_in: [String]
  url_gte: String
  name: String
  name_nin: [String]
  url_nin: [String]
  index_exists: Boolean
  index_gte: String
  name_lte: String
  name_in: [String]
  url_lt: String
  type_nin: [String]
  type_exists: Boolean
  name_lt: String
  url_lte: String
  type_gte: String
  type: String
  name_ne: String
  url_exists: Boolean
  url_in: [String]
  name_exists: Boolean
  type_in: [String]
  index_lt: String
  type_ne: String
  index: String
  index_lte: String
  index_nin: [String]
  index_ne: String
  url_gt: String
  OR: [SubclassSpellPrerequisiteQueryInput!]
  type_lte: String
  type_lt: String
  type_gt: String
  url: String
  name_gte: String
  index_gt: String
  AND: [SubclassSpellPrerequisiteQueryInput!]
  url_ne: String
}

input SubclassSpellPrerequisiteUpdateInput {
  type: String
  type_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

input SubclassSpellQueryInput {
  prerequisites_nin: [SubclassSpellPrerequisiteQueryInput]
  prerequisites_exists: Boolean
  spell: SubclassSpellSpellQueryInput
  spell_exists: Boolean
  AND: [SubclassSpellQueryInput!]
  OR: [SubclassSpellQueryInput!]
  prerequisites: [SubclassSpellPrerequisiteQueryInput]
  prerequisites_in: [SubclassSpellPrerequisiteQueryInput]
}

type SubclassSpellSpell {
  index: String
  name: String
  url: String
}

input SubclassSpellSpellInsertInput {
  url: String
  index: String
  name: String
}

input SubclassSpellSpellQueryInput {
  index_exists: Boolean
  name_gt: String
  index_ne: String
  index: String
  OR: [SubclassSpellSpellQueryInput!]
  url_in: [String]
  AND: [SubclassSpellSpellQueryInput!]
  name_gte: String
  name_in: [String]
  name_ne: String
  url_gte: String
  index_in: [String]
  name_lte: String
  url_lt: String
  index_gte: String
  url_lte: String
  url_exists: Boolean
  index_nin: [String]
  index_gt: String
  name: String
  name_exists: Boolean
  index_lt: String
  name_nin: [String]
  url_nin: [String]
  url: String
  url_gt: String
  url_ne: String
  name_lt: String
  index_lte: String
}

input SubclassSpellSpellUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input SubclassSpellUpdateInput {
  prerequisites: [SubclassSpellPrerequisiteUpdateInput]
  prerequisites_unset: Boolean
  spell: SubclassSpellSpellUpdateInput
  spell_unset: Boolean
}

input SubclassUpdateInput {
  index: String
  class_unset: Boolean
  desc: [String]
  name_unset: Boolean
  class: SubclassClassUpdateInput
  _id_unset: Boolean
  subclass_levels: String
  subclass_flavor: String
  index_unset: Boolean
  subclass_levels_unset: Boolean
  desc_unset: Boolean
  spells: [SubclassSpellUpdateInput]
  spells_unset: Boolean
  _id: ObjectId
  name: String
  url_unset: Boolean
  url: String
  subclass_flavor_unset: Boolean
}

type Subrace {
  _id: ObjectId
  ability_bonuses: [SubraceAbility_bonuse]
  desc: String
  index: String
  language_options: SubraceLanguage_option
  name: String
  race: SubraceRace
  racial_trait_options: SubraceRacial_trait_option
  racial_traits: [SubraceRacial_trait]
  starting_proficiencies: [SubraceStarting_proficiency]
  url: String
}

type SubraceAbility_bonuse {
  bonus: Int
  index: String
  name: String
  url: String
}

input SubraceAbility_bonuseInsertInput {
  url: String
  bonus: Int
  index: String
  name: String
}

input SubraceAbility_bonuseQueryInput {
  url_gt: String
  url_exists: Boolean
  index_exists: Boolean
  bonus_nin: [Int]
  bonus_ne: Int
  AND: [SubraceAbility_bonuseQueryInput!]
  url_lte: String
  url_nin: [String]
  bonus: Int
  index_gt: String
  index_gte: String
  url_ne: String
  bonus_gte: Int
  index: String
  OR: [SubraceAbility_bonuseQueryInput!]
  name_lt: String
  url_in: [String]
  url_gte: String
  bonus_exists: Boolean
  index_lte: String
  name_exists: Boolean
  name_gt: String
  name: String
  bonus_lte: Int
  index_ne: String
  name_gte: String
  bonus_lt: Int
  name_nin: [String]
  bonus_in: [Int]
  bonus_gt: Int
  name_in: [String]
  url_lt: String
  index_lt: String
  index_nin: [String]
  url: String
  index_in: [String]
  name_ne: String
  name_lte: String
}

input SubraceAbility_bonuseUpdateInput {
  name: String
  bonus_inc: Int
  bonus_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  bonus: Int
  name_unset: Boolean
  index_unset: Boolean
}

input SubraceInsertInput {
  racial_traits: [SubraceRacial_traitInsertInput]
  _id: ObjectId
  ability_bonuses: [SubraceAbility_bonuseInsertInput]
  language_options: SubraceLanguage_optionInsertInput
  race: SubraceRaceInsertInput
  index: String
  racial_trait_options: SubraceRacial_trait_optionInsertInput
  desc: String
  starting_proficiencies: [SubraceStarting_proficiencyInsertInput]
  name: String
  url: String
}

type SubraceLanguage_option {
  choose: Int
  from: [SubraceLanguage_optionFrom]
  type: String
}

type SubraceLanguage_optionFrom {
  index: String
  name: String
  url: String
}

input SubraceLanguage_optionFromInsertInput {
  index: String
  name: String
  url: String
}

input SubraceLanguage_optionFromQueryInput {
  url_lt: String
  name_ne: String
  OR: [SubraceLanguage_optionFromQueryInput!]
  url_exists: Boolean
  url_nin: [String]
  index: String
  index_nin: [String]
  index_exists: Boolean
  url_in: [String]
  index_gte: String
  name_gt: String
  name_lte: String
  index_ne: String
  AND: [SubraceLanguage_optionFromQueryInput!]
  name_exists: Boolean
  index_lt: String
  name_in: [String]
  name_lt: String
  url_gte: String
  name: String
  index_gt: String
  url: String
  name_gte: String
  index_in: [String]
  name_nin: [String]
  url_ne: String
  url_gt: String
  index_lte: String
  url_lte: String
}

input SubraceLanguage_optionFromUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input SubraceLanguage_optionInsertInput {
  choose: Int
  from: [SubraceLanguage_optionFromInsertInput]
  type: String
}

input SubraceLanguage_optionQueryInput {
  OR: [SubraceLanguage_optionQueryInput!]
  choose_ne: Int
  type_exists: Boolean
  type_ne: String
  type_gt: String
  choose_gte: Int
  choose_gt: Int
  choose_lt: Int
  from_nin: [SubraceLanguage_optionFromQueryInput]
  type_nin: [String]
  from_exists: Boolean
  type_lt: String
  choose_lte: Int
  choose_in: [Int]
  AND: [SubraceLanguage_optionQueryInput!]
  from: [SubraceLanguage_optionFromQueryInput]
  type_lte: String
  type_in: [String]
  choose: Int
  type_gte: String
  choose_exists: Boolean
  type: String
  choose_nin: [Int]
  from_in: [SubraceLanguage_optionFromQueryInput]
}

input SubraceLanguage_optionUpdateInput {
  choose_inc: Int
  choose_unset: Boolean
  from: [SubraceLanguage_optionFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
  choose: Int
}

input SubraceQueryInput {
  race: SubraceRaceQueryInput
  name_gt: String
  name_lte: String
  _id_in: [ObjectId]
  name_lt: String
  url_exists: Boolean
  racial_traits_nin: [SubraceRacial_traitQueryInput]
  desc_gt: String
  desc_lte: String
  _id_ne: ObjectId
  desc_nin: [String]
  url_gte: String
  url_nin: [String]
  starting_proficiencies_in: [SubraceStarting_proficiencyQueryInput]
  racial_traits: [SubraceRacial_traitQueryInput]
  name_ne: String
  index_ne: String
  language_options: SubraceLanguage_optionQueryInput
  _id_exists: Boolean
  desc: String
  ability_bonuses_exists: Boolean
  url_in: [String]
  index_in: [String]
  racial_trait_options_exists: Boolean
  ability_bonuses: [SubraceAbility_bonuseQueryInput]
  name_in: [String]
  name_nin: [String]
  desc_ne: String
  _id_lte: ObjectId
  index_exists: Boolean
  url_lt: String
  _id_gt: ObjectId
  url_lte: String
  url: String
  language_options_exists: Boolean
  index_gt: String
  desc_lt: String
  starting_proficiencies_nin: [SubraceStarting_proficiencyQueryInput]
  index_lt: String
  _id_gte: ObjectId
  racial_traits_exists: Boolean
  _id: ObjectId
  index_nin: [String]
  name_exists: Boolean
  index_lte: String
  OR: [SubraceQueryInput!]
  desc_exists: Boolean
  name: String
  _id_lt: ObjectId
  starting_proficiencies_exists: Boolean
  race_exists: Boolean
  desc_in: [String]
  url_ne: String
  _id_nin: [ObjectId]
  name_gte: String
  ability_bonuses_nin: [SubraceAbility_bonuseQueryInput]
  desc_gte: String
  starting_proficiencies: [SubraceStarting_proficiencyQueryInput]
  index: String
  racial_trait_options: SubraceRacial_trait_optionQueryInput
  ability_bonuses_in: [SubraceAbility_bonuseQueryInput]
  AND: [SubraceQueryInput!]
  url_gt: String
  racial_traits_in: [SubraceRacial_traitQueryInput]
  index_gte: String
}

type SubraceRace {
  index: String
  name: String
  url: String
}

input SubraceRaceInsertInput {
  url: String
  index: String
  name: String
}

input SubraceRaceQueryInput {
  name_lt: String
  index_in: [String]
  OR: [SubraceRaceQueryInput!]
  name_nin: [String]
  index_gt: String
  name_exists: Boolean
  index: String
  url_lt: String
  name_gt: String
  url_exists: Boolean
  index_gte: String
  AND: [SubraceRaceQueryInput!]
  url_gte: String
  name: String
  name_lte: String
  url_ne: String
  url_nin: [String]
  index_ne: String
  index_nin: [String]
  name_ne: String
  url: String
  url_gt: String
  url_lte: String
  index_lt: String
  index_exists: Boolean
  name_in: [String]
  index_lte: String
  url_in: [String]
  name_gte: String
}

input SubraceRaceUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

type SubraceRacial_trait {
  index: String
  name: String
  url: String
}

type SubraceRacial_trait_option {
  choose: Int
  from: [SubraceRacial_trait_optionFrom]
  type: String
}

type SubraceRacial_trait_optionFrom {
  index: String
  name: String
  url: String
}

input SubraceRacial_trait_optionFromInsertInput {
  index: String
  name: String
  url: String
}

input SubraceRacial_trait_optionFromQueryInput {
  name_gt: String
  name_lte: String
  name_gte: String
  url_lte: String
  index: String
  name: String
  url_gte: String
  index_gt: String
  index_nin: [String]
  url_gt: String
  url_nin: [String]
  name_nin: [String]
  index_ne: String
  OR: [SubraceRacial_trait_optionFromQueryInput!]
  index_in: [String]
  index_exists: Boolean
  name_in: [String]
  AND: [SubraceRacial_trait_optionFromQueryInput!]
  url_ne: String
  index_gte: String
  url: String
  name_exists: Boolean
  url_exists: Boolean
  index_lt: String
  url_in: [String]
  name_ne: String
  url_lt: String
  name_lt: String
  index_lte: String
}

input SubraceRacial_trait_optionFromUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input SubraceRacial_trait_optionInsertInput {
  choose: Int
  from: [SubraceRacial_trait_optionFromInsertInput]
  type: String
}

input SubraceRacial_trait_optionQueryInput {
  from_nin: [SubraceRacial_trait_optionFromQueryInput]
  choose_exists: Boolean
  from: [SubraceRacial_trait_optionFromQueryInput]
  choose_gt: Int
  choose_lte: Int
  AND: [SubraceRacial_trait_optionQueryInput!]
  type_ne: String
  choose_gte: Int
  choose_lt: Int
  type_gt: String
  OR: [SubraceRacial_trait_optionQueryInput!]
  type_in: [String]
  type_gte: String
  from_in: [SubraceRacial_trait_optionFromQueryInput]
  type_exists: Boolean
  from_exists: Boolean
  type: String
  choose_in: [Int]
  choose_nin: [Int]
  type_nin: [String]
  type_lt: String
  choose_ne: Int
  type_lte: String
  choose: Int
}

input SubraceRacial_trait_optionUpdateInput {
  from: [SubraceRacial_trait_optionFromUpdateInput]
  from_unset: Boolean
  type: String
  type_unset: Boolean
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
}

input SubraceRacial_traitInsertInput {
  url: String
  index: String
  name: String
}

input SubraceRacial_traitQueryInput {
  index_gt: String
  AND: [SubraceRacial_traitQueryInput!]
  url_gt: String
  url_lt: String
  name_exists: Boolean
  index_exists: Boolean
  name_lt: String
  index_lt: String
  url_exists: Boolean
  name_in: [String]
  url_nin: [String]
  name: String
  OR: [SubraceRacial_traitQueryInput!]
  url: String
  name_gte: String
  index_ne: String
  name_ne: String
  url_lte: String
  name_gt: String
  index: String
  url_in: [String]
  url_gte: String
  index_gte: String
  index_lte: String
  name_lte: String
  url_ne: String
  index_nin: [String]
  index_in: [String]
  name_nin: [String]
}

input SubraceRacial_traitUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

enum SubraceSortByInput {
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  DESC_ASC
  DESC_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
}

type SubraceStarting_proficiency {
  index: String
  name: String
  url: String
}

input SubraceStarting_proficiencyInsertInput {
  name: String
  url: String
  index: String
}

input SubraceStarting_proficiencyQueryInput {
  name_lte: String
  index_gt: String
  OR: [SubraceStarting_proficiencyQueryInput!]
  url_lte: String
  url_exists: Boolean
  name_ne: String
  index_nin: [String]
  index_exists: Boolean
  url_gt: String
  name: String
  url_ne: String
  name_in: [String]
  name_nin: [String]
  index_in: [String]
  index_ne: String
  url: String
  name_gt: String
  name_exists: Boolean
  index_gte: String
  url_gte: String
  index: String
  name_lt: String
  url_nin: [String]
  AND: [SubraceStarting_proficiencyQueryInput!]
  url_lt: String
  index_lte: String
  index_lt: String
  name_gte: String
  url_in: [String]
}

input SubraceStarting_proficiencyUpdateInput {
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
}

input SubraceUpdateInput {
  racial_traits: [SubraceRacial_traitUpdateInput]
  url_unset: Boolean
  race: SubraceRaceUpdateInput
  racial_traits_unset: Boolean
  starting_proficiencies_unset: Boolean
  starting_proficiencies: [SubraceStarting_proficiencyUpdateInput]
  desc: String
  ability_bonuses: [SubraceAbility_bonuseUpdateInput]
  ability_bonuses_unset: Boolean
  name_unset: Boolean
  desc_unset: Boolean
  language_options: SubraceLanguage_optionUpdateInput
  _id_unset: Boolean
  name: String
  url: String
  index: String
  race_unset: Boolean
  index_unset: Boolean
  racial_trait_options_unset: Boolean
  language_options_unset: Boolean
  racial_trait_options: SubraceRacial_trait_optionUpdateInput
  _id: ObjectId
}

type Trait {
  _id: ObjectId
  desc: [String]
  index: String
  name: String
  proficiencies: [TraitProficiency]
  proficiency_choices: TraitProficiency_choice
  races: [TraitRace]
  subraces: [TraitSubrace]
  url: String
}

input TraitInsertInput {
  index: String
  proficiencies: [TraitProficiencyInsertInput]
  _id: ObjectId
  subraces: [TraitSubraceInsertInput]
  desc: [String]
  name: String
  races: [TraitRaceInsertInput]
  url: String
  proficiency_choices: TraitProficiency_choiceInsertInput
}

type TraitProficiency {
  index: String
  name: String
  url: String
}

type TraitProficiency_choice {
  choose: Int
  from: [TraitProficiency_choiceFrom]
  type: String
}

type TraitProficiency_choiceFrom {
  index: String
  name: String
  url: String
}

input TraitProficiency_choiceFromInsertInput {
  url: String
  index: String
  name: String
}

input TraitProficiency_choiceFromQueryInput {
  name_lt: String
  name_nin: [String]
  url_in: [String]
  index: String
  name_in: [String]
  url_lte: String
  index_lte: String
  name_ne: String
  OR: [TraitProficiency_choiceFromQueryInput!]
  index_lt: String
  name_lte: String
  url_gte: String
  index_exists: Boolean
  url: String
  name_exists: Boolean
  url_exists: Boolean
  AND: [TraitProficiency_choiceFromQueryInput!]
  name_gt: String
  index_ne: String
  url_lt: String
  name: String
  index_gte: String
  url_gt: String
  index_gt: String
  url_nin: [String]
  name_gte: String
  index_in: [String]
  url_ne: String
  index_nin: [String]
}

input TraitProficiency_choiceFromUpdateInput {
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
}

input TraitProficiency_choiceInsertInput {
  type: String
  choose: Int
  from: [TraitProficiency_choiceFromInsertInput]
}

input TraitProficiency_choiceQueryInput {
  choose: Int
  type_gte: String
  from_in: [TraitProficiency_choiceFromQueryInput]
  AND: [TraitProficiency_choiceQueryInput!]
  choose_lt: Int
  type_lte: String
  type_exists: Boolean
  type_gt: String
  from_exists: Boolean
  choose_ne: Int
  OR: [TraitProficiency_choiceQueryInput!]
  choose_nin: [Int]
  from: [TraitProficiency_choiceFromQueryInput]
  choose_gt: Int
  type_nin: [String]
  choose_gte: Int
  choose_lte: Int
  type_in: [String]
  type: String
  choose_exists: Boolean
  type_lt: String
  type_ne: String
  from_nin: [TraitProficiency_choiceFromQueryInput]
  choose_in: [Int]
}

input TraitProficiency_choiceUpdateInput {
  type_unset: Boolean
  choose: Int
  choose_inc: Int
  choose_unset: Boolean
  from: [TraitProficiency_choiceFromUpdateInput]
  from_unset: Boolean
  type: String
}

input TraitProficiencyInsertInput {
  index: String
  name: String
  url: String
}

input TraitProficiencyQueryInput {
  OR: [TraitProficiencyQueryInput!]
  name_gte: String
  name_nin: [String]
  index_lt: String
  name_gt: String
  url_exists: Boolean
  name_in: [String]
  index_gte: String
  index_nin: [String]
  index_lte: String
  url_lte: String
  url_lt: String
  AND: [TraitProficiencyQueryInput!]
  index_in: [String]
  url_in: [String]
  url_gte: String
  name_ne: String
  url_gt: String
  index: String
  index_exists: Boolean
  url_ne: String
  name_lt: String
  index_gt: String
  name_exists: Boolean
  name_lte: String
  index_ne: String
  url: String
  url_nin: [String]
  name: String
}

input TraitProficiencyUpdateInput {
  name: String
  name_unset: Boolean
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
}

input TraitQueryInput {
  _id_lte: ObjectId
  index_exists: Boolean
  subraces_nin: [TraitSubraceQueryInput]
  name_ne: String
  index_gte: String
  _id_ne: ObjectId
  races_nin: [TraitRaceQueryInput]
  subraces: [TraitSubraceQueryInput]
  _id_in: [ObjectId]
  name_lt: String
  name_nin: [String]
  proficiencies_exists: Boolean
  OR: [TraitQueryInput!]
  _id_gt: ObjectId
  url_in: [String]
  index_in: [String]
  url_exists: Boolean
  _id_exists: Boolean
  url_ne: String
  name_gt: String
  index_lt: String
  races_in: [TraitRaceQueryInput]
  desc_exists: Boolean
  name_in: [String]
  _id_lt: ObjectId
  subraces_exists: Boolean
  subraces_in: [TraitSubraceQueryInput]
  proficiencies_nin: [TraitProficiencyQueryInput]
  races_exists: Boolean
  proficiency_choices_exists: Boolean
  url_nin: [String]
  url: String
  index_ne: String
  index: String
  name_gte: String
  proficiencies: [TraitProficiencyQueryInput]
  desc_nin: [String]
  url_gt: String
  name: String
  _id_gte: ObjectId
  _id: ObjectId
  AND: [TraitQueryInput!]
  proficiency_choices: TraitProficiency_choiceQueryInput
  proficiencies_in: [TraitProficiencyQueryInput]
  index_lte: String
  name_exists: Boolean
  url_gte: String
  _id_nin: [ObjectId]
  desc: [String]
  url_lt: String
  index_nin: [String]
  races: [TraitRaceQueryInput]
  desc_in: [String]
  name_lte: String
  index_gt: String
  url_lte: String
}

type TraitRace {
  index: String
  name: String
  url: String
}

input TraitRaceInsertInput {
  index: String
  name: String
  url: String
}

input TraitRaceQueryInput {
  name_ne: String
  OR: [TraitRaceQueryInput!]
  index_in: [String]
  AND: [TraitRaceQueryInput!]
  url_gt: String
  url_lte: String
  url_ne: String
  url_in: [String]
  index_exists: Boolean
  index_nin: [String]
  index_lt: String
  url: String
  url_exists: Boolean
  name_exists: Boolean
  url_nin: [String]
  index: String
  index_gte: String
  index_ne: String
  name: String
  index_gt: String
  name_nin: [String]
  name_gte: String
  url_gte: String
  name_gt: String
  index_lte: String
  name_in: [String]
  name_lt: String
  name_lte: String
  url_lt: String
}

input TraitRaceUpdateInput {
  url: String
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
}

enum TraitSortByInput {
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
}

type TraitSubrace {
  index: String
  name: String
  url: String
}

input TraitSubraceInsertInput {
  name: String
  url: String
  index: String
}

input TraitSubraceQueryInput {
  index: String
  url_lt: String
  url_gte: String
  url_lte: String
  name_gt: String
  name_lt: String
  name_exists: Boolean
  name: String
  index_gte: String
  url_nin: [String]
  AND: [TraitSubraceQueryInput!]
  name_ne: String
  index_in: [String]
  url_gt: String
  index_nin: [String]
  url_exists: Boolean
  index_ne: String
  url_ne: String
  index_lte: String
  index_lt: String
  url_in: [String]
  name_lte: String
  index_exists: Boolean
  name_gte: String
  name_nin: [String]
  url: String
  OR: [TraitSubraceQueryInput!]
  name_in: [String]
  index_gt: String
}

input TraitSubraceUpdateInput {
  url_unset: Boolean
  index: String
  index_unset: Boolean
  name: String
  name_unset: Boolean
  url: String
}

input TraitUpdateInput {
  proficiency_choices: TraitProficiency_choiceUpdateInput
  name: String
  name_unset: Boolean
  races: [TraitRaceUpdateInput]
  _id_unset: Boolean
  index: String
  races_unset: Boolean
  subraces_unset: Boolean
  index_unset: Boolean
  proficiencies: [TraitProficiencyUpdateInput]
  desc_unset: Boolean
  url: String
  url_unset: Boolean
  proficiencies_unset: Boolean
  proficiency_choices_unset: Boolean
  desc: [String]
  subraces: [TraitSubraceUpdateInput]
  _id: ObjectId
}

type UpdateManyPayload {
  matchedCount: Int!
  modifiedCount: Int!
}

type WeaponProperty {
  _id: ObjectId
  desc: [String]
  index: String
  name: String
  url: String
}

input WeaponPropertyInsertInput {
  index: String
  name: String
  url: String
  _id: ObjectId
  desc: [String]
}

input WeaponPropertyQueryInput {
  _id: ObjectId
  _id_exists: Boolean
  name: String
  url_gte: String
  index_lt: String
  name_gt: String
  desc_exists: Boolean
  _id_nin: [ObjectId]
  _id_in: [ObjectId]
  index_nin: [String]
  name_exists: Boolean
  url: String
  url_in: [String]
  _id_lte: ObjectId
  AND: [WeaponPropertyQueryInput!]
  _id_gt: ObjectId
  index_ne: String
  index_gt: String
  name_gte: String
  _id_gte: ObjectId
  url_ne: String
  url_exists: Boolean
  desc: [String]
  desc_nin: [String]
  OR: [WeaponPropertyQueryInput!]
  _id_ne: ObjectId
  desc_in: [String]
  name_lte: String
  url_gt: String
  url_lte: String
  name_lt: String
  index: String
  index_lte: String
  name_ne: String
  name_in: [String]
  url_lt: String
  _id_lt: ObjectId
  index_exists: Boolean
  url_nin: [String]
  index_in: [String]
  index_gte: String
  name_nin: [String]
}

enum WeaponPropertySortByInput {
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
}

input WeaponPropertyUpdateInput {
  name: String
  _id: ObjectId
  _id_unset: Boolean
  desc: [String]
  index: String
  index_unset: Boolean
  desc_unset: Boolean
  url: String
  url_unset: Boolean
  name_unset: Boolean
}
